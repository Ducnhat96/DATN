{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Dialog = require('@material-ui/core/Dialog');\n\nvar _Dialog2 = _interopRequireDefault(_Dialog);\n\nvar _DialogActions = require('@material-ui/core/DialogActions');\n\nvar _DialogActions2 = _interopRequireDefault(_DialogActions);\n\nvar _Button = require('@material-ui/core/Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Input = require('@material-ui/core/Input');\n\nvar _Input2 = _interopRequireDefault(_Input);\n\nvar _styles = require('@material-ui/core/styles');\n\nvar _TimePicker = require('./TimePicker');\n\nvar _TimePicker2 = _interopRequireDefault(_TimePicker);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar styles = {\n  header: {\n    borderTopLeftRadius: 2,\n    borderTopRightRadius: 2\n  },\n  body: {\n    paddingBottom: 20\n  }\n};\n\nvar TimeInput = function (_React$Component) {\n  _inherits(TimeInput, _React$Component);\n\n  function TimeInput(props) {\n    _classCallCheck(this, TimeInput);\n\n    var _this = _possibleConstructorReturn(this, (TimeInput.__proto__ || Object.getPrototypeOf(TimeInput)).call(this, props));\n\n    _this.showDialog = function () {\n      return _this.setState({\n        open: true,\n        newValue: _this.state.value\n      });\n    };\n\n    _this.handleChange = function (newValue) {\n      _this.setState({\n        newValue: newValue,\n        hasChanged: true\n      });\n    };\n\n    _this.handleOk = function () {\n      if (_this.props.onChange != null) {\n        _this.props.onChange(_this.state.newValue);\n      }\n\n      _this.setState({\n        open: false,\n        value: _this.state.newValue,\n        newValue: null\n      });\n    };\n\n    _this.handleCancel = function () {\n      return _this.setState({\n        open: false,\n        newValue: null\n      });\n    };\n\n    _this.getFormattedValue = function () {\n      var _this$props = _this.props,\n          mode = _this$props.mode,\n          placeholder = _this$props.placeholder;\n      var _this$state = _this.state,\n          value = _this$state.value,\n          hasChanged = _this$state.hasChanged;\n      var is12h = mode === '12h';\n      if (placeholder && !hasChanged) return placeholder; // Allow a null/undefined value for controlled inputs\n\n      if (_this.props.hasOwnProperty('value') && _this.props.value == null) {\n        return '';\n      }\n\n      var _formatHours = (0, _util.formatHours)(value.getHours(), mode),\n          hours = _formatHours.hours,\n          isPm = _formatHours.isPm;\n\n      var minutes = (0, _util.twoDigits)(value.getMinutes());\n      var displayHours = is12h ? hours : (0, _util.twoDigits)(value.getHours());\n      var ending = is12h ? isPm ? ' pm' : ' am' : '';\n      return displayHours + ':' + minutes + ending;\n    };\n\n    var defaultValue = new Date();\n    defaultValue.setSeconds(0);\n    defaultValue.setMilliseconds(0);\n    _this.state = {\n      open: false,\n      value: props.value || props.defaultValue || props.initialTime || defaultValue,\n      hasChanged: false\n    };\n    return _this;\n  }\n\n  _createClass(TimeInput, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.value !== this.props.value) {\n        this.setState({\n          value: nextProps.value\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          autoOk = _props.autoOk,\n          cancelLabel = _props.cancelLabel,\n          classes = _props.classes,\n          defaultValue = _props.defaultValue,\n          disabledProp = _props.disabled,\n          initialTime = _props.initialTime,\n          placeholder = _props.placeholder,\n          mode = _props.mode,\n          okLabel = _props.okLabel,\n          onChange = _props.onChange,\n          valueProp = _props.value,\n          other = _objectWithoutProperties(_props, ['autoOk', 'cancelLabel', 'classes', 'defaultValue', 'disabled', 'initialTime', 'placeholder', 'mode', 'okLabel', 'onChange', 'value']);\n\n      var newValue = this.state.newValue;\n      var muiFormControl = this.context.muiFormControl;\n      var disabled = disabledProp || muiFormControl != null && muiFormControl.disabled;\n      return [_react2.default.createElement(_Input2.default, _extends({}, other, {\n        disabled: disabled,\n        onClick: !disabled ? this.showDialog : null,\n        value: this.getFormattedValue(),\n        readOnly: true,\n        key: 'TimeInput-input'\n      })), _react2.default.createElement(_Dialog2.default, {\n        maxWidth: 'xs',\n        open: this.state.open,\n        key: 'TimeInput-dialog',\n        onClose: this.handleCancel\n      }, _react2.default.createElement(_TimePicker2.default, {\n        mode: mode,\n        value: newValue,\n        onChange: this.handleChange,\n        onMinutesSelected: autoOk ? this.handleOk : null,\n        classes: {\n          header: classes.header,\n          body: classes.body\n        }\n      }), _react2.default.createElement(_DialogActions2.default, null, _react2.default.createElement(_Button2.default, {\n        onClick: this.handleCancel,\n        color: 'primary'\n      }, cancelLabel), _react2.default.createElement(_Button2.default, {\n        onClick: this.handleOk,\n        color: 'primary'\n      }, okLabel)))];\n    }\n  }]);\n\n  return TimeInput;\n}(_react2.default.Component);\n\nTimeInput.propTypes = {\n  /** If true, automatically accept and close the picker on set minutes. */\n  autoOk: _propTypes2.default.bool,\n\n  /** Override the label of the cancel button. */\n  cancelLabel: _propTypes2.default.string,\n\n  /** This default value overrides initialTime and placeholder */\n  defaultValue: _propTypes2.default.instanceOf(Date),\n\n  /** The default value for the time picker */\n  initialTime: _propTypes2.default.instanceOf(Date),\n\n  /** The placeholder value for the time picker before a time has been selected */\n  placeholder: _propTypes2.default.string,\n\n  /** Sets the clock mode, 12-hour or 24-hour clocks are supported. */\n  mode: _propTypes2.default.oneOf(['12h', '24h']),\n\n  /** Override the label of the ok button. */\n  okLabel: _propTypes2.default.string,\n\n  /** Callback that is called with the new date (as Date instance) when the value is changed. */\n  onChange: _propTypes2.default.func,\n\n  /** The value of the time picker, for use in controlled mode. */\n  value: _propTypes2.default.instanceOf(Date)\n};\nTimeInput.defaultProps = {\n  autoOk: false,\n  cancelLabel: 'Cancel',\n  mode: '12h',\n  okLabel: 'Ok'\n};\nTimeInput.contextTypes = {\n  muiFormControl: _propTypes2.default.object\n};\nexports.default = (0, _styles.withStyles)(styles)(TimeInput);","map":null,"metadata":{},"sourceType":"script"}