{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Forms/ForgetPasswordForm.tsx\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, { Fragment, useMemo, useState, useContext } from \"react\";\nimport { compose } from \"recompose\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport * as animation from \"@/store/actions/animationTypes\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Input from \"@material-ui/core/Input/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText/FormHelperText\";\nimport { EmailInputAdornment } from \"@/components/Forms/LoginForm\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport UserIcon from \"@material-ui/icons/Person\";\nimport { axios } from \"@/utils/axiosInstance\";\nimport Blue from \"@material-ui/core/colors/blue\";\nimport AlignS from \"@/styles/Position/align.module.scss\";\nimport { GlobalContext } from \"@/store/context/GlobalContext\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent/SnackbarContent\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport Green from \"@material-ui/core/colors/green\";\nimport { Modal, Divider } from \"@material-ui/core\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport BG from \"@/assets/loginform.jpeg\";\nimport Grid from \"@material-ui/core/Grid\";\nvar FormValidationSchema = Yup.object().shape({\n  email: Yup.string().required(\"Vui lòng nhập email\").email(\"Địa chỉ email không hợp lệ\")\n});\nexport var PhoneInputAdornment = function PhoneInputAdornment(props) {\n  return React.createElement(InputAdornment, {\n    position: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(PhoneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })));\n};\nexport var UserInputAdornment = function UserInputAdornment(props) {\n  return React.createElement(InputAdornment, {\n    position: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(UserIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })));\n};\n\nvar styles = function styles(theme) {\n  var _modal;\n\n  return createStyles({\n    paper: {\n      width: theme.spacing.unit * 50,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 2\n    },\n    spaceTop: {\n      marginTop: 10\n    },\n    spinner: {\n      width: \"25px !important\",\n      height: \"25px !important\"\n    },\n    errorBag: {\n      padding: 10,\n      marginTop: 12,\n      marginBottom: 12\n    },\n    color: {\n      color: Blue[600],\n      cursor: \"pointer\"\n    },\n    closeButton: {\n      position: \"absolute\",\n      top: 0,\n      right: 0\n    },\n    message: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    successSnack: {\n      backgroundColor: Green[600]\n    },\n    modal: (_modal = {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: \"20vh\",\n      width: \"50%\",\n      overflow: \"hidden\",\n      borderRadius: 16,\n      \"&:focus\": {\n        outline: \"none\"\n      }\n    }, _defineProperty(_modal, theme.breakpoints.only(\"xs\"), {\n      width: \"90%\",\n      marginTop: \"10vh\"\n    }), _defineProperty(_modal, theme.breakpoints.only(\"sm\"), {\n      width: \"80%\",\n      marginTop: \"15vh\"\n    }), _defineProperty(_modal, theme.breakpoints.only(\"md\"), {\n      width: \"70%\",\n      marginTop: \"20vh\"\n    }), _modal),\n    backgroundLogin: {\n      backgroundImage: \"url(\".concat(BG, \")\"),\n      width: \"100%\",\n      height: \"auto\",\n      minHeight: \"100%\",\n      backgroundSize: \"cover\",\n      position: \"relative\"\n    },\n    title: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%,-50%)\",\n      width: \"65%\",\n      textAlign: \"center\",\n      color: \"#fff\"\n    },\n    description: {\n      fontSize: '16px',\n      fontWeight: 300\n    },\n    contentRight: {\n      padding: 16\n    }\n  });\n}; // @ts-ignore\n\n\nvar ForgetPasswordForm = function ForgetPasswordForm(props) {\n  var classes = props.classes,\n      animation = props.animation,\n      handleForgetPassword = props.handleForgetPassword,\n      handleLoginButton = props.handleLoginButton;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openSnack = _useState2[0],\n      setOpenSnack = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var _useContext = useContext(GlobalContext),\n      width = _useContext.width;\n\n  var formikInit = useMemo(function () {\n    return {\n      email: \"\"\n    };\n  }, []);\n\n  var handleModalClose = function handleModalClose() {\n    handleForgetPassword(false);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    open: animation.isForgetPasswordFormOpen,\n    onClose: handleModalClose,\n    disableAutoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(Zoom, {\n    in: animation.isForgetPasswordFormOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.modal,\n    elevation: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: classes.backgroundLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Kh\\xF4i ph\\u1EE5c l\\u1EA1i m\\u1EADt kh\\u1EA9u\")), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    className: classes.contentRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Nh\\u1EADp \\u0111\\u1ECBa ch\\u1EC9 email \\u0111\\xE3 \\u0111\\u0103ng k\\xFD c\\u1EE7a b\\u1EA1n \\u0111\\u1EC3 nh\\u1EADn h\\u01B0\\u1EDBng d\\u1EABn \\u0111\\u1EB7t l\\u1EA1i m\\u1EADt kh\\u1EA9u\"), React.createElement(Formik, {\n    initialValues: formikInit,\n    validationSchema: FormValidationSchema,\n    validateOnChange: false,\n    onSubmit: function onSubmit(values, action) {\n      var request = {\n        email: values.email\n      };\n      axios.post(\"forget-password\", request).then(function (res) {\n        var data = res.data.data.message;\n        setMessage(data);\n        setOpenSnack(true);\n        location.reload();\n        action.setSubmitting(false);\n      }).catch(function (err) {\n        var error = err.response.data.data.error;\n        setMessage(error);\n        if (error) action.setFieldError(\"email\", error);\n        action.setSubmitting(false);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, function (_ref) {\n    var values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        isSubmitting = _ref.isSubmitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      fullWidth: true,\n      className: classes.spaceTop,\n      error: !!(errors.email && touched.email),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      id: \"email\",\n      name: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      endAdornment: React.createElement(EmailInputAdornment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, touched.email ? errors.email : \"\")), React.createElement(Button, {\n      className: classes.spaceTop,\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      style: {\n        color: \"#fff\"\n      },\n      disabled: isSubmitting,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, isSubmitting ? React.createElement(CircularProgress, {\n      className: classes.spinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }) : \"Gửi\"));\n  }), React.createElement(Divider, {\n    style: {\n      margin: \"16px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: AlignS.textCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: classes.color,\n    onClick: function onClick() {\n      return handleLoginButton(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, \" \", \"Quay l\\u1EA1i \\u0110\\u0103ng Nh\\u1EADp\"))))))), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    open: openSnack,\n    onClose: function onClose() {\n      return setOpenSnack(false);\n    },\n    autoHideDuration: 6000,\n    ContentProps: {\n      \"aria-describedby\": \"message-register\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.successSnack,\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(CheckCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }), \"\\xA0 \", message),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    animation: state.v_animate\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleForgetPassword: function handleForgetPassword(status) {\n      return dispatch({\n        type: animation.FORGET_PASSWORD_BUTTON_CLICK,\n        status: status\n      });\n    },\n    handleLoginButton: function handleLoginButton(status) {\n      return dispatch({\n        type: animation.LOGIN_BUTTON_CLICK,\n        status: status\n      });\n    }\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles))(ForgetPasswordForm);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Forms/ForgetPasswordForm.tsx"],"names":["createStyles","withStyles","React","Fragment","useMemo","useState","useContext","compose","Formik","Yup","animation","connect","Typography","FormControl","InputLabel","Input","FormHelperText","EmailInputAdornment","CircularProgress","Button","IconButton","InputAdornment","PhoneIcon","UserIcon","axios","Blue","AlignS","GlobalContext","Snackbar","SnackbarContent","CheckCircleIcon","Green","Modal","Divider","Zoom","Paper","BG","Grid","FormValidationSchema","object","shape","email","string","required","PhoneInputAdornment","props","UserInputAdornment","styles","theme","paper","width","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","spaceTop","marginTop","spinner","height","errorBag","marginBottom","color","cursor","closeButton","position","top","right","message","display","alignItems","successSnack","modal","marginLeft","marginRight","overflow","borderRadius","outline","breakpoints","only","backgroundLogin","backgroundImage","minHeight","backgroundSize","title","left","transform","textAlign","description","fontSize","fontWeight","contentRight","ForgetPasswordForm","classes","handleForgetPassword","handleLoginButton","openSnack","setOpenSnack","setMessage","formikInit","handleModalClose","isForgetPasswordFormOpen","values","action","request","post","then","res","data","location","reload","setSubmitting","catch","err","error","response","setFieldError","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","margin","textCenter","vertical","horizontal","mapStateToProps","state","v_animate","mapDispatchToProps","dispatch","status","type","FORGET_PASSWORD_BUTTON_CLICK","LOGIN_BUTTON_CLICK"],"mappings":"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","sourcesContent":["import { ThemeCustom } from \"@/components/Theme/Theme\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {\n  ComponentType,\n  Fragment,\n  useMemo,\n  useState,\n  FunctionComponent,\n  useContext,\n  useEffect\n} from \"react\";\nimport { compose } from \"recompose\";\nimport { Formik, FormikActions } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormikProps } from \"@/types/Interface/Formik\";\nimport { Dispatch } from \"redux\";\nimport {\n  AnimationAction,\n  AnimationState\n} from \"@/store/reducers/Visual/global-animation\";\nimport * as animation from \"@/store/actions/animationTypes\";\nimport { ReducersList } from \"@/store/reducers\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Input from \"@material-ui/core/Input/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText/FormHelperText\";\nimport borderC from \"@/styles/Styling/border.module.scss\";\nimport {\n  EmailInputAdornment,\n  PasswordInputAdornment\n} from \"@/components/Forms/LoginForm\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport { TransitionZoom } from \"@/views/Rooms/BottomNav\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport UserIcon from \"@material-ui/icons/Person\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport { ForgetPasswordReq } from \"@/types/Requests/Account/AccountRequests\";\nimport { axios } from \"@/utils/axiosInstance\";\nimport {\n  ErrorValidate,\n  AxiosErrorCustom\n} from \"@/types/Requests/ResponseTemplate\";\nimport { ForgetPasswordRes } from \"@/types/Requests/Account/AccountResponses\";\nimport { AxiosResponse } from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport Blue from \"@material-ui/core/colors/blue\";\nimport AlignS from \"@/styles/Position/align.module.scss\";\nimport { IGlobalContext, GlobalContext } from \"@/store/context/GlobalContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent/SnackbarContent\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport Green from \"@material-ui/core/colors/green\";\nimport { Link } from \"react-router-dom\";\nimport { Modal, Divider } from \"@material-ui/core\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport BG from \"@/assets/loginform.jpeg\";\nimport Grid from \"@material-ui/core/Grid\";\n\ninterface IProps {\n  classes?: any;\n}\n\ninterface ForgetPasswordLocalProps extends IProps {\n  handleForgetPassword(status: boolean): void;\n  handleLoginButton(status: boolean): void;\n  animation: AnimationState;\n}\n\ninterface FormikForgetPassword {\n  email: string;\n\n}\n\nconst FormValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .required(\"Vui lòng nhập email\")\n    .email(\"Địa chỉ email không hợp lệ\")\n});\n\nexport const PhoneInputAdornment: FunctionComponent<{}> = props => {\n  return (\n    <InputAdornment position=\"end\">\n      <IconButton disabled>\n        <PhoneIcon />\n      </IconButton>\n    </InputAdornment>\n  );\n};\n\nexport const UserInputAdornment: FunctionComponent<{}> = props => {\n  return (\n    <InputAdornment position=\"end\">\n      <IconButton disabled>\n        <UserIcon />\n      </IconButton>\n    </InputAdornment>\n  );\n};\n\nconst styles: any = (theme: ThemeCustom) =>\n  createStyles({\n    paper: {\n      width: theme!.spacing!.unit! * 50,\n      backgroundColor: theme!.palette!.background!.paper,\n      boxShadow: theme!.shadows![5],\n      padding: theme!.spacing!.unit! * 2\n    },\n    spaceTop: {\n      marginTop: 10\n    },\n    spinner: {\n      width: \"25px !important\",\n      height: \"25px !important\"\n    },\n    errorBag: {\n      padding: 10,\n      marginTop: 12,\n      marginBottom: 12\n    },\n    color: {\n      color: Blue[600],\n      cursor: \"pointer\"\n    },\n    closeButton: {\n      position: \"absolute\",\n      top: 0,\n      right: 0\n    },\n    message: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    successSnack: {\n      backgroundColor: Green[600]\n    },\n    modal: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: \"20vh\",\n      width: \"50%\",\n      overflow: \"hidden\",\n      borderRadius: 16,\n      \"&:focus\": {\n        outline: \"none\"\n      },\n      [theme!.breakpoints!.only!(\"xs\")]: {\n        width: \"90%\",\n        marginTop: \"10vh\"\n      },\n      [theme!.breakpoints!.only!(\"sm\")]: {\n        width: \"80%\",\n        marginTop: \"15vh\"\n      },\n      [theme!.breakpoints!.only!(\"md\")]: {\n        width: \"70%\",\n        marginTop: \"20vh\"\n      }\n    },\n    backgroundLogin: {\n      backgroundImage: `url(${BG})`,\n      width: \"100%\",\n      height: \"auto\",\n      minHeight: \"100%\",\n      backgroundSize: \"cover\",\n      position: \"relative\"\n    },\n    title: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%,-50%)\",\n      width: \"65%\",\n      textAlign: \"center\",\n      color: \"#fff\"\n    },\n    description: {\n      fontSize: '16px',\n      fontWeight: 300\n    },\n    contentRight: {\n      padding: 16\n    }\n  });\n\n// @ts-ignore\nconst ForgetPasswordForm: ComponentType<IProps> = (props: ForgetPasswordLocalProps) => {\n  const {\n    classes,\n    animation,\n    handleForgetPassword,\n    handleLoginButton\n  } = props;\n\n\n  const [openSnack, setOpenSnack] = useState<boolean>(false);\n  const [message, setMessage] = useState<any>('');\n\n  const { width } = useContext<IGlobalContext>(GlobalContext);\n\n  const formikInit: FormikForgetPassword = useMemo(() => {\n    return {\n      email: \"\",\n    };\n  }, []);\n\n  const handleModalClose = () => {\n    handleForgetPassword(false);\n  };\n\n\n  return (\n    <Fragment>\n      <Modal\n        open={animation.isForgetPasswordFormOpen}\n        onClose={handleModalClose}\n        disableAutoFocus\n      >\n        <Zoom in={animation.isForgetPasswordFormOpen}>\n          <Paper className={classes.modal} elevation={10}>\n            <Grid container>\n              <Grid item xs={4} className={classes.backgroundLogin}>\n                <Typography variant=\"h5\" className={classes.title}>\n                  Khôi phục lại mật khẩu\n                </Typography>\n              </Grid>\n              <Grid item xs={8} className={classes.contentRight}>\n                <Typography variant=\"h5\" className={classes.description}>\n                  Nhập địa chỉ email đã đăng ký của bạn để nhận hướng dẫn đặt lại mật khẩu\n                </Typography>\n                <Formik\n                  initialValues={formikInit}\n                  validationSchema={FormValidationSchema}\n                  validateOnChange={false}\n                  onSubmit={(\n                    values: FormikForgetPassword,\n                    action: FormikActions<FormikForgetPassword>\n                  ) => {\n                    const request: ForgetPasswordReq = {\n                      email: values.email\n                    };\n\n                    axios\n                      .post(\"forget-password\", request)\n                      .then((res: AxiosResponse<ForgetPasswordRes>) => {\n                        const data = res.data.data.message;\n                        setMessage(data);\n                        setOpenSnack(true);\n\n                        location.reload();\n\n                        action.setSubmitting(false);\n                      })\n                      .catch((err: AxiosErrorCustom<ErrorValidate>) => {\n                        const error = err.response!.data.data.error;\n\n                        setMessage(error);\n\n                        if (error)\n                          action.setFieldError(\"email\", error);\n                        action.setSubmitting(false);\n                      });\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting\n                  }: FormikProps<FormikForgetPassword>) => {\n                    return (\n                      <form onSubmit={handleSubmit}>\n                        {/*<FormControl fullWidth className = {classes.spaceTop}*/}\n                        {/*error = {!!(errors.name && touched.name)}>*/}\n                        {/*<InputLabel htmlFor = 'name'>Tên</InputLabel>*/}\n                        {/*<Input*/}\n                        {/*id = 'name'*/}\n                        {/*name = 'name'*/}\n                        {/*value = {values.name}*/}\n                        {/*onChange = {handleChange}*/}\n                        {/*onBlur = {handleBlur}*/}\n                        {/*endAdornment = {<UserInputAdornment />}*/}\n                        {/*/>*/}\n                        {/*<FormHelperText>{touched.name ? errors.name : ''}</FormHelperText>*/}\n                        {/*</FormControl>*/}\n                        {/*<FormControl fullWidth className = {classes.spaceTop}*/}\n                        {/*error = {!!(errors.phone && touched.phone)}>*/}\n                        {/*<InputLabel htmlFor = 'phone'>Số điện thoại</InputLabel>*/}\n                        {/*<Input*/}\n                        {/*id = 'phone'*/}\n                        {/*name = 'phone'*/}\n                        {/*value = {values.phone}*/}\n                        {/*onChange = {handleChange}*/}\n                        {/*onBlur = {handleBlur}*/}\n                        {/*endAdornment = {<PhoneInputAdornment />}*/}\n                        {/*/>*/}\n                        {/*<FormHelperText>{touched.phone ? errors.phone : ''}</FormHelperText>*/}\n                        {/*</FormControl>*/}\n                        <FormControl\n                          fullWidth\n                          className={classes.spaceTop}\n                          error={!!(errors.email && touched.email)}\n                        >\n                          <InputLabel htmlFor=\"email\">Email</InputLabel>\n                          <Input\n                            id=\"email\"\n                            name=\"email\"\n                            value={values.email}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            endAdornment={<EmailInputAdornment />}\n                          />\n                          <FormHelperText>\n                            {touched.email ? errors.email : \"\"}\n                          </FormHelperText>\n                        </FormControl>\n\n                        <Button\n                          className={classes.spaceTop}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          type=\"submit\"\n                          style={{ color: \"#fff\" }}\n                          disabled={isSubmitting}\n                          fullWidth\n                        >\n                          {isSubmitting ? (\n                            <CircularProgress className={classes.spinner} />\n                          ) : (\n                              \"Gửi\"\n                            )}\n                        </Button>\n                      </form>\n                    );\n                  }}\n                </Formik>\n                {/*<h5 className = {borderC['text-line-center']}>đăng nhập với</h5>*/}\n                <Divider style={{ margin: \"16px 0\" }} />\n                <Typography className={AlignS.textCenter}>\n                  <b\n                    className={classes.color}\n                    onClick={() => handleLoginButton(true)}\n                  >\n                    {\" \"}\n                    Quay lại Đăng Nhập\n                  </b>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Zoom>\n      </Modal>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        open={openSnack}\n        onClose={() => setOpenSnack(false)}\n        autoHideDuration={6000}\n        ContentProps={{\n          \"aria-describedby\": \"message-register\"\n        }}\n      >\n        <SnackbarContent\n          className={classes.successSnack}\n          aria-describedby=\"client-snackbar\"\n          message={\n            <span id=\"client-snackbar\" className={classes.message}>\n              <CheckCircleIcon />\n              &nbsp; {message}\n            </span>\n          }\n        />\n      </Snackbar>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state: ReducersList) => {\n  return {\n    animation: state.v_animate\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnimationAction>) => {\n  return {\n    handleForgetPassword: (status: boolean) =>\n      dispatch({\n        type: animation.FORGET_PASSWORD_BUTTON_CLICK,\n        status: status\n      }),\n    handleLoginButton: (status: boolean) =>\n      dispatch({\n        type: animation.LOGIN_BUTTON_CLICK,\n        status: status\n      })\n  };\n};\n\nexport default compose<IProps, any>(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withStyles(styles)\n)(ForgetPasswordForm);\n"]},"metadata":{},"sourceType":"module"}