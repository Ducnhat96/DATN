{"ast":null,"code":"import * as _ from \"@/store/actions/actionTypes\";\nimport { updateObject } from \"@/store/utility\";\nvar init = {\n  email: \"\",\n  isRemember: false\n};\n/**\n *\n * @param state\n * @param action\n */\n\nvar saveDraftedInfo = function saveDraftedInfo(state, action) {\n  var obj = action.value;\n  return updateObject(state, obj);\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : init;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case _.SAVE_DRAFTED_INFO:\n      return saveDraftedInfo(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/store/reducers/loginInfo.ts"],"names":["_","updateObject","init","email","isRemember","saveDraftedInfo","state","action","obj","value","reducer","type","SAVE_DRAFTED_INFO"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,6BAAnB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAYA,IAAMC,IAAoB,GAAG;AAC3BC,EAAAA,KAAK,EAAE,EADoB;AAE3BC,EAAAA,UAAU,EAAE;AAFe,CAA7B;AAKA;;;;;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAwBC,MAAxB,EAAoD;AAC1E,MAAIC,GAAQ,GAAGD,MAAM,CAACE,KAAtB;AACA,SAAOR,YAAY,CAAiBK,KAAjB,EAAwBE,GAAxB,CAAnB;AACD,CAHD;;AAKA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAA2D;AAAA,MAA1DJ,KAA0D,uEAAlCJ,IAAkC;AAAA,MAA5BK,MAA4B;;AACzE,UAAQA,MAAM,CAACI,IAAf;AACE,SAAKX,CAAC,CAACY,iBAAP;AACE,aAAOP,eAAe,CAACC,KAAD,EAAQC,MAAR,CAAtB;;AACF;AACE,aAAOD,KAAP;AAJJ;AAMD,CAPD;;AASA,eAAeI,OAAf","sourcesContent":["import * as _ from \"@/store/actions/actionTypes\";\nimport { updateObject } from \"@/store/utility\";\n\nexport type LoginInfoState = {\n  readonly email: string;\n  readonly isRemember: boolean;\n};\n\nexport interface LoginInfoAction {\n  type: string;\n  value?: string | number;\n}\n\nconst init: LoginInfoState = {\n  email: \"\",\n  isRemember: false\n};\n\n/**\n *\n * @param state\n * @param action\n */\nconst saveDraftedInfo = (state: LoginInfoState, action: LoginInfoAction) => {\n  let obj: any = action.value;\n  return updateObject<LoginInfoState>(state, obj);\n};\n\nconst reducer = (state: LoginInfoState = init, action: LoginInfoAction) => {\n  switch (action.type) {\n    case _.SAVE_DRAFTED_INFO:\n      return saveDraftedInfo(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}