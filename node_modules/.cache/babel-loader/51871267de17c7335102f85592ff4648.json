{"ast":null,"code":"import _defineProperty from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Rooms/MapMarker.tsx\";\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport React, { Fragment, useContext } from 'react';\nimport { compose } from 'recompose';\nimport '@/styles/Custom/bubble.scss';\nimport classNames from 'classnames';\nimport { formatMoney } from '@/utils/mixins';\nimport { scroller } from 'react-scroll';\nimport { GlobalContext } from '@/store/context/GlobalContext';\n\nvar styles = function styles(theme) {\n  var _root;\n\n  return createStyles({\n    root: (_root = {}, _defineProperty(_root, theme.breakpoints.only('xs'), {\n      fontSize: 12\n    }), _defineProperty(_root, \"position\", 'absolute'), _defineProperty(_root, \"fontSize\", '1rem'), _defineProperty(_root, \"transform\", 'translate(-50%, -135%)'), _defineProperty(_root, \"transition\", theme.transitions.create(['all'], {\n      duration: 200,\n      easing: 'ease-in-out'\n    })), _root),\n    hover: {\n      zIndex: 1,\n      backgroundColor: '#ff9800',\n      border: \"1px solid #ff9800\",\n      cursor: 'pointer',\n      color: 'white',\n      transition: theme.transitions.create(['all'], {\n        duration: 200,\n        easing: 'ease-in-out'\n      })\n    },\n    arrowHover: {\n      borderColor: \"#ff9800 transparent transparent transparent\",\n      '&:after': {\n        borderColor: \"#ff9800 transparent transparent transparent\"\n      }\n    },\n    overBubble: _defineProperty({}, theme.breakpoints.only('xs'), {\n      minWidth: 30\n    })\n  });\n}; // @ts-ignore\n\n\nvar MapMarker = function MapMarker(props) {\n  var classes = props.classes,\n      room = props.room,\n      isHover = props.isHover;\n\n  var _useContext = useContext(GlobalContext),\n      width = _useContext.width;\n\n  var markerEvent = function markerEvent() {\n    var id = \"room-\".concat(room.id);\n    var offset = -80;\n\n    if (width === 'md' || width === 'sm') {\n      offset = Math.floor(window.innerHeight / -1.9);\n    }\n\n    var effect = {\n      containerId: 'room-map-list',\n      to: id,\n      smooth: 'easeInOutQuad',\n      offset: offset\n    };\n    scroller.scrollTo(id, effect);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: markerEvent,\n    className: classNames('speech-bubble', classes.root, classes.overBubble, _defineProperty({}, classes.hover, isHover), classes.speechBubbleOver),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classNames('arrow', 'bottom', _defineProperty({}, classes.arrowHover, isHover)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, formatMoney(room.price_day, 0), \"\\u0111\")));\n};\n\nvar memoCheck = function memoCheck(prevProps, nextProps) {\n  return prevProps.isHover === nextProps.isHover;\n};\n\nexport default compose(withStyles(styles))(React.memo(MapMarker, memoCheck));","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Rooms/MapMarker.tsx"],"names":["createStyles","withStyles","React","Fragment","useContext","compose","classNames","formatMoney","scroller","GlobalContext","styles","theme","root","breakpoints","only","fontSize","transitions","create","duration","easing","hover","zIndex","backgroundColor","border","cursor","color","transition","arrowHover","borderColor","overBubble","minWidth","MapMarker","props","classes","room","isHover","width","markerEvent","id","offset","Math","floor","window","innerHeight","effect","containerId","to","smooth","scrollTo","speechBubbleOver","price_day","memoCheck","prevProps","nextProps","memo"],"mappings":"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","sourcesContent":["import { ThemeCustom } from '@/components/Theme/Theme';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport React, { ComponentType, Fragment, useContext } from 'react';\nimport { compose } from 'recompose';\nimport { Coords, ChildComponentProps } from 'google-map-react';\nimport '@/styles/Custom/bubble.scss';\nimport { RoomIndexRes } from '@/types/Requests/Rooms/RoomResponses';\nimport classNames from 'classnames';\nimport { formatMoney } from '@/utils/mixins';\nimport Blue from '@material-ui/core/colors/blue';\nimport { scroller } from 'react-scroll';\nimport { ReactScrollLinkProps } from 'react-scroll/modules/components/Link';\nimport { IGlobalContext, GlobalContext } from '@/store/context/GlobalContext';\n\ninterface IProps extends Required<Coords> {\n  classes?: any\n  room: RoomIndexRes\n  isHover: boolean\n}\n\ninterface LocalProps extends IProps, ChildComponentProps {\n\n}\n\nconst styles: any = (theme: ThemeCustom) => createStyles({\n  root: {\n    [theme!.breakpoints!.only!('xs')]: {\n      fontSize: 12,\n    },\n    position: 'absolute',\n    fontSize: '1rem',\n    transform: 'translate(-50%, -135%)',\n    transition: theme!.transitions!.create!(['all'], {\n      duration: 200,\n      easing: 'ease-in-out',\n    }),\n  },\n  hover: {\n    zIndex: 1,\n    backgroundColor: '#ff9800',\n    border: `1px solid #ff9800`,\n    cursor: 'pointer',\n    color: 'white',\n    transition: theme!.transitions!.create!(['all'], {\n      duration: 200,\n      easing: 'ease-in-out',\n    }),\n  },\n  arrowHover: {\n    borderColor: `#ff9800 transparent transparent transparent`,\n    '&:after': {\n      borderColor: `#ff9800 transparent transparent transparent`,\n    },\n  },\n  overBubble: {\n    [theme!.breakpoints!.only!('xs')]: {\n      minWidth: 30,\n    },\n  }\n\n});\n\n// @ts-ignore\nconst MapMarker: ComponentType<IProps> = (props: LocalProps) => {\n  const { classes, room, isHover } = props;\n  const { width } = useContext<IGlobalContext>(GlobalContext);\n\n  const markerEvent = () => {\n    let id = `room-${room.id}`;\n    let offset = -80;\n    if (width === 'md' || width === 'sm') {\n      offset = Math.floor(window.innerHeight / -1.9);\n    }\n\n    let effect: ReactScrollLinkProps = {\n      containerId: 'room-map-list',\n      to: id,\n      smooth: 'easeInOutQuad',\n      offset,\n    };\n    scroller.scrollTo(id, effect);\n  };\n\n  return (\n    <Fragment>\n      <div onClick={markerEvent} className={classNames(\n        'speech-bubble', classes.root, classes.overBubble, {\n          [classes.hover]: isHover,\n        }, classes.speechBubbleOver\n      )}>\n        <div className={classNames(\n          'arrow', 'bottom', {\n            [classes.arrowHover]: isHover,\n          },\n        )} />\n        <span>\n          {formatMoney(room.price_day, 0)}Ä‘\n        </span>\n      </div>\n    </Fragment>\n  );\n};\n\nconst memoCheck = (prevProps: IProps, nextProps: IProps) => {\n  return prevProps.isHover === nextProps.isHover;\n};\n\nexport default compose<IProps, any>(\n  withStyles(styles),\n)(React.memo(MapMarker, memoCheck));\n"]},"metadata":{},"sourceType":"module"}