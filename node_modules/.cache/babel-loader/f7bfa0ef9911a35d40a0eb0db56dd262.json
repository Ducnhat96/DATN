{"ast":null,"code":"import _defineProperty from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Custom/RatingBar.tsx\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport { blue } from \"@material-ui/core/colors\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport React, { Fragment, useState, useContext } from \"react\";\nimport StarRatings from \"react-star-ratings\";\nimport { compose } from \"recompose\";\nimport classNames from \"classnames\";\nimport _ from \"lodash\";\nimport { RoomIndexContext, newRoomLocation } from \"@/store/context/Room/RoomIndexContext\";\nimport { GlobalContext } from \"@/store/context/GlobalContext\";\nimport qs from \"query-string\";\nimport { updateObject } from \"@/store/utility\";\nimport { arrayFilterCheckBoxEvent } from \"@/utils/mixins\";\n\nvar styles = function styles(theme) {\n  return createStyles({\n    checkboxPadding: {\n      padding: 0\n    },\n    hover: {\n      color: blue[600],\n      cursor: \"pointer\"\n    },\n    starMargin: {\n      margin: \"2px 0 0 10px\"\n    }\n  });\n};\n\nvar RatingBar = function RatingBar(props) {\n  var classes = props.classes,\n      hasApplyButton = props.hasApplyButton;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hover = _useState2[0],\n      setHover = _useState2[1];\n\n  var _useContext = useContext(GlobalContext),\n      location = _useContext.location,\n      history = _useContext.history;\n\n  var _useContext2 = useContext(RoomIndexContext),\n      state = _useContext2.state,\n      dispatch = _useContext2.dispatch;\n\n  var ratingLists = state.ratingLists;\n\n  var checkboxEvent = function checkboxEvent(e, checked) {\n    var params = qs.parse(location.search); // let value                   = parseInt(e.target.value);\n    // let list                    = [...ratingLists];\n    //\n    // checked ? list.push(value) : _.remove(list, n => n === value);\n\n    var list = arrayFilterCheckBoxEvent(ratingLists, e, checked);\n    list = _.sortBy(list);\n    var newParams = updateObject(params, {\n      rating: _.join(list, ',')\n    });\n    var locationTo = newRoomLocation(newParams);\n    dispatch({\n      type: 'setRating',\n      ratingLists: list\n    });\n    dispatch({\n      type: 'setRooms',\n      rooms: []\n    });\n    history.push(locationTo);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: props.id,\n    onMouseEnter: function onMouseEnter() {\n      return setHover(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setHover(false);\n    },\n    className: classes.hover,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 8,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    id: props.id,\n    value: props.totalRate.toString(),\n    color: \"primary\",\n    checked: _.indexOf(ratingLists, props.totalRate) !== -1,\n    onChange: checkboxEvent,\n    classes: {\n      root: classNames(classes.checkboxPadding, _defineProperty({}, classes.hover, hover))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    className: classes.starMargin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, props.totalRate && props.totalRate > 0 ? React.createElement(StarRatings, {\n    numberOfStars: props.totalRate || 5,\n    rating: props.rate || props.totalRate || 5,\n    starDimension: \"\".concat(props.dimension || 20, \"px\"),\n    starSpacing: \"\".concat(props.spacing || 1, \"px\"),\n    starRatedColor: props.ratedColor || \"#FFC412\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }) : React.createElement(Typography, {\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Kh\\xF4ng \\u0111\\u01B0\\u1EE3c x\\u1EBFp h\\u1EA1ng\")))));\n};\n\nexport default compose(withStyles(styles))(RatingBar);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Custom/RatingBar.tsx"],"names":["Checkbox","blue","Grid","createStyles","withStyles","Typography","React","Fragment","useState","useContext","StarRatings","compose","classNames","_","RoomIndexContext","newRoomLocation","GlobalContext","qs","updateObject","arrayFilterCheckBoxEvent","styles","theme","checkboxPadding","padding","hover","color","cursor","starMargin","margin","RatingBar","props","classes","hasApplyButton","setHover","location","history","state","dispatch","ratingLists","checkboxEvent","e","checked","params","parse","search","list","sortBy","newParams","rating","join","locationTo","type","rooms","push","id","totalRate","toString","indexOf","root","rate","dimension","spacing","ratedColor"],"mappings":"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","sourcesContent":["import { ThemeCustom } from \"@/components/Theme/Theme\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport { blue } from \"@material-ui/core/colors\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport React, {\n  ComponentType,\n  Fragment,\n  useState,\n  useContext,\n  ChangeEvent,\n  Dispatch,\n  SetStateAction\n} from \"react\";\nimport StarRatings from \"react-star-ratings\";\nimport { compose } from \"recompose\";\nimport classNames from \"classnames\";\nimport _ from \"lodash\";\nimport {\n  IRoomIndexContext,\n  RoomIndexContext,\n  newRoomLocation\n} from \"@/store/context/Room/RoomIndexContext\";\nimport { IGlobalContext, GlobalContext } from \"@/store/context/GlobalContext\";\nimport { RoomUrlParams } from \"@/types/Requests/Rooms/RoomRequests\";\nimport qs from \"query-string\";\nimport { updateObject } from \"@/store/utility\";\nimport { arrayFilterCheckBoxEvent } from \"@/utils/mixins\";\n\ninterface IProps {\n  classes?: any;\n  /**\n   * Number of star\n   * @default 5\n   */\n  rate?: number;\n  totalRate: number;\n  dimension?: number;\n  spacing?: number;\n  ratedColor?: string;\n  id: string;\n  hasApplyButton?: boolean;\n  \n}\n\nconst styles: any = (theme: ThemeCustom) =>\n  createStyles({\n    checkboxPadding: {\n      padding: 0\n    },\n    hover: {\n      color: blue[600],\n      cursor: \"pointer\"\n    },\n    starMargin: {\n      margin: \"2px 0 0 10px\"\n    }\n  });\n\nconst RatingBar: ComponentType<IProps> = (props: IProps) => {\n  const { classes, hasApplyButton } = props;\n\n  const [hover, setHover] = useState<boolean>(false);\n  const { location, history } = useContext<IGlobalContext>(GlobalContext);\n  const { state, dispatch } = useContext<IRoomIndexContext>(RoomIndexContext);\n\n  const { ratingLists } = state;\n\n  const checkboxEvent = (\n    e: ChangeEvent<HTMLInputElement>,\n    checked: boolean\n  ) => {\n    const params: RoomUrlParams = qs.parse(location.search!);\n    // let value                   = parseInt(e.target.value);\n    // let list                    = [...ratingLists];\n    //\n    // checked ? list.push(value) : _.remove(list, n => n === value);\n\n    let list = arrayFilterCheckBoxEvent(ratingLists, e, checked);\n\n    list = _.sortBy(list);\n\n    const newParams  = updateObject(params, {\n      rating: _.join(list, ','),\n    });\n    const locationTo = newRoomLocation(newParams);\n\n    dispatch({\n      type: 'setRating',\n      ratingLists: list,\n    });\n\n    dispatch({\n      type: 'setRooms',\n      rooms: [],\n    });\n\n    history.push(locationTo);\n    \n  };\n\n  return (\n    <Fragment>\n      <label\n        htmlFor={props.id}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        className={classes.hover}\n      >\n        <Grid container spacing={8} alignItems=\"center\">\n          <Grid item sm={1}>\n            <Checkbox\n              id={props.id}\n              value={props.totalRate.toString()}\n              color=\"primary\"\n              checked={_.indexOf(ratingLists, props.totalRate) !== -1}\n              onChange={checkboxEvent}\n              classes={{\n                root: classNames(classes.checkboxPadding, {\n                  [classes.hover]: hover\n                })\n              }}\n            />\n          </Grid>\n          <Grid item className={classes.starMargin}>\n            {props.totalRate && props.totalRate > 0 ? (\n              <StarRatings\n                numberOfStars={props.totalRate || 5}\n                rating={props.rate || props.totalRate || 5}\n                starDimension={`${props.dimension || 20}px`}\n                starSpacing={`${props.spacing || 1}px`}\n                starRatedColor={props.ratedColor || \"#FFC412\"}\n              />\n            ) : (\n              <Typography variant=\"caption\">Không được xếp hạng</Typography>\n            )}\n          </Grid>\n          {/*<Grid item sm = {2} className = {classes.starMargin}>*/}\n          {/*<Typography variant = 'caption' className = {classNames({*/}\n          {/*[classes.hover]: hover,*/}\n          {/*})}>(69)</Typography>*/}\n          {/*</Grid>*/}\n        </Grid>\n      </label>\n    </Fragment>\n  );\n};\n\nexport default compose<IProps, any>(withStyles(styles))(RatingBar);\n"]},"metadata":{},"sourceType":"module"}