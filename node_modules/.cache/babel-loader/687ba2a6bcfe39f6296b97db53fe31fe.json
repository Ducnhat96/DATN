{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Rooms/PriceRange.tsx\";\nimport \"@/styles/react-input-range-custom.scss\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\nimport InputBase from \"@material-ui/core/InputBase/InputBase\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, { useState, useContext, useEffect, Fragment } from \"react\";\nimport InputRange from \"react-input-range\";\nimport { compose } from \"recompose\";\nimport { RoomIndexContext, newRoomLocation, MIN_PRICE, MAX_PRICE, STEP_PRICE } from \"@/store/context/Room/RoomIndexContext\";\nimport qs from \"query-string\";\nimport { updateObject } from \"@/store/utility\";\nimport { GlobalContext } from \"@/store/context/GlobalContext\";\nimport _ from \"lodash\";\nimport Button from \"@material-ui/core/Button/Button\";\n\n/**\n * Synchronize price\n * @param {Range} price\n * @param {React.Dispatch<Range>} setPrice\n * @param {RoomIndexState} state\n */\nexport var usePriceEffect = function usePriceEffect(price, setPrice, state) {\n  useEffect(function () {\n    if (!_.isEqual(state.price, price)) {\n      setPrice(state.price);\n    }\n  }, [state.price]);\n};\nexport var priceFilterChange = function priceFilterChange(value, location, history, dispatch) {\n  if (typeof value !== \"number\") {\n    var params = qs.parse(location.search);\n    var prices = {\n      price_day_from: value.min.toString(),\n      price_day_to: value.max.toString()\n    };\n    var newParams = updateObject(params, prices);\n    var locationTo = newRoomLocation(newParams);\n    dispatch({\n      type: \"setPrices\",\n      price: value\n    });\n    dispatch({\n      type: \"setRooms\",\n      rooms: []\n    });\n    history.push(locationTo);\n  }\n};\n\nvar styles = function styles(theme) {\n  return createStyles({\n    marginPriceRange: {\n      marginTop: 0\n    },\n    bootstrapRoot: {\n      \"label + &\": {\n        marginTop: theme.spacing.unit * 2\n      }\n    },\n    bootstrapInput: {\n      borderRadius: 4,\n      backgroundColor: theme.palette.common.white,\n      border: \"1px solid #ced4da\",\n      fontSize: 14,\n      padding: \"0.25rem 1.35rem\",\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      \"&:focus\": {\n        borderColor: \"#80bdff\"\n      }\n    },\n    adornment: {\n      position: \"absolute\",\n      left: \"0.4rem\",\n      zIndex: 2\n    },\n    applyButton: {\n      background: \"transparent\",\n      boxShadow: \"none\",\n      color: \"#ff9800\",\n      fontWeight: 700,\n      textTransform: \"initial\",\n      fontSize: \"16px\",\n      padding: \"2px 11px\"\n    }\n  });\n};\n\nvar PriceRange = function PriceRange(props) {\n  var classes = props.classes,\n      hasApplyButton = props.hasApplyButton;\n\n  var _useContext = useContext(GlobalContext),\n      history = _useContext.history,\n      location = _useContext.location;\n\n  var _useContext2 = useContext(RoomIndexContext),\n      state = _useContext2.state,\n      dispatch = _useContext2.dispatch;\n\n  var _useState = useState({\n    min: MIN_PRICE,\n    max: MAX_PRICE\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      price = _useState2[0],\n      setPrice = _useState2[1];\n\n  var setPriceEnhancement = function setPriceEnhancement(value) {\n    if (value.min < MIN_PRICE) {\n      value.min = MIN_PRICE;\n    } else if (value.max > MAX_PRICE) {\n      value.max = MAX_PRICE;\n    }\n\n    setPrice(value);\n  };\n\n  var applyFilter = function applyFilter() {\n    priceFilterChange(price, location, history, dispatch);\n  };\n\n  var afterChange = function afterChange(value) {\n    if (!hasApplyButton) {\n      priceFilterChange(value, location, history, dispatch);\n    }\n  };\n\n  usePriceEffect(price, setPrice, state);\n  useEffect(function () {\n    var params = qs.parse(location.search);\n    var min = params.price_day_to ? parseInt(params.price_day_to) : MIN_PRICE;\n    var max = params.price_day_from ? parseInt(params.price_day_from) : MAX_PRICE;\n    if (min >= max) return;\n    var prices = {\n      min: min,\n      max: max\n    };\n    dispatch({\n      type: \"setPrices\",\n      price: prices\n    });\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    className: classes.marginPriceRange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(InputRange, {\n    allowSameValues: false,\n    onChangeComplete: function onChangeComplete(value) {\n      return afterChange(value);\n    },\n    minValue: MIN_PRICE,\n    maxValue: MAX_PRICE,\n    step: STEP_PRICE,\n    onChange: function onChange(value) {\n      return setPriceEnhancement(value);\n    },\n    value: price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    item: true,\n    lg: 6,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"min-price-filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"T\\u1ED1i thi\\u1EC3u\"), React.createElement(InputBase, {\n    id: \"min-price-filter\",\n    value: price.min,\n    readOnly: true,\n    fullWidth: true,\n    classes: {\n      root: classes.bootstrapRoot,\n      input: classes.bootstrapInput\n    },\n    startAdornment: React.createElement(InputAdornment, {\n      position: \"start\",\n      className: classes.adornment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"\\u0111\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    lg: 6,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"max-price-filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"T\\u1ED1i \\u0111a\"), React.createElement(InputBase, {\n    id: \"max-price-filter\",\n    value: price.max,\n    readOnly: true,\n    fullWidth: true,\n    classes: {\n      root: classes.bootstrapRoot,\n      input: classes.bootstrapInput\n    },\n    startAdornment: React.createElement(InputAdornment, {\n      position: \"start\",\n      className: classes.adornment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"\\u0111\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }))), hasApplyButton ? React.createElement(Button, {\n    className: classes.applyButton,\n    onClick: applyFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"\\xC1p d\\u1EE5ng\") : \"\");\n};\n\nexport default compose(withStyles(styles))(PriceRange);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Rooms/PriceRange.tsx"],"names":["FormControl","Grid","InputAdornment","InputBase","InputLabel","createStyles","withStyles","React","useState","useContext","useEffect","Fragment","InputRange","compose","RoomIndexContext","newRoomLocation","MIN_PRICE","MAX_PRICE","STEP_PRICE","qs","updateObject","GlobalContext","_","Button","usePriceEffect","price","setPrice","state","isEqual","priceFilterChange","value","location","history","dispatch","params","parse","search","prices","price_day_from","min","toString","price_day_to","max","newParams","locationTo","type","rooms","push","styles","theme","marginPriceRange","marginTop","bootstrapRoot","spacing","unit","bootstrapInput","borderRadius","backgroundColor","palette","common","white","border","fontSize","padding","transition","transitions","create","borderColor","adornment","position","left","zIndex","applyButton","background","boxShadow","color","fontWeight","textTransform","PriceRange","props","classes","hasApplyButton","setPriceEnhancement","applyFilter","afterChange","parseInt","root","input"],"mappings":"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","sourcesContent":["import { ThemeCustom } from \"@/components/Theme/Theme\";\nimport \"@/styles/react-input-range-custom.scss\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\nimport InputBase from \"@material-ui/core/InputBase/InputBase\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {\n  useState,\n  ComponentType,\n  useContext,\n  useEffect,\n  Dispatch,\n  Fragment\n} from \"react\";\nimport InputRange, { Range } from \"react-input-range\";\nimport { compose } from \"recompose\";\nimport {\n  RoomIndexContext,\n  IRoomIndexContext,\n  newRoomLocation,\n  MIN_PRICE,\n  MAX_PRICE,\n  STEP_PRICE,\n  RoomIndexState,\n  RoomIndexAction\n} from \"@/store/context/Room/RoomIndexContext\";\nimport qs from \"query-string\";\nimport { RoomUrlParams } from \"@/types/Requests/Rooms/RoomRequests\";\nimport { updateObject } from \"@/store/utility\";\nimport { GlobalContext, IGlobalContext } from \"@/store/context/GlobalContext\";\nimport _ from \"lodash\";\nimport { LocationDescriptorObject, History } from \"history\";\nimport Button from \"@material-ui/core/Button/Button\";\n\ninterface IProps {\n  classes?: any;\n  hasApplyButton?: boolean;\n}\n\n/**\n * Synchronize price\n * @param {Range} price\n * @param {React.Dispatch<Range>} setPrice\n * @param {RoomIndexState} state\n */\nexport const usePriceEffect = (\n  price: Range,\n  setPrice: Dispatch<Range>,\n  state: RoomIndexState\n) => {\n  useEffect(() => {\n    if (!_.isEqual(state.price, price)) {\n      setPrice(state.price);\n    }\n  }, [state.price]);\n};\n\nexport const priceFilterChange = (\n  value: Range | number,\n  location: LocationDescriptorObject,\n  history: History,\n  dispatch: Dispatch<RoomIndexAction>\n) => {\n  if (typeof value !== \"number\") {\n    const params: RoomUrlParams = qs.parse(location.search!);\n    let prices: RoomUrlParams = {\n      price_day_from: value.min.toString(),\n      price_day_to: value.max.toString()\n    };\n\n    const newParams = updateObject(params, prices);\n    const locationTo = newRoomLocation(newParams);\n\n    dispatch({\n      type: \"setPrices\",\n      price: value\n    });\n\n    dispatch({\n      type: \"setRooms\",\n      rooms: []\n    });\n\n    history.push(locationTo);\n  }\n};\n\nconst styles: any = (theme: ThemeCustom) =>\n  createStyles({\n    marginPriceRange: {\n      marginTop: 0\n    },\n    bootstrapRoot: {\n      \"label + &\": {\n        marginTop: theme!.spacing!.unit! * 2\n      }\n    },\n    bootstrapInput: {\n      borderRadius: 4,\n      backgroundColor: theme!.palette!.common!.white!,\n      border: \"1px solid #ced4da\",\n      fontSize: 14,\n      padding: \"0.25rem 1.35rem\",\n      transition: theme!.transitions!.create!([\"border-color\", \"box-shadow\"]),\n      \"&:focus\": {\n        borderColor: \"#80bdff\"\n      }\n    },\n    adornment: {\n      position: \"absolute\",\n      left: \"0.4rem\",\n      zIndex: 2\n    },\n    applyButton: {\n      background: \"transparent\",\n      boxShadow: \"none\",\n      color: \"#ff9800\",\n      fontWeight: 700,\n      textTransform: \"initial\",\n      fontSize: \"16px\",\n      padding: \"2px 11px\"\n    }\n  });\n\nconst PriceRange: ComponentType<IProps> = (props: IProps) => {\n  const { classes, hasApplyButton } = props;\n\n  const { history, location } = useContext<IGlobalContext>(GlobalContext);\n  const { state, dispatch } = useContext<IRoomIndexContext>(RoomIndexContext);\n\n  const [price, setPrice] = useState<Range>({\n    min: MIN_PRICE,\n    max: MAX_PRICE\n  });\n\n  const setPriceEnhancement = (value: Range) => {\n    if (value.min < MIN_PRICE) {\n      value.min = MIN_PRICE;\n    } else if (value.max > MAX_PRICE) {\n      value.max = MAX_PRICE;\n    }\n    setPrice(value);\n  };\n\n  const applyFilter = () => {\n    priceFilterChange(price, location, history, dispatch);\n  };\n\n  const afterChange = (value: Range | number) => {\n    if (!hasApplyButton) {\n      priceFilterChange(value, location, history, dispatch);\n    }\n  };\n\n  usePriceEffect(price, setPrice, state);\n\n  useEffect(() => {\n    const params: RoomUrlParams = qs.parse(location.search!);\n\n    let min = params.price_day_to ? parseInt(params.price_day_to) : MIN_PRICE;\n    let max = params.price_day_from\n      ? parseInt(params.price_day_from)\n      : MAX_PRICE;\n\n    if (min >= max) return;\n\n    let prices: Range = { min, max };\n\n    dispatch({\n      type: \"setPrices\",\n      price: prices\n    });\n  }, []);\n\n  return (\n    <Fragment>\n      <Grid container item xs={12} className={classes.marginPriceRange}>\n        <InputRange\n          allowSameValues={false}\n          onChangeComplete={value => afterChange(value)}\n          minValue={MIN_PRICE}\n          maxValue={MAX_PRICE}\n          step={STEP_PRICE}\n          onChange={(value: any) => setPriceEnhancement(value)}\n          value={price}\n        />\n      </Grid>\n      <Grid container item lg={6} sm={6}>\n        <FormControl>\n          <InputLabel shrink htmlFor=\"min-price-filter\">\n            Tối thiểu\n          </InputLabel>\n          <InputBase\n            id=\"min-price-filter\"\n            value={price.min}\n            readOnly\n            fullWidth\n            classes={{\n              root: classes.bootstrapRoot,\n              input: classes.bootstrapInput\n            }}\n            startAdornment={\n              <InputAdornment position=\"start\" className={classes.adornment}>\n                đ\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </Grid>\n      <Grid container item lg={6} sm={6}>\n        <FormControl>\n          <InputLabel shrink htmlFor=\"max-price-filter\">\n            Tối đa\n          </InputLabel>\n          <InputBase\n            id=\"max-price-filter\"\n            value={price.max}\n            readOnly\n            fullWidth\n            classes={{\n              root: classes.bootstrapRoot,\n              input: classes.bootstrapInput\n            }}\n            startAdornment={\n              <InputAdornment position=\"start\" className={classes.adornment}>\n                đ\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </Grid>\n      {hasApplyButton ? (\n        <Button className={classes.applyButton} onClick={applyFilter}>\n          Áp dụng\n        </Button>\n      ) : (\n          \"\"\n        )}\n    </Fragment>\n  );\n};\n\nexport default compose<IProps, any>(withStyles(styles))(PriceRange);\n"]},"metadata":{},"sourceType":"module"}