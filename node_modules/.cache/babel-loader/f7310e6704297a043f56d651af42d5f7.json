{"ast":null,"code":"import _regeneratorRuntime from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { updateObject } from '@/store/utility';\nimport { createContext } from 'react';\nimport { axios } from '@/utils/axiosInstance';\nimport qs from 'query-string';\nexport var PaymentContext = createContext(null);\nexport var PaymentStateInit = {\n  room: null,\n  lists: null,\n  payment_methods: []\n};\nexport var PaymentReducer = function PaymentReducer(state, action) {\n  switch (action.type) {\n    case 'setAll':\n      return updateObject(state, {\n        room: action.room,\n        lists: action.lists,\n        payment_methods: action.payment_methods\n      });\n\n    default:\n      return state;\n  }\n};\nexport var getBankList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(uuid) {\n    var params, queryString, url, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = {\n              include: 'room.details,room.media,room.city,room.district'\n            };\n            queryString = qs.stringify(params);\n            url = \"bank-list/\".concat(uuid, \"?\").concat(queryString);\n            _context.next = 5;\n            return axios.get(url);\n\n          case 5:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getBankList(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var redirectToBaoKim =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(uuid, bank_id) {\n    var request, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            request = {\n              payment_method: 4,\n              bank_payment_method_id: bank_id\n            };\n            _context2.next = 3;\n            return axios.post(\"payment/\".concat(uuid), request);\n\n          case 3:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res.data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function redirectToBaoKim(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/store/context/Payment/PaymentContext.tsx"],"names":["updateObject","createContext","axios","qs","PaymentContext","PaymentStateInit","room","lists","payment_methods","PaymentReducer","state","action","type","getBankList","uuid","params","include","queryString","stringify","url","get","res","data","redirectToBaoKim","bank_id","request","payment_method","bank_payment_method_id","post"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,iBAA7B;AAEA,SAASC,aAAT,QAAwC,OAAxC;AAIA,SAASC,KAAT,QAAsB,uBAAtB;AACA,OAAOC,EAAP,MAAe,cAAf;AAEA,OAAO,IAAMC,cAAc,GAAGH,aAAa,CAAwB,IAAxB,CAApC;AAeP,OAAO,IAAMI,gBAA8B,GAAG;AAC5CC,EAAAA,IAAI,EAAE,IADsC;AAE5CC,EAAAA,KAAK,EAAE,IAFqC;AAG5CC,EAAAA,eAAe,EAAE;AAH2B,CAAvC;AAMP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAsBC,MAAtB,EAA8D;AAC1F,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAOZ,YAAY,CAAeU,KAAf,EAAsB;AACvCJ,QAAAA,IAAI,EAAEK,MAAM,CAACL,IAD0B;AAEvCC,QAAAA,KAAK,EAAEI,MAAM,CAACJ,KAFyB;AAGvCC,QAAAA,eAAe,EAAEG,MAAM,CAACH;AAHe,OAAtB,CAAnB;;AAKF;AACE,aAAOE,KAAP;AARJ;AAUD,CAXM;AAaP,OAAO,IAAMG,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,MADmB,GACV;AACbC,cAAAA,OAAO,EAAE;AADI,aADU;AAInBC,YAAAA,WAJmB,GAILd,EAAE,CAACe,SAAH,CAAaH,MAAb,CAJK;AAMnBI,YAAAA,GANmB,uBAMAL,IANA,cAMQG,WANR;AAAA;AAAA,mBAOuBf,KAAK,CAACkB,GAAN,CAAUD,GAAV,CAPvB;;AAAA;AAOnBE,YAAAA,GAPmB;AAAA,6CAQlBA,GAAG,CAACC,IARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXT,WAAW;AAAA;AAAA;AAAA,GAAjB;AAWP,OAAO,IAAMU,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOT,IAAP,EAAqBU,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,OADwB,GACd;AACdC,cAAAA,cAAc,EAAE,CADF;AAEdC,cAAAA,sBAAsB,EAAEH;AAFV,aADc;AAAA;AAAA,mBAMMtB,KAAK,CAAC0B,IAAN,mBAAsBd,IAAtB,GAA8BW,OAA9B,CANN;;AAAA;AAMxBJ,YAAAA,GANwB;AAAA,8CAOvBA,GAAG,CAACC,IAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBC,gBAAgB;AAAA;AAAA;AAAA,GAAtB","sourcesContent":["import { updateObject } from '@/store/utility';\nimport { RoomIndexRes } from '@/types/Requests/Rooms/RoomResponses';\nimport { createContext, Dispatch } from 'react';\nimport { BookingIndexRes } from '@/types/Requests/Booking/BookingResponses';\nimport { PaymentMethod, PaymentBankListRes } from '@/types/Requests/Payment/PaymentResponse';\nimport { AxiosRes } from '@/types/Requests/ResponseTemplate';\nimport { axios } from '@/utils/axiosInstance';\nimport qs from 'query-string';\n\nexport const PaymentContext = createContext<IPaymentContext | any>(null);\n\nexport interface IPaymentContext {\n  state: PaymentState,\n  dispatch: Dispatch<PaymentAction>\n}\n\nexport type PaymentState = {\n  readonly room: RoomIndexRes | null;\n  readonly lists: BookingIndexRes | null;\n  readonly payment_methods: PaymentMethod[];\n}\n\nexport type PaymentAction = { type: 'setAll', room: RoomIndexRes, lists: PaymentBankListRes, payment_methods: PaymentMethod[] }\n\nexport const PaymentStateInit: PaymentState = {\n  room: null,\n  lists: null,\n  payment_methods: [],\n};\n\nexport const PaymentReducer = (state: PaymentState, action: PaymentAction): PaymentState => {\n  switch (action.type) {\n    case 'setAll':\n      return updateObject<PaymentState>(state, {\n        room: action.room,\n        lists: action.lists,\n        payment_methods: action.payment_methods,\n      });\n    default:\n      return state;\n  }\n};\n\nexport const getBankList = async (uuid: string) => {\n  const params = {\n    include: 'room.details,room.media,room.city,room.district',\n  };\n  const queryString = qs.stringify(params);\n\n  const url = `bank-list/${uuid}?${queryString}`;\n  const res: AxiosRes<PaymentBankListRes> = await axios.get(url);\n  return res.data;\n};\n\nexport const redirectToBaoKim = async (uuid: string, bank_id: number) => {\n  const request = {\n    payment_method: 4,\n    bank_payment_method_id: bank_id,\n  };\n\n  const res: AxiosRes<string> = await axios.post(`payment/${uuid}`, request);\n  return res.data\n};\n\n"]},"metadata":{},"sourceType":"module"}