{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Maps/MapRooms.tsx\";\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport React, { Fragment, useState, useContext, memo, useEffect } from 'react';\nimport { compose } from 'recompose';\nimport _ from 'lodash';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport RoomCardMap from '@/components/Rooms/RoomCardMap';\nimport SimpleLoader from '@/components/Loading/SimpleLoader';\nimport Pagination from 'rc-pagination';\nimport { RoomIndexContext } from '@/store/context/Room/RoomIndexContext';\nimport { GlobalContext } from '@/store/context/GlobalContext';\nimport { axios } from '@/utils/axiosInstance';\nimport RoomCardMapXs from '@/components/Rooms/RoomCardMapXs';\n\nvar styles = function styles(theme) {\n  return createStyles({\n    roomList: _defineProperty({}, theme.breakpoints.only('xs'), {\n      maxWidth: '100%'\n    })\n  });\n}; // @ts-ignore\n\n\nvar MapRooms = function MapRooms(props) {\n  var classes = props.classes,\n      rooms = props.rooms,\n      hoverId = props.hoverId,\n      hoverAction = props.hoverAction,\n      focusRoomLocation = props.focusRoomLocation,\n      pageChange = props.pageChange,\n      page = props.page;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      showRoom = _useState2[0],\n      setShowRoom = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      defaultRoom = _useState4[0],\n      setdefaultRoom = _useState4[1];\n\n  var _useContext = useContext(RoomIndexContext),\n      state = _useContext.state;\n\n  var _useContext2 = useContext(GlobalContext),\n      width = _useContext2.width;\n\n  var xsMode = width === 'xs';\n  var meta = state.meta;\n  var settings = {\n    speed: 300,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    lazyLoad: 'ondemand',\n    arrows: false\n  };\n  useEffect(function () {\n    if (width === 'xs' && hoverId !== 0 && hoverId !== -1) {\n      axios.get(\"/rooms/\".concat(hoverId, \"?include=comforts,details,media,city,district,prices\")).then(function (res) {\n        setShowRoom(res.data.data);\n      }).catch(function (err) {});\n    }\n  }, [hoverId]);\n  useEffect(function () {\n    if (rooms) {\n      setdefaultRoom(rooms[0]);\n    }\n  }, [rooms.length > 0]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, !xsMode ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, rooms.length > 0 ? _.map(rooms, function (room) {\n    return React.createElement(Grid, {\n      key: room.id,\n      id: \"room-\".concat(room.id),\n      item: true,\n      xs: 12,\n      onMouseEnter: function onMouseEnter() {\n        return hoverAction(room.id);\n      },\n      onMouseLeave: function onMouseLeave() {\n        return hoverAction(0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(RoomCardMap, {\n      room: room,\n      isHover: hoverId === room.id,\n      focus: focusRoomLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }) : React.createElement(SimpleLoader, {\n    height: 200,\n    width: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, rooms.length > 0 ? React.createElement(Pagination, {\n    total: meta ? meta.pagination.total : 0,\n    current: page,\n    onChange: pageChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }) : '')) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.roomList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, showRoom != null ? React.createElement(Grid, {\n    key: showRoom.id,\n    id: \"room-\".concat(showRoom.id),\n    item: true,\n    xs: 12,\n    onMouseEnter: function onMouseEnter() {\n      return hoverAction(showRoom.id);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return hoverAction(0);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(RoomCardMapXs, {\n    showRoom: showRoom,\n    isHover: hoverId === showRoom.id,\n    focus: focusRoomLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, defaultRoom != null ? React.createElement(Grid, {\n    key: defaultRoom.id,\n    id: \"room-\".concat(defaultRoom.id),\n    item: true,\n    xs: 12,\n    onMouseEnter: function onMouseEnter() {\n      return hoverAction(defaultRoom.id);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return hoverAction(0);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(RoomCardMapXs, {\n    showRoom: defaultRoom,\n    isHover: hoverId === defaultRoom.id,\n    focus: focusRoomLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })) : React.createElement(SimpleLoader, {\n    height: 200,\n    width: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })))));\n};\n\nexport default compose(withStyles(styles), memo)(MapRooms);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Maps/MapRooms.tsx"],"names":["createStyles","withStyles","React","Fragment","useState","useContext","memo","useEffect","compose","_","Grid","RoomCardMap","SimpleLoader","Pagination","RoomIndexContext","GlobalContext","axios","RoomCardMapXs","styles","theme","roomList","breakpoints","only","maxWidth","MapRooms","props","classes","rooms","hoverId","hoverAction","focusRoomLocation","pageChange","page","showRoom","setShowRoom","defaultRoom","setdefaultRoom","state","width","xsMode","meta","settings","speed","slidesToShow","slidesToScroll","lazyLoad","arrows","get","then","res","data","catch","err","length","map","room","id","pagination","total"],"mappings":"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","sourcesContent":["import { ThemeCustom } from '@/components/Theme/Theme';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\nimport React, { ComponentType, Fragment, useState, useContext, memo, useEffect } from 'react';\nimport { compose } from 'recompose';\nimport _ from 'lodash';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport RoomCardMap from '@/components/Rooms/RoomCardMap';\nimport SimpleLoader from '@/components/Loading/SimpleLoader';\nimport Pagination from 'rc-pagination';\nimport Slider, { Settings } from 'react-slick';\nimport { RoomIndexRes } from '@/types/Requests/Rooms/RoomResponses';\nimport { IRoomIndexContext, RoomIndexContext } from '@/store/context/Room/RoomIndexContext';\nimport { IGlobalContext, GlobalContext } from '@/store/context/GlobalContext';\nimport { axios } from '@/utils/axiosInstance';\nimport { AxiosRes } from '@/types/Requests/ResponseTemplate';\nimport { AxiosError } from 'axios';\nimport RoomCardMapXs from '@/components/Rooms/RoomCardMapXs';\nimport { Hidden } from '@material-ui/core';\n\ninterface IProps {\n  classes?: any\n  rooms: RoomIndexRes[]\n  page: number\n\n  hoverAction(id: number): void\n\n  hoverId: number\n\n  focusRoomLocation(room: RoomIndexRes): void\n\n  pageChange(current: number, pageSize: number): void\n\n  defaultRoom: RoomIndexRes\n}\n\nconst styles: any = (theme: ThemeCustom) => createStyles({\n  roomList: {\n    [theme!.breakpoints!.only!('xs')]: {\n      maxWidth: '100%',\n    },\n  },\n});\n\n// @ts-ignore\nconst MapRooms: ComponentType<IProps> = (props: IProps) => {\n  const { classes, rooms, hoverId, hoverAction, focusRoomLocation, pageChange, page } = props;\n  const [showRoom, setShowRoom] = useState<RoomIndexRes | null>(null);\n  const [defaultRoom, setdefaultRoom] = useState<RoomIndexRes | null>(null);\n  const { state } = useContext<IRoomIndexContext>(RoomIndexContext);\n  const { width } = useContext<IGlobalContext>(GlobalContext);\n\n  const xsMode = width === 'xs';\n  const { meta } = state;\n\n  const settings: Settings = {\n    speed: 300,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    lazyLoad: 'ondemand',\n    arrows: false,\n  };\n\n  useEffect(() => {\n    if (width === 'xs' && hoverId !== 0 && hoverId !== -1) {\n      axios.get(`/rooms/${hoverId}?include=comforts,details,media,city,district,prices`)\n        .then((res: AxiosRes<RoomIndexRes>) => {\n          setShowRoom(res.data.data)\n        })\n        .catch((err: AxiosError) => {\n\n        })\n    }\n  }, [hoverId]);\n\n  useEffect(() => {\n    if (rooms) {\n      setdefaultRoom(rooms[0])\n    }\n  }, [rooms.length > 0])\n\n  return (\n    <Fragment>\n      {!xsMode ? (\n        <Fragment>\n          {rooms.length > 0 ? _.map(rooms, room => (\n            <Grid\n              key={room.id}\n              id={`room-${room.id}`}\n              item xs={12}\n              onMouseEnter={() => hoverAction(room.id)}\n              onMouseLeave={() => hoverAction(0)}\n            >\n              <RoomCardMap\n                room={room}\n                isHover={hoverId === room.id}\n                focus={focusRoomLocation} />\n            </Grid>\n          )) : <SimpleLoader height={200} width={200} />}\n          <Grid container item xs={12} justify='flex-end'>\n            {rooms.length > 0 ? (\n              <Pagination\n                total={meta ? meta!.pagination.total : 0}\n                current={page}\n                onChange={pageChange}\n              />\n            ) : ''}\n          </Grid>\n        </Fragment>\n      ) : (\n          <Fragment>\n            <Grid item xs={12} className={classes.roomList}>\n              {showRoom != null ? (\n                <Grid\n                  key={showRoom.id}\n                  id={`room-${showRoom.id}`}\n                  item xs={12}\n                  onMouseEnter={() => hoverAction(showRoom.id)}\n                  onMouseLeave={() => hoverAction(0)}\n                >\n                  <RoomCardMapXs\n                    showRoom={showRoom}\n                    isHover={hoverId === showRoom.id}\n                    focus={focusRoomLocation}\n                  />\n                </Grid>\n              ) : (\n                  <Fragment>\n                    {defaultRoom != null ? (\n                      <Grid\n                        key={defaultRoom.id}\n                        id={`room-${defaultRoom.id}`}\n                        item xs={12}\n                        onMouseEnter={() => hoverAction(defaultRoom.id)}\n                        onMouseLeave={() => hoverAction(0)}\n                      >\n                        <RoomCardMapXs\n                          showRoom={defaultRoom}\n                          isHover={hoverId === defaultRoom.id}\n                          focus={focusRoomLocation}\n                        />\n                      </Grid>\n                    ) : <SimpleLoader height={200} width={200} />}\n                  </Fragment>\n                )}\n            </Grid>\n          </Fragment>\n        )}\n    </Fragment>\n  );\n};\n\nexport default compose<IProps, any>(\n  withStyles(styles),\n  memo,\n)(MapRooms);\n"]},"metadata":{},"sourceType":"module"}