{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Utils/PopOver.tsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Popover from \"@material-ui/core/Popover\";\n\nvar styles = function styles(theme) {\n  return {\n    paper: {\n      padding: '15px'\n    },\n    lightTooltip: {\n      color: \"rgba(0, 0, 0, 0.87)\",\n      fontSize: 11\n    },\n    grow: {\n      flexGrow: 1\n    },\n    button: {\n      border: \"1px solid #F2F2F2\",\n      textTransform: \"initial\",\n      boxShadow: 'none',\n      background: 'transparent',\n      marginRight: '13px',\n      \"&:active\": {\n        background: '#F2F2F2'\n      }\n    }\n  };\n};\n\nvar PopOver = function PopOver(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var open = Boolean(anchorEl);\n  var classes = props.classes,\n      title = props.title,\n      children = props.children;\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Button, {\n    \"aria-owns\": open ? \"simple-popper\" : undefined,\n    \"aria-haspopup\": \"true\",\n    variant: \"contained\",\n    onClick: handleClick,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, title), React.createElement(Popover, {\n    classes: {\n      paper: classes.paper\n    },\n    id: \"simple-popper\",\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, children));\n};\n\nexport default withStyles(styles)(PopOver);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Utils/PopOver.tsx"],"names":["withStyles","React","useState","Button","Popover","styles","theme","paper","padding","lightTooltip","color","fontSize","grow","flexGrow","button","border","textTransform","boxShadow","background","marginRight","PopOver","props","anchorEl","setAnchorEl","open","Boolean","classes","title","children","handleClick","event","currentTarget","handleClose","undefined","vertical","horizontal"],"mappings":";;AAEA,SAASA,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,IAKEC,QALF,QAMO,OANP;AAQA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;;AAQA,IAAMC,MAAW,GAAG,SAAdA,MAAc,CAACC,KAAD;AAAA,SAAyB;AAC3CC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AADJ,KADoC;AAI3CC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,qBADK;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAJ6B;AAQ3CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KARqC;AAW3CC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,mBADF;AAENC,MAAAA,aAAa,EAAE,SAFT;AAGNC,MAAAA,SAAS,EAAE,MAHL;AAINC,MAAAA,UAAU,EAAE,aAJN;AAKNC,MAAAA,WAAW,EAAE,MALP;AAMN,kBAAY;AACVD,QAAAA,UAAU,EAAE;AADF;AANN;AAXmC,GAAzB;AAAA,CAApB;;AAuBA,IAAME,OAA8B,GAAG,SAAjCA,OAAiC,CAACC,KAAD,EAAmB;AAAA,kBACxBnB,QAAQ,CAAM,IAAN,CADgB;AAAA;AAAA,MACjDoB,QADiD;AAAA,MACvCC,WADuC;;AAExD,MAAMC,IAAI,GAAGC,OAAO,CAACH,QAAD,CAApB;AAFwD,MAIhDI,OAJgD,GAInBL,KAJmB,CAIhDK,OAJgD;AAAA,MAIvCC,KAJuC,GAInBN,KAJmB,CAIvCM,KAJuC;AAAA,MAIhCC,QAJgC,GAInBP,KAJmB,CAIhCO,QAJgC;;AAMxD,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAgB;AAClCP,IAAAA,WAAW,CAACO,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBT,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,iBAAWC,IAAI,GAAG,eAAH,GAAqBS,SADtC;AAEE,qBAAc,MAFhB;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,OAAO,EAAEJ,WAJX;AAKE,IAAA,SAAS,EAAEH,OAAO,CAACZ,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGa,KAPH,CADF,EAUE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAE;AACPpB,MAAAA,KAAK,EAAEmB,OAAO,CAACnB;AADR,KADX;AAIE,IAAA,EAAE,EAAC,eAJL;AAKE,IAAA,IAAI,EAAEiB,IALR;AAME,IAAA,QAAQ,EAAEF,QANZ;AAOE,IAAA,OAAO,EAAEU,WAPX;AAQE,IAAA,YAAY,EAAE;AACZE,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KARhB;AAYE,IAAA,eAAe,EAAE;AACfD,MAAAA,QAAQ,EAAE,KADK;AAEfC,MAAAA,UAAU,EAAE;AAFG,KAZnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBGP,QAjBH,CAVF,CADF;AAgCD,CA9CD;;AAgDA,eAAe5B,UAAU,CAACK,MAAD,CAAV,CAAmBe,OAAnB,CAAf","sourcesContent":["import { ThemeCustom } from \"@/components/Theme/Theme\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, {\n  ComponentType,\n  Fragment,\n  useContext,\n  useEffect,\n  useState\n} from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport Popover from \"@material-ui/core/Popover\";\n\ninterface IProps {\n  children?: any;\n  classes?: any;\n  title?: string;\n}\n\nconst styles: any = (theme: ThemeCustom) => ({\n  paper: {\n    padding: '15px'\n  },\n  lightTooltip: {\n    color: \"rgba(0, 0, 0, 0.87)\",\n    fontSize: 11\n  },\n  grow: {\n    flexGrow: 1\n  },\n  button: {\n    border: \"1px solid #F2F2F2\",\n    textTransform: \"initial\",\n    boxShadow: 'none',\n    background: 'transparent',\n    marginRight: '13px',\n    \"&:active\": {\n      background: '#F2F2F2'\n    }\n  }\n});\n\nconst PopOver: ComponentType<IProps> = (props: IProps) => {\n  const [anchorEl, setAnchorEl] = useState<any>(null);\n  const open = Boolean(anchorEl);\n\n  const { classes, title, children } = props;\n\n  const handleClick = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <span>\n      <Button\n        aria-owns={open ? \"simple-popper\" : undefined}\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        onClick={handleClick}\n        className={classes.button}\n      >\n        {title}\n      </Button>\n      <Popover\n        classes={{\n          paper: classes.paper\n        }}\n        id=\"simple-popper\"\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n      >\n        {children}\n      </Popover>\n    </span>\n  );\n};\n\nexport default withStyles(styles)(PopOver);\n"]},"metadata":{},"sourceType":"module"}