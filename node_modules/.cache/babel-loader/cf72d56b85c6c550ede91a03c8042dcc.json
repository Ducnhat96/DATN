{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styles = require('@material-ui/core/styles');\n\nvar _colorManipulator = require('@material-ui/core/styles/colorManipulator');\n\nvar _transitions = require('@material-ui/core/styles/transitions');\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: 256,\n      height: 256,\n      fontFamily: theme.typography.fontFamily,\n      cursor: 'default'\n    },\n    circle: {\n      width: 256,\n      height: 256,\n      borderRadius: '50%',\n      background: theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[900],\n      color: theme.palette.text.primary,\n      position: 'relative'\n    },\n    number: {\n      width: 32,\n      height: 32,\n      left: 'calc(50% - 16px)',\n      top: 'calc(50% - 16px)',\n      position: 'absolute',\n      textAlign: 'center',\n      lineHeight: '32px',\n      cursor: 'pointer',\n      fontSize: '14px',\n      pointerEvents: 'none',\n      userSelect: 'none',\n      '&.selected': {\n        color: (0, _colorManipulator.getContrastRatio)(theme.palette.primary.main, theme.palette.common.black) < 7 ? theme.palette.common.white : theme.palette.common.black\n      }\n    },\n    smallNumber: {\n      fontSize: '12px',\n      color: theme.palette.text.secondary\n    },\n    pointer: {\n      width: 'calc(50% - 20px)',\n      height: 2,\n      backgroundColor: theme.palette.primary.main,\n      position: 'absolute',\n      left: '50%',\n      top: 'calc(50% - 1px)',\n      transformOrigin: 'left center',\n      pointerEvents: 'none'\n    },\n    animatedPointer: {\n      transition: 'all ' + _transitions.duration.short + 'ms ' + _transitions.easing.easeInOut\n    },\n    smallPointer: {\n      width: 'calc(50% - 52px)'\n    },\n    innerDot: {\n      backgroundColor: theme.palette.primary.main,\n      position: 'absolute',\n      top: -4 + 1,\n      left: -4,\n      width: 8,\n      height: 8,\n      borderRadius: '50%'\n    },\n    outerDot: {\n      border: '16px solid ' + theme.palette.primary.main,\n      borderWidth: 16,\n      position: 'absolute',\n      top: -16 + 1,\n      right: -16,\n      width: 0,\n      height: 0,\n      borderRadius: '50%',\n      boxSizing: 'content-box'\n    },\n    outerDotOdd: {\n      background: (0, _colorManipulator.getContrastRatio)(theme.palette.primary.main, theme.palette.common.black) < 7 ? theme.palette.common.white : theme.palette.common.black,\n      width: 4,\n      height: 4,\n      borderWidth: 14\n    }\n  };\n};\n\nvar size = 256;\n\nvar Clock = function (_React$PureComponent) {\n  _inherits(Clock, _React$PureComponent);\n\n  function Clock(props) {\n    _classCallCheck(this, Clock);\n\n    var _this = _possibleConstructorReturn(this, (Clock.__proto__ || Object.getPrototypeOf(Clock)).call(this, props));\n\n    _this.disableAnimatedPointer = function () {\n      return _this.setState({\n        touching: true\n      });\n    };\n\n    _this.enableAnimatedPointer = function () {\n      return _this.setState({\n        touching: false\n      });\n    };\n\n    _this.handleTouchMove = function (e) {\n      e.preventDefault(); // prevent scrolling behind the clock on iOS\n\n      var rect = e.target.getBoundingClientRect();\n\n      _this.movePointer(e.changedTouches[0].clientX - rect.left, e.changedTouches[0].clientY - rect.top);\n    };\n\n    _this.handleTouchEnd = function (e) {\n      _this.handleTouchMove(e);\n\n      _this.enableAnimatedPointer();\n    };\n\n    _this.handleMouseMove = function (e) {\n      // MouseEvent.which is deprecated, but MouseEvent.buttons is not supported in Safari\n      if (e.buttons === 1 || e.which === 1) {\n        var rect = e.target.getBoundingClientRect();\n\n        _this.movePointer(e.clientX - rect.left, e.clientY - rect.top);\n      }\n    };\n\n    _this.handleClick = function (e) {\n      var rect = e.target.getBoundingClientRect();\n\n      _this.movePointer(e.clientX - rect.left, e.clientY - rect.top);\n    };\n\n    _this.state = {\n      touching: false,\n      angle: getPointerAngle(props.value, props.mode)\n    };\n    return _this;\n  }\n\n  _createClass(Clock, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(_ref) {\n      var value = _ref.value,\n          mode = _ref.mode;\n\n      if (mode !== this.props.mode || value !== this.props.value) {\n        this.setState({\n          angle: (0, _util.getShortestAngle)(this.state.angle, getPointerAngle(value, mode))\n        });\n      }\n    }\n  }, {\n    key: 'movePointer',\n    value: function movePointer(x, y) {\n      var value = getPointerValue(x, y, this.props.mode);\n\n      if (value !== this.props.value && this.props.onChange != null) {\n        this.props.onChange(value);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _classNames;\n\n      var _props = this.props,\n          classes = _props.classes,\n          mode = _props.mode,\n          value = _props.value,\n          other = _objectWithoutProperties(_props, ['classes', 'mode', 'value']);\n\n      var touching = this.state.touching;\n      return _react2.default.createElement('div', _extends({\n        className: classes.root\n      }, other), _react2.default.createElement('div', {\n        className: classes.circle,\n        onTouchMove: this.handleTouchMove,\n        onMouseMove: this.handleMouseMove,\n        onTouchStart: this.disableAnimatedPointer,\n        onMouseDown: this.disableAnimatedPointer,\n        onTouchEnd: this.handleTouchEnd,\n        onMouseUp: this.enableAnimatedPointer,\n        onClick: this.handleClick\n      }, _react2.default.createElement('div', {\n        className: (0, _classnames2.default)(classes.pointer, (_classNames = {}, _defineProperty(_classNames, classes.smallPointer, mode === '24h' && (value === 0 || value > 12)), _defineProperty(_classNames, classes.animatedPointer, !touching), _classNames)),\n        style: {\n          transform: 'rotate(' + this.state.angle + 'deg)'\n        }\n      }, _react2.default.createElement('div', {\n        className: classes.innerDot\n      }), _react2.default.createElement('div', {\n        className: (0, _classnames2.default)(classes.outerDot, _defineProperty({}, classes.outerDotOdd, mode === 'minutes' && value % 5 !== 0))\n      })), mode === '12h' && getNumbers(12, {\n        size: size\n      }).map(function (digit, i) {\n        return _react2.default.createElement('span', {\n          key: digit.display,\n          className: (0, _classnames2.default)(classes.number, {\n            selected: value === digit.display\n          }),\n          style: {\n            transform: 'translate(' + digit.translateX + 'px, ' + digit.translateY + 'px)'\n          }\n        }, digit.display);\n      }), mode === '24h' && getNumbers(12, {\n        size: size\n      }).map(function (digit, i) {\n        return _react2.default.createElement('span', {\n          key: digit.display,\n          className: (0, _classnames2.default)(classes.number, {\n            selected: value === digit.display\n          }),\n          style: {\n            transform: 'translate(' + digit.translateX + 'px, ' + digit.translateY + 'px)'\n          }\n        }, digit.display);\n      }), mode === '24h' && getNumbers(12, {\n        size: size - 64,\n        start: 13\n      }).map(function (digit, i) {\n        return _react2.default.createElement('span', {\n          key: digit.display,\n          className: (0, _classnames2.default)(classes.number, classes.smallNumber, {\n            selected: value === digit.display || digit.display === 24 && value === 0\n          }),\n          style: {\n            transform: 'translate(' + digit.translateX + 'px, ' + digit.translateY + 'px)'\n          }\n        }, digit.display === 24 ? '00' : digit.display);\n      }), mode === 'minutes' && getNumbers(12, {\n        size: size,\n        start: 5,\n        step: 5\n      }).map(function (digit, i) {\n        return _react2.default.createElement('span', {\n          key: digit.display,\n          className: (0, _classnames2.default)(classes.number, {\n            selected: value === digit.display || digit.display === 60 && value === 0\n          }),\n          style: {\n            transform: 'translate(' + digit.translateX + 'px, ' + digit.translateY + 'px)'\n          }\n        }, digit.display === 60 ? '00' : digit.display);\n      })));\n    }\n  }]);\n\n  return Clock;\n}(_react2.default.PureComponent);\n\nClock.propTypes = {\n  /** Sets the mode of this clock. It can either select hours (supports 12- and 24-hour-clock) or minutes. */\n  mode: _propTypes2.default.oneOf(['12h', '24h', 'minutes']).isRequired,\n\n  /** Callback that is called with the new hours/minutes (as a number) when the value is changed. */\n  onChange: _propTypes2.default.func,\n\n  /** The value of the clock. */\n  value: _propTypes2.default.number.isRequired\n};\nexports.default = (0, _styles.withStyles)(styles)(Clock);\n\nfunction getNumbers(count, _ref2) {\n  var size = _ref2.size,\n      _ref2$start = _ref2.start,\n      start = _ref2$start === undefined ? 1 : _ref2$start,\n      _ref2$step = _ref2.step,\n      step = _ref2$step === undefined ? 1 : _ref2$step;\n  return Array.apply(null, Array(count)).map(function (_, i) {\n    return {\n      display: i * step + start,\n      translateX: (size / 2 - 20) * Math.cos(2 * Math.PI * (i - 2) / count),\n      translateY: (size / 2 - 20) * Math.sin(2 * Math.PI * (i - 2) / count)\n    };\n  });\n}\n\nfunction getPointerAngle(value, mode) {\n  switch (mode) {\n    case '12h':\n      return 360 / 12 * (value - 3);\n\n    case '24h':\n      return 360 / 12 * (value % 12 - 3);\n\n    case 'minutes':\n      return 360 / 60 * (value - 15);\n  }\n}\n\nfunction getPointerValue(x, y, mode) {\n  var angle = Math.atan2(size / 2 - x, size / 2 - y) / Math.PI * 180;\n\n  if (angle < 0) {\n    angle = 360 + angle;\n  }\n\n  switch (mode) {\n    case '12h':\n      {\n        var value = 12 - Math.round(angle * 12 / 360);\n        return value === 0 ? 12 : value;\n      }\n\n    case '24h':\n      {\n        var radius = Math.sqrt(Math.pow(size / 2 - x, 2) + Math.pow(size / 2 - y, 2));\n\n        var _value = 12 - Math.round(angle * 12 / 360);\n\n        if (_value === 0) {\n          _value = 12;\n        }\n\n        if (radius < size / 2 - 32) {\n          _value = _value === 12 ? 0 : _value + 12;\n        }\n\n        return _value;\n      }\n\n    case 'minutes':\n      {\n        var _value2 = Math.round(60 - 60 * angle / 360);\n\n        return _value2 === 60 ? 0 : _value2;\n      }\n  }\n}","map":null,"metadata":{},"sourceType":"script"}