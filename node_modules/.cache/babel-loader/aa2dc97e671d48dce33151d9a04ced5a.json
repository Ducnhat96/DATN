{"ast":null,"code":"import { DEFAULT_DATE_TIME_FORMAT } from \"@/utils/store/global\";\nimport { updateObject } from \"@/store/utility\";\nimport * as act from \"@/store/actions/actionTypes\";\nvar init = {\n  roomID: null,\n  numberOfGuest: 1,\n  bookingType: 2,\n  startDate: undefined,\n  endDate: undefined,\n  checkInHour: undefined,\n  checkOutHour: undefined,\n  checkOutMinute: undefined,\n  stateOfBooking: false\n};\n\nvar changeDate = function changeDate(state, action) {\n  var date = action.date;\n  var startDate = date.startDate.format(DEFAULT_DATE_TIME_FORMAT);\n  var endDate = date.endDate ? date.endDate.format(DEFAULT_DATE_TIME_FORMAT) : date.startDate.clone().add(1, \"days\").format(DEFAULT_DATE_TIME_FORMAT);\n  return updateObject(state, {\n    startDate: startDate,\n    endDate: endDate\n  });\n};\n\nvar ChangeStatusBooking = function ChangeStatusBooking(state, action) {\n  var obj = {\n    stateOfBooking: action.statusBooking\n  };\n  return updateObject(state, obj);\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : init;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case act.CHANGE_DATE:\n      return changeDate(state, action);\n\n    case act.STATUS_OF_BOOKING:\n      return ChangeStatusBooking(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/store/reducers/booking.ts"],"names":["DEFAULT_DATE_TIME_FORMAT","updateObject","act","init","roomID","numberOfGuest","bookingType","startDate","undefined","endDate","checkInHour","checkOutHour","checkOutMinute","stateOfBooking","changeDate","state","action","date","format","clone","add","ChangeStatusBooking","obj","statusBooking","reducer","type","CHANGE_DATE","STATUS_OF_BOOKING"],"mappings":"AAEA,SAASA,wBAAT,QAAyC,sBAAzC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,6BAArB;AA4BA,IAAMC,IAAkB,GAAG;AACzBC,EAAAA,MAAM,EAAE,IADiB;AAEzBC,EAAAA,aAAa,EAAE,CAFU;AAGzBC,EAAAA,WAAW,EAAE,CAHY;AAIzBC,EAAAA,SAAS,EAAEC,SAJc;AAKzBC,EAAAA,OAAO,EAAED,SALgB;AAMzBE,EAAAA,WAAW,EAAEF,SANY;AAOzBG,EAAAA,YAAY,EAAEH,SAPW;AAQzBI,EAAAA,cAAc,EAAEJ,SARS;AASzBK,EAAAA,cAAc,EAAE;AATS,CAA3B;;AAYA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAsBC,MAAtB,EAAgD;AAAA,MACzDC,IADyD,GAChDD,MADgD,CACzDC,IADyD;AAGjE,MAAIV,SAAS,GAAGU,IAAI,CAAEV,SAAN,CAAiBW,MAAjB,CAAwBlB,wBAAxB,CAAhB;AACA,MAAIS,OAAO,GAAGQ,IAAI,CAAER,OAAN,GACVQ,IAAI,CAAER,OAAN,CAAeS,MAAf,CAAsBlB,wBAAtB,CADU,GAEViB,IAAI,CACDV,SADH,CACcY,KADd,GAEGC,GAFH,CAEO,CAFP,EAEU,MAFV,EAGGF,MAHH,CAGUlB,wBAHV,CAFJ;AAOA,SAAOC,YAAY,CAACc,KAAD,EAAQ;AACzBR,IAAAA,SAAS,EAATA,SADyB;AAEzBE,IAAAA,OAAO,EAAPA;AAFyB,GAAR,CAAnB;AAID,CAfD;;AAiBA,IAAMY,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACN,KAAD,EAAsBC,MAAtB,EAAgD;AAC1E,MAAIM,GAAQ,GAAG;AAAET,IAAAA,cAAc,EAAEG,MAAM,CAACO;AAAzB,GAAf;AACA,SAAOtB,YAAY,CAAec,KAAf,EAAsBO,GAAtB,CAAnB;AACD,CAHD;;AAKA,IAAME,OAAgB,GAAG,SAAnBA,OAAmB,GAGN;AAAA,MAFjBT,KAEiB,uEAFKZ,IAEL;AAAA,MADjBa,MACiB;;AACjB,UAAQA,MAAM,CAACS,IAAf;AACE,SAAKvB,GAAG,CAACwB,WAAT;AACE,aAAOZ,UAAU,CAACC,KAAD,EAAQC,MAAR,CAAjB;;AACF,SAAKd,GAAG,CAACyB,iBAAT;AACE,aAAON,mBAAmB,CAACN,KAAD,EAAQC,MAAR,CAA1B;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD,CAZD;;AAcA,eAAeS,OAAf","sourcesContent":["import { Moment } from \"moment\";\nimport { Reducer } from \"redux\";\nimport { DEFAULT_DATE_TIME_FORMAT } from \"@/utils/store/global\";\nimport { updateObject } from \"@/store/utility\";\nimport * as act from \"@/store/actions/actionTypes\";\n\nexport type DateRange = {\n  startDate: Moment | null;\n  endDate: Moment | null;\n};\n\nexport type BookingState = {\n  readonly roomID: number | null;\n  readonly numberOfGuest: number;\n  readonly bookingType: number;\n  readonly startDate: string | undefined;\n  readonly endDate: string | undefined;\n  readonly checkInHour: string | undefined;\n  readonly checkOutHour: string | undefined;\n  readonly checkOutMinute: string | undefined;\n  readonly stateOfBooking: boolean;\n};\n\nexport interface BookingAction {\n  type: string;\n  value?: string | number;\n  field?: string;\n  status?: boolean;\n  date?: DateRange;\n  statusBooking?: boolean;\n}\n\nconst init: BookingState = {\n  roomID: null,\n  numberOfGuest: 1,\n  bookingType: 2,\n  startDate: undefined,\n  endDate: undefined,\n  checkInHour: undefined,\n  checkOutHour: undefined,\n  checkOutMinute: undefined,\n  stateOfBooking: false\n};\n\nconst changeDate = (state: BookingState, action: BookingAction) => {\n  const { date } = action;\n\n  let startDate = date!.startDate!.format(DEFAULT_DATE_TIME_FORMAT);\n  let endDate = date!.endDate\n    ? date!.endDate!.format(DEFAULT_DATE_TIME_FORMAT)\n    : date!\n        .startDate!.clone()\n        .add(1, \"days\")\n        .format(DEFAULT_DATE_TIME_FORMAT);\n\n  return updateObject(state, {\n    startDate,\n    endDate\n  });\n};\n\nconst ChangeStatusBooking = (state: BookingState, action: BookingAction) => {\n  let obj: any = { stateOfBooking: action.statusBooking };\n  return updateObject<BookingState>(state, obj);\n};\n\nconst reducer: Reducer = (\n  state: BookingState = init,\n  action: BookingAction\n): BookingState => {\n  switch (action.type) {\n    case act.CHANGE_DATE:\n      return changeDate(state, action);\n    case act.STATUS_OF_BOOKING:\n      return ChangeStatusBooking(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}