{"ast":null,"code":"import _defineProperty from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/layouts/Main/ListRoomCity.tsx\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, { Fragment, useContext, useEffect } from \"react\";\nimport { compose } from \"recompose\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"@/styles/chongchaycuaSON.scss\";\nimport Grid from \"@material-ui/core/Grid\";\nimport RoomCity from \"@/layouts/Main/RoomCity\";\nimport NextArrowSlider from \"@/views/DetailsPage/NextArrowSlider\";\nimport PrevArrowSlider from \"@/views/DetailsPage/PrevArrowSlider\";\nimport { GlobalContext } from \"@/store/context/GlobalContext\";\nimport { RoomHomepageContext, getRoomCity } from \"@/store/context/Room/RoomHomepageContext\";\n\nvar styles = function styles(theme) {\n  return createStyles({\n    listRoomCity: _defineProperty({}, theme.breakpoints.down(\"sm\"), {\n      width: \"100%\",\n      display: \"block\"\n    }),\n    titleRoom: {\n      color: \"rgb(72, 72, 72)\"\n    }\n  });\n}; // const RoomCity = lazy(() => import('@/layouts/Main/RoomCity'));\n// @ts-ignore\n\n\nvar ListRoomCity = function ListRoomCity(props) {\n  var classes = props.classes;\n\n  var _useContext = useContext(RoomHomepageContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useContext2 = useContext(GlobalContext),\n      width = _useContext2.width;\n\n  var roomsCity = state.roomsCity;\n  var settingRoomCity = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    swipeToSlide: true,\n    lazyLoad: \"ondemand\",\n    nextArrow: React.createElement(NextArrowSlider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }),\n    prevArrow: React.createElement(PrevArrowSlider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }),\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 4,\n        autoplay: true,\n        autoplaySpeed: 5000\n      }\n    }, {\n      breakpoint: 768,\n      settings: {\n        dots: true,\n        slidesToShow: 3,\n        autoplay: true,\n        arrows: false,\n        autoplaySpeed: 5000\n      }\n    }, {\n      breakpoint: 425,\n      settings: {\n        dots: true,\n        slidesToShow: 1,\n        autoplay: true,\n        autoplaySpeed: 5000,\n        arrows: false,\n        centerMode: true,\n        centerPadding: \"25px\"\n      }\n    }]\n  };\n  useEffect(function () {\n    getRoomCity().then(function (data) {\n      var roomData = data.data;\n      dispatch({\n        type: \"setRoomCity\",\n        rooms: roomData\n      });\n    }).catch(function (err) {\n      console.error(err);\n    });\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: classes.titleRoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"\\u0110i\\u1EC3m \\u0111\\u1EBFn n\\u1ED5i b\\u1EADt\"), React.createElement(Grid, {\n    container: true,\n    className: classes.listRoomCity,\n    spacing: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, width === \"lg\" ? roomsCity.map(function (room, index) {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 3,\n      key: room.city_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(RoomCity, {\n      room: room,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n  }) : React.createElement(Slider, Object.assign({}, settingRoomCity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), roomsCity.map(function (room, index) {\n    return React.createElement(Fragment, {\n      key: room.city_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(RoomCity, {\n      room: room,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }));\n  }))));\n};\n\nexport default compose(withStyles(styles))(ListRoomCity);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/layouts/Main/ListRoomCity.tsx"],"names":["createStyles","withStyles","React","Fragment","useContext","useEffect","compose","Slider","Grid","RoomCity","NextArrowSlider","PrevArrowSlider","GlobalContext","RoomHomepageContext","getRoomCity","styles","theme","listRoomCity","breakpoints","down","width","display","titleRoom","color","ListRoomCity","props","classes","state","dispatch","roomsCity","settingRoomCity","dots","infinite","speed","slidesToShow","swipeToSlide","lazyLoad","nextArrow","prevArrow","responsive","breakpoint","settings","autoplay","autoplaySpeed","arrows","centerMode","centerPadding","then","data","roomData","type","rooms","catch","err","console","error","map","room","index","city_id"],"mappings":"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","sourcesContent":["import { ThemeCustom } from \"@/components/Theme/Theme\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles, { WithStyles } from \"@material-ui/core/styles/withStyles\";\nimport React, {\n  ComponentType,\n  Fragment,\n  useContext,\n  useEffect,\n  useState,\n  lazy,\n  Suspense\n} from \"react\";\nimport { compose } from \"recompose\";\n\nimport Slider, { Settings } from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"@/styles/chongchaycuaSON.scss\";\nimport Grid from \"@material-ui/core/Grid\";\nimport RoomCity from \"@/layouts/Main/RoomCity\";\nimport NextArrowSlider from \"@/views/DetailsPage/NextArrowSlider\";\nimport PrevArrowSlider from \"@/views/DetailsPage/PrevArrowSlider\";\n\nimport { IGlobalContext, GlobalContext } from \"@/store/context/GlobalContext\";\nimport _ from \"lodash\";\nimport {\n  RoomHomepageContext,\n  IRoomHomepageContext,\n  getRoomCity\n} from \"@/store/context/Room/RoomHomepageContext\";\n\ninterface IProps {\n  classes?: any;\n}\n\nconst styles: any = (theme: ThemeCustom) =>\n  createStyles({\n    listRoomCity: {\n      [theme!.breakpoints!.down!(\"sm\")]: {\n        width: \"100%\",\n        display: \"block\"\n      }\n    },\n    titleRoom: {\n      color: \"rgb(72, 72, 72)\"\n    }\n  });\n// const RoomCity = lazy(() => import('@/layouts/Main/RoomCity'));\n\n// @ts-ignore\nconst ListRoomCity: ComponentType<IProps> = (props: IProps) => {\n  const { classes } = props;\n\n  const { state, dispatch } = useContext<IRoomHomepageContext>(\n    RoomHomepageContext\n  );\n  const { width } = useContext<IGlobalContext>(GlobalContext);\n\n  const { roomsCity } = state;\n\n  const settingRoomCity: Settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    swipeToSlide: true,\n    lazyLoad: \"ondemand\",\n    nextArrow: <NextArrowSlider />,\n    prevArrow: <PrevArrowSlider />,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 4,\n          autoplay: true,\n          autoplaySpeed: 5000\n        }\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          dots: true,\n          slidesToShow: 3,\n          autoplay: true,\n          arrows: false,\n          autoplaySpeed: 5000\n        }\n      },\n      {\n        breakpoint: 425,\n        settings: {\n          dots: true,\n          slidesToShow: 1,\n          autoplay: true,\n          autoplaySpeed: 5000,\n          arrows: false,\n          centerMode: true,\n          centerPadding: \"25px\"\n        }\n      }\n    ]\n  };\n\n  useEffect(() => {\n    getRoomCity()\n      .then(data => {\n        const roomData = data.data;\n        dispatch({\n          type: \"setRoomCity\",\n          rooms: roomData\n        });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }, []);\n\n  return (\n    <Fragment>\n      <h2 className={classes.titleRoom}>Điểm đến nổi bật</h2>\n      <Grid container className={classes.listRoomCity} spacing={8}>\n\n        {width === \"lg\" ? (\n          roomsCity.map((room, index) => {\n            return (\n              <Grid item xs={12} sm={6} md={3} key={room.city_id}>\n                <RoomCity room={room} />\n              </Grid>\n            );\n          })\n        ) : (\n            <Slider {...settingRoomCity}>\n              {roomsCity.map((room, index) => (\n                <Fragment key={room.city_id}>\n                  {/* <RoomCity room = {room} /> */}\n                  {/* <Suspense fallback={<div>Loading...</div>}> */}\n                  <RoomCity room={room} />\n                  {/* </Suspense> */}\n                </Fragment>\n              ))}\n            </Slider>\n          )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default compose<IProps, any>(withStyles(styles))(ListRoomCity);\n"]},"metadata":{},"sourceType":"module"}