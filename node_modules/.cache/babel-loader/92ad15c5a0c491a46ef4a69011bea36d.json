{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Maps/Maps.tsx\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, { Fragment, useContext, useEffect, useState, memo } from \"react\";\nimport { compose } from \"recompose\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { RoomIndexContext, getRooms } from \"@/store/context/Room/RoomIndexContext\";\nimport { TransitionCustom, FILTER, TAB_LIST } from \"@/views/Rooms/BottomNav\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FilterIcon from \"@material-ui/icons/FilterListRounded\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport { RoomMapContext } from \"@/store/context/Room/RoomMapContext\";\nimport \"rc-pagination/assets/index.css\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { GlobalContext } from \"@/store/context/GlobalContext\";\nimport { Hidden } from \"@material-ui/core\";\nimport MapDetail from \"@/components/Maps/MapDetail\";\nimport MapRooms from \"@/components/Maps/MapRooms\";\nimport MapFilter from \"@/components/Maps/MapFilter\";\nimport FilterDrawerM from \"@/views/Rooms/Filter/FilterDrawerM\";\n\nvar styles = function styles(theme) {\n  var _closeButton, _list, _mapContainer;\n\n  return createStyles({\n    closeButton: (_closeButton = {}, _defineProperty(_closeButton, theme.breakpoints.only(\"xs\"), {}), _defineProperty(_closeButton, \"position\", \"absolute\"), _defineProperty(_closeButton, \"top\", 0), _defineProperty(_closeButton, \"right\", 0), _closeButton),\n    closeButtonRoot: _defineProperty({}, theme.breakpoints.only(\"xs\"), {\n      position: \"absolute\"\n    }),\n    label: _defineProperty({}, theme.breakpoints.only(\"xs\"), {\n      textAlign: \"center\",\n      backgroundColor: \"#fff\",\n      width: \"1.6em\",\n      height: \"1.6em\"\n    }),\n    filterButton: {\n      position: \"absolute\",\n      bottom: \"13%\",\n      left: \"50%\",\n      transform: \"translate(-50%,-50%)\",\n      zIndex: 999\n    },\n    list: (_list = {}, _defineProperty(_list, theme.breakpoints.up(\"lg\"), {\n      maxHeight: \"83vh\"\n    }), _defineProperty(_list, theme.breakpoints.between(\"sm\", \"md\"), {\n      maxHeight: \"43vh\",\n      order: 1,\n      marginTop: 10\n    }), _defineProperty(_list, theme.breakpoints.only(\"xs\"), {\n      maxHeight: \"47vh\",\n      order: 1,\n      position: \"absolute\",\n      bottom: 5,\n      zIndex: 100\n    }), _defineProperty(_list, \"overflow\", \"auto\"), _list),\n    mapContainer: (_mapContainer = {}, _defineProperty(_mapContainer, theme.breakpoints.up(\"lg\"), {\n      minHeight: \"82vh\"\n    }), _defineProperty(_mapContainer, theme.breakpoints.between(\"sm\", \"md\"), {\n      minHeight: \"46vh\"\n    }), _defineProperty(_mapContainer, theme.breakpoints.only(\"xs\"), {\n      minHeight: \"100vh\"\n    }), _mapContainer),\n    dialogContent: _defineProperty({}, theme.breakpoints.only(\"xs\"), {\n      padding: 0\n    }),\n    dialogTitle: _defineProperty({\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    }, theme.breakpoints.only(\"xs\"), {\n      textAlign: \"center\",\n      position: \"absolute\",\n      zIndex: 9999,\n      top: -3,\n      left: 9\n    })\n  });\n}; // @ts-ignore\n\n\nvar Maps = function Maps(props) {\n  var classes = props.classes;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(TAB_LIST),\n      _useState4 = _slicedToArray(_useState3, 2),\n      index = _useState4[0],\n      setIndex = _useState4[1];\n\n  var _useState5 = useState(-1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hoverId = _useState6[0],\n      setHoverId = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      roomChunks = _useState8[0],\n      setRoomChunks = _useState8[1];\n\n  var _useState9 = useState({\n    lat: 0,\n    lng: 0\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      center = _useState10[0],\n      setCenter = _useState10[1];\n\n  var _useContext = useContext(GlobalContext),\n      location = _useContext.location,\n      width = _useContext.width;\n\n  var _useContext2 = useContext(RoomIndexContext),\n      state = _useContext2.state;\n\n  var _useContext3 = useContext(RoomMapContext),\n      mapState = _useContext3.state,\n      mapDispatch = _useContext3.dispatch;\n\n  var rooms = state.rooms;\n  var isMapOpen = mapState.isMapOpen,\n      coords = mapState.coords;\n  var xsMode = width === \"xs\";\n\n  var pageChange = function pageChange(current, pageSize) {\n    setPage(current);\n    var effect = {\n      containerId: \"room-map-list\",\n      smooth: \"easeInOutQuad\",\n      duration: 400\n    };\n    scroll.scrollToTop(effect);\n  };\n\n  var handleOpenFilter = function handleOpenFilter() {\n    setIndex(FILTER);\n  };\n\n  var mapClose = function mapClose() {\n    mapDispatch({\n      type: \"setMapOpen\",\n      status: false\n    });\n  };\n\n  var hoverAction = function hoverAction(key) {\n    setHoverId(key);\n  };\n\n  var focusRoomLocation = function focusRoomLocation(room) {\n    setCenter({\n      lat: parseFloat(room.latitude),\n      lng: parseFloat(room.longitude)\n    });\n  };\n\n  useEffect(function () {\n    if (rooms.length > 0 && isMapOpen) {\n      var lat = parseFloat(rooms[0].latitude);\n      var lng = parseFloat(rooms[0].longitude);\n      var valid = lat < 90 && lat > 90 && lng < 180 && lng > -180;\n      var _coords = {\n        lat: valid ? lat : 21.02,\n        lng: valid ? lng : 105.83\n      };\n      setCenter(_coords);\n    }\n  }, [rooms.length > 0, isMapOpen]);\n  useEffect(function () {\n    // console.log(state);\n    if (isMapOpen) {\n      // setRoomChunks([]);\n      getRooms(location, page, coords).then(function (res) {\n        var rooms = res.data;\n        setRoomChunks(rooms);\n        setHoverId(0);\n      });\n    }\n  }, [page, isMapOpen, coords, location]);\n  /**\n   * Room List switch between mobile and desktop mode\n   */\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    fullScreen: true,\n    open: isMapOpen,\n    onClose: mapClose,\n    TransitionComponent: TransitionCustom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    disableTypography: true,\n    className: classes.dialogTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"B\\u1EA3n \\u0111\\u1ED3\"), React.createElement(MapFilter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    className: classes.closeButton,\n    onClick: mapClose,\n    classes: {\n      root: classes.closeButtonRoot,\n      label: classes.label\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }))), React.createElement(DialogContent, {\n    className: classes.dialogContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.filterButton,\n    classes: {\n      root: classes.closeButtonRoot,\n      label: classes.label\n    },\n    onClick: handleOpenFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(FilterIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    fullScreen: true,\n    open: index === FILTER,\n    TransitionComponent: TransitionCustom,\n    scroll: \"paper\",\n    onClose: function onClose() {\n      return setIndex(TAB_LIST);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(FilterDrawerM, {\n    setIndex: setIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    lg: 5,\n    spacing: xsMode ? 0 : 16,\n    className: classes.list,\n    id: \"room-map-list\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(MapRooms, {\n    page: page,\n    pageChange: pageChange,\n    hoverId: hoverId,\n    hoverAction: hoverAction,\n    focusRoomLocation: focusRoomLocation,\n    rooms: roomChunks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 7,\n    className: classes.mapContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(MapDetail, {\n    hoverId: hoverId,\n    center: center,\n    hoverAction: hoverAction,\n    rooms: roomChunks,\n    setRooms: setRoomChunks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }))))));\n};\n\nexport default compose(withStyles(styles), memo)(Maps);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Maps/Maps.tsx"],"names":["createStyles","withStyles","React","Fragment","useContext","useEffect","useState","memo","compose","Dialog","DialogTitle","RoomIndexContext","getRooms","TransitionCustom","FILTER","TAB_LIST","Typography","CloseIcon","FilterIcon","IconButton","DialogContent","Grid","RoomMapContext","animateScroll","scroll","GlobalContext","Hidden","MapDetail","MapRooms","MapFilter","FilterDrawerM","styles","theme","closeButton","breakpoints","only","closeButtonRoot","position","label","textAlign","backgroundColor","width","height","filterButton","bottom","left","transform","zIndex","list","up","maxHeight","between","order","marginTop","mapContainer","minHeight","dialogContent","padding","dialogTitle","display","justifyContent","top","Maps","props","classes","page","setPage","index","setIndex","hoverId","setHoverId","roomChunks","setRoomChunks","lat","lng","center","setCenter","location","state","mapState","mapDispatch","dispatch","rooms","isMapOpen","coords","xsMode","pageChange","current","pageSize","effect","containerId","smooth","duration","scrollToTop","handleOpenFilter","mapClose","type","status","hoverAction","key","focusRoomLocation","room","parseFloat","latitude","longitude","length","valid","then","res","data","root"],"mappings":"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","sourcesContent":["import { ThemeCustom } from \"@/components/Theme/Theme\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {\n  ComponentType,\n  Fragment,\n  useContext,\n  useEffect,\n  useState,\n  memo\n} from \"react\";\nimport { compose } from \"recompose\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  IRoomIndexContext,\n  RoomIndexContext,\n  getRooms\n} from \"@/store/context/Room/RoomIndexContext\";\nimport { TransitionCustom, FILTER, TAB_LIST } from \"@/views/Rooms/BottomNav\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FilterIcon from \"@material-ui/icons/FilterListRounded\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Slide from \"@material-ui/core/Slide/Slide\";\nimport { Coords } from \"google-map-react\";\nimport {\n  RoomMapContext,\n  IRoomMapContext,\n} from \"@/store/context/Room/RoomMapContext\";\nimport \"rc-pagination/assets/index.css\";\nimport { RoomIndexRes } from \"@/types/Requests/Rooms/RoomResponses\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { ReactScrollLinkProps } from \"react-scroll/modules/components/Link\";\nimport { IGlobalContext, GlobalContext } from \"@/store/context/GlobalContext\";\n\nimport { Hidden } from \"@material-ui/core\";\nimport MapDetail from \"@/components/Maps/MapDetail\";\nimport MapRooms from \"@/components/Maps/MapRooms\";\nimport MapFilter from \"@/components/Maps/MapFilter\";\nimport FilterDrawerM from \"@/views/Rooms/Filter/FilterDrawerM\";\n\ninterface IProps {\n  classes?: any;\n}\n\nconst styles: any = (theme: ThemeCustom) =>\n  createStyles({\n    closeButton: {\n      [theme!.breakpoints!.only!(\"xs\")]: {},\n      position: \"absolute\",\n      top: 0,\n      right: 0\n    },\n    closeButtonRoot: {\n      [theme!.breakpoints!.only!(\"xs\")]: {\n        position: \"absolute\"\n      }\n    },\n    label: {\n      [theme!.breakpoints!.only!(\"xs\")]: {\n        textAlign: \"center\",\n        backgroundColor: \"#fff\",\n        width: \"1.6em\",\n        height: \"1.6em\"\n      }\n    },\n    filterButton: {\n      position: \"absolute\",\n      bottom: \"13%\",\n      left: \"50%\",\n      transform: \"translate(-50%,-50%)\",\n      zIndex: 999\n    },\n    list: {\n      [theme!.breakpoints!.up!(\"lg\")]: {\n        maxHeight: \"83vh\"\n      },\n      [theme!.breakpoints!.between!(\"sm\", \"md\")]: {\n        maxHeight: \"43vh\",\n        order: 1,\n        marginTop: 10\n      },\n      [theme!.breakpoints!.only!(\"xs\")]: {\n        maxHeight: \"47vh\",\n        order: 1,\n        position: \"absolute\",\n        bottom: 5,\n        zIndex: 100\n      },\n      overflow: \"auto\"\n    },\n    mapContainer: {\n      [theme!.breakpoints!.up!(\"lg\")]: {\n        minHeight: \"82vh\"\n      },\n      [theme!.breakpoints!.between!(\"sm\", \"md\")]: {\n        minHeight: \"46vh\"\n      },\n      [theme!.breakpoints!.only!(\"xs\")]: {\n        minHeight: \"100vh\"\n      }\n    },\n    dialogContent: {\n      [theme!.breakpoints!.only!(\"xs\")]: {\n        padding: 0\n      }\n    },\n    dialogTitle: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      [theme!.breakpoints!.only!(\"xs\")]: {\n        textAlign: \"center\",\n        position: \"absolute\",\n        zIndex: 9999,\n        top: -3,\n        left: 9\n      }\n    }\n  });\n\n// @ts-ignore\nconst Maps: ComponentType<IProps> = (props: IProps) => {\n  const { classes } = props;\n  const [page, setPage] = useState<number>(1);\n  const [index, setIndex] = useState<number>(TAB_LIST);\n  const [hoverId, setHoverId] = useState<number>(-1);\n  const [roomChunks, setRoomChunks] = useState<RoomIndexRes[]>([]);\n  const [center, setCenter] = useState<Coords>({\n    lat: 0,\n    lng: 0\n  });\n\n\n  const { location, width } = useContext<IGlobalContext>(GlobalContext);\n  const { state } = useContext<IRoomIndexContext>(RoomIndexContext);\n  const { state: mapState, dispatch: mapDispatch } = useContext<\n    IRoomMapContext\n  >(RoomMapContext);\n\n  const { rooms } = state;\n  const { isMapOpen, coords } = mapState;\n  const xsMode = width === \"xs\";\n\n  const pageChange = (current: number, pageSize: number) => {\n    setPage(current);\n\n    let effect: Partial<ReactScrollLinkProps> = {\n      containerId: \"room-map-list\",\n      smooth: \"easeInOutQuad\",\n      duration: 400\n    };\n\n    scroll.scrollToTop(effect);\n  };\n\n  const handleOpenFilter = () => {\n    setIndex(FILTER);\n  };\n\n  const mapClose = () => {\n    mapDispatch({\n      type: \"setMapOpen\",\n      status: false\n    });\n  };\n\n  const hoverAction = (key: number) => {\n    setHoverId(key);\n  };\n\n  const focusRoomLocation = (room: RoomIndexRes) => {\n    setCenter({\n      lat: parseFloat(room.latitude),\n      lng: parseFloat(room.longitude)\n    });\n  };\n\n  useEffect(() => {\n    if (rooms.length > 0 && isMapOpen) {\n      let lat = parseFloat(rooms[0].latitude);\n      let lng = parseFloat(rooms[0].longitude);\n      let valid = lat < 90 && lat > 90 && lng < 180 && lng > -180;\n\n      let coords: Coords = {\n        lat: valid ? lat : 21.02,\n        lng: valid ? lng : 105.83\n      };\n\n      setCenter(coords);\n    }\n  }, [rooms.length > 0, isMapOpen]);\n\n  useEffect(() => {\n    // console.log(state);\n    if (isMapOpen) {\n      // setRoomChunks([]);\n      getRooms(location, page, coords).then(res => {\n        const rooms = res.data;\n        setRoomChunks(rooms);\n        setHoverId(0);\n      });\n    }\n  }, [page, isMapOpen, coords, location]);\n\n\n\n\n  /**\n   * Room List switch between mobile and desktop mode\n   */\n\n  return (\n    <Fragment>\n      <Dialog\n        fullScreen\n        open={isMapOpen}\n        onClose={mapClose}\n        TransitionComponent={TransitionCustom}\n      >\n        <DialogTitle disableTypography className={classes.dialogTitle}>\n          <Hidden xsDown>\n            <Typography variant=\"h6\" inline={true}>\n              Bản đồ\n            </Typography>\n            <MapFilter />\n          </Hidden>\n\n          <IconButton\n            className={classes.closeButton}\n            onClick={mapClose}\n            classes={{\n              root: classes.closeButtonRoot,\n              label: classes.label\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent className={classes.dialogContent}>\n          <Grid container spacing={0}>\n            <Hidden mdUp>\n              <IconButton\n                className={classes.filterButton}\n                classes={{\n                  root: classes.closeButtonRoot,\n                  label: classes.label\n                }}\n                onClick={handleOpenFilter}\n              >\n                <FilterIcon />\n              </IconButton>\n              <Dialog\n                fullScreen\n                open={index === FILTER}\n                TransitionComponent={TransitionCustom}\n                scroll=\"paper\"\n                onClose={() => setIndex(TAB_LIST)}\n              >\n                <FilterDrawerM setIndex={setIndex} />\n              </Dialog>\n            </Hidden>\n            <Grid\n              container\n              item\n              xs={12}\n              lg={5}\n              spacing={xsMode ? 0 : 16}\n              className={classes.list}\n              id=\"room-map-list\"\n              justify=\"center\"\n            >\n              <MapRooms\n                page={page}\n                pageChange={pageChange}\n                hoverId={hoverId}\n                hoverAction={hoverAction}\n                focusRoomLocation={focusRoomLocation}\n                rooms={roomChunks}\n              />\n            </Grid>\n            <Grid item xs={12} lg={7} className={classes.mapContainer}>\n              <MapDetail\n                hoverId={hoverId}\n                center={center}\n                hoverAction={hoverAction}\n                rooms={roomChunks}\n                setRooms={setRoomChunks}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </Fragment>\n  );\n};\n\nexport default compose<IProps, any>(\n  withStyles(styles),\n  memo\n)(Maps);\n"]},"metadata":{},"sourceType":"module"}