{"ast":null,"code":"var _jsxFileName = \"/home/ducnhat/Code/x-files/src/layouts/Main/ListRoomNew.tsx\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, { Fragment, useContext, useEffect } from \"react\";\nimport { compose } from \"recompose\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport NextArrowSlider from \"@/views/DetailsPage/NextArrowSlider\";\nimport PrevArrowSlider from \"@/views/DetailsPage/PrevArrowSlider\";\nimport RoomHot from \"@/layouts/Main/RoomHot\";\nimport _ from \"lodash\";\nimport { RoomHomepageContext, getRoomNew } from \"@/store/context/Room/RoomHomepageContext\";\nimport SimpleLoader from \"@/components/Loading/SimpleLoader\";\n\nvar styles = function styles(theme) {\n  return createStyles({\n    listRoomNew: {\n      width: \"100%\",\n      display: \"block\"\n    },\n    titleRoom: {\n      color: \"rgb(72, 72, 72)\"\n    }\n  });\n}; // @ts-ignore\n\n\nvar ListRoomNew = function ListRoomNew(props) {\n  var classes = props.classes;\n\n  var _useContext = useContext(RoomHomepageContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var roomsNew = state.roomsNew;\n  console.log(\"roomsNew\", roomsNew);\n  var settingRoomHot = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    lazyLoad: \"ondemand\",\n    swipeToSlide: true,\n    nextArrow: React.createElement(NextArrowSlider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }),\n    touchThreshold: 100,\n    prevArrow: React.createElement(PrevArrowSlider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }),\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 4,\n        autoplay: true,\n        autoplaySpeed: 5000,\n        touchThreshold: 100\n      }\n    }, {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 3,\n        autoplay: true,\n        arrows: false,\n        autoplaySpeed: 5000,\n        touchThreshold: 100\n      }\n    }, {\n      breakpoint: 425,\n      settings: {\n        slidesToShow: 1,\n        autoplay: true,\n        autoplaySpeed: 5000,\n        touchThreshold: 100,\n        arrows: false,\n        centerMode: true,\n        centerPadding: \"25px\"\n      }\n    }]\n  };\n  useEffect(function () {\n    getRoomNew().then(function (data) {\n      var roomData = data.data;\n      dispatch({\n        type: \"setRoomNew\",\n        rooms: roomData\n      });\n    }).catch(function (err) {\n      console.error(err);\n    });\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: classes.titleRoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Ph\\xF2ng m\\u1EDBi\"), React.createElement(Grid, {\n    container: true,\n    className: classes.listRoomNew,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, roomsNew ? React.createElement(Slider, Object.assign({}, settingRoomHot, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), _.map(roomsNew, function (room, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(RoomHot, {\n      room: room,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  })) : React.createElement(SimpleLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })));\n};\n\nexport default compose(withStyles(styles))(ListRoomNew);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/layouts/Main/ListRoomNew.tsx"],"names":["createStyles","withStyles","React","Fragment","useContext","useEffect","compose","Slider","Grid","NextArrowSlider","PrevArrowSlider","RoomHot","_","RoomHomepageContext","getRoomNew","SimpleLoader","styles","theme","listRoomNew","width","display","titleRoom","color","ListRoomNew","props","classes","state","dispatch","roomsNew","console","log","settingRoomHot","dots","infinite","speed","slidesToShow","lazyLoad","swipeToSlide","nextArrow","touchThreshold","prevArrow","responsive","breakpoint","settings","autoplay","autoplaySpeed","arrows","centerMode","centerPadding","then","data","roomData","type","rooms","catch","err","error","map","room","index"],"mappings":"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","sourcesContent":["import { ThemeCustom } from \"@/components/Theme/Theme\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {\n  ComponentType,\n  Fragment,\n  useContext,\n  useEffect,\n} from \"react\";\nimport { compose } from \"recompose\";\n\nimport Slider, { Settings } from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport NextArrowSlider from \"@/views/DetailsPage/NextArrowSlider\";\nimport PrevArrowSlider from \"@/views/DetailsPage/PrevArrowSlider\";\nimport RoomHot from \"@/layouts/Main/RoomHot\";\n\nimport _ from \"lodash\";\nimport {\n  RoomHomepageContext,\n  IRoomHomepageContext,\n  getRoomNew\n} from \"@/store/context/Room/RoomHomepageContext\";\nimport SimpleLoader from \"@/components/Loading/SimpleLoader\";\ninterface IProps {\n  classes?: any;\n}\n\nconst styles: any = (theme: ThemeCustom) =>\n  createStyles({\n    listRoomNew: {\n      width: \"100%\",\n      display: \"block\"\n    },\n    titleRoom: {\n      color: \"rgb(72, 72, 72)\"\n    }\n  });\n// @ts-ignore\nconst ListRoomNew: ComponentType<IProps> = (props: IProps) => {\n  const { classes } = props;\n\n  const { state, dispatch } = useContext<IRoomHomepageContext>(\n    RoomHomepageContext\n  );\n\n  const { roomsNew } = state;\n  console.log(\"roomsNew\", roomsNew);\n\n  const settingRoomHot: Settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    lazyLoad: \"ondemand\",\n    swipeToSlide: true,\n    nextArrow: <NextArrowSlider />,\n    touchThreshold: 100,\n    prevArrow: <PrevArrowSlider />,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 4,\n          autoplay: true,\n          autoplaySpeed: 5000,\n          touchThreshold: 100\n        }\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          autoplay: true,\n          arrows: false,\n          autoplaySpeed: 5000,\n          touchThreshold: 100\n        }\n      },\n      {\n        breakpoint: 425,\n        settings: {\n          slidesToShow: 1,\n          autoplay: true,\n          autoplaySpeed: 5000,\n          touchThreshold: 100,\n          arrows: false,\n          centerMode: true,\n          centerPadding: \"25px\"\n        }\n      }\n    ]\n  };\n\n  useEffect(() => {\n    getRoomNew()\n      .then(data => {\n        const roomData = data.data;\n        dispatch({\n          type: \"setRoomNew\",\n          rooms: roomData\n        });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }, []);\n\n  return (\n    <Fragment>\n      <h2 className={classes.titleRoom}>Phòng mới</h2>\n      <Grid container className={classes.listRoomNew}>\n        {roomsNew ? (\n          <Slider {...settingRoomHot}>\n            {_.map(roomsNew, (room, index) => (\n              <div key={index}>\n                <RoomHot room={room} />\n              </div>\n            ))}\n          </Slider>\n        ) : (\n          <SimpleLoader />\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default compose<IProps, any>(withStyles(styles))(ListRoomNew);\n"]},"metadata":{},"sourceType":"module"}