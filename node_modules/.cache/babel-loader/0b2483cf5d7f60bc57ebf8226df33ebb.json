{"ast":null,"code":"var _jsxFileName = \"/home/ducnhat/Code/x-files/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { CookiesProvider } from 'react-cookie';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './store/reducers';\nimport ReactGA from 'react-ga';\nexport var windowExist = typeof window !== 'undefined';\nvar composeEnhancers = windowExist && process.env.NODE_ENV !== 'production' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose : compose; // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nvar persistConfig = {\n  key: 'root',\n  storage: storage,\n  blacklist: ['v_animate', 'booking', 'searchNavMobile']\n};\nvar persistedReducer = windowExist ? persistReducer(persistConfig, rootReducer) : rootReducer; // const persistedReducer: Reducer = rootReducer;\n\nexport var store = createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk)));\nexport var persistor = persistStore(store);\n\nvar initializeReactGA = function initializeReactGA() {\n  // console.log(window.location.pathname);\n  ReactGA.initialize('UA-134989606-1');\n  ReactGA.pageview(\"/\".concat(window.location.pathname, \" + \").concat(window.location.search));\n};\n\nvar ReduxWrapper = function ReduxWrapper() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CookiesProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n};\n\nvar AppRoot = function AppRoot() {\n  initializeReactGA();\n  return React.createElement(PersistGate, {\n    persistor: persistor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(ReduxWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nif (windowExist) {\n  ReactDOM.hydrate(React.createElement(AppRoot, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), document.getElementById('root'));\n  serviceWorker.register();\n} else {}","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/index.tsx"],"names":["React","ReactDOM","BrowserRouter","CookiesProvider","Provider","applyMiddleware","compose","createStore","storage","persistReducer","persistStore","PersistGate","thunk","App","serviceWorker","rootReducer","ReactGA","windowExist","window","composeEnhancers","process","env","NODE_ENV","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","persistConfig","key","blacklist","persistedReducer","store","persistor","initializeReactGA","initialize","pageview","location","pathname","search","ReduxWrapper","AppRoot","hydrate","document","getElementById","register"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsE,OAAtE;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAAuE,eAAvE;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,OAAO,IAAMC,WAAW,GAAG,OAAOC,MAAP,KAAkB,WAAtC;AAEP,IAAMC,gBAAgB,GAAIF,WAAW,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzC,GACpBJ,MAAD,CAAgBK,oCAAhB,IAAwDjB,OADnC,GAErBA,OAFJ,C,CAIA;AACA;AACA;;AACA,IAAMkB,aAA4B,GAAG;AACnCC,EAAAA,GAAG,EAAE,MAD8B;AAEnCjB,EAAAA,OAAO,EAAPA,OAFmC;AAGnCkB,EAAAA,SAAS,EAAE,CAAC,WAAD,EAAc,SAAd,EAAyB,iBAAzB;AAHwB,CAArC;AAMA,IAAMC,gBAAyB,GAAGV,WAAW,GAAGR,cAAc,CAACe,aAAD,EAAgBT,WAAhB,CAAjB,GAAgDA,WAA7F,C,CACA;;AAEA,OAAO,IAAMa,KAAY,GAAGrB,WAAW,CAACoB,gBAAD,EAAmBR,gBAAgB,CACxEd,eAAe,CAACO,KAAD,CADyD,CAAnC,CAAhC;AAIP,OAAO,IAAMiB,SAAoB,GAAGnB,YAAY,CAACkB,KAAD,CAAzC;;AAEP,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B;AACAd,EAAAA,OAAO,CAACe,UAAR,CAAmB,gBAAnB;AACAf,EAAAA,OAAO,CAACgB,QAAR,YACMd,MAAM,CAACe,QAAP,CAAgBC,QADtB,gBAEEhB,MAAM,CAACe,QAAP,CAAgBE,MAFlB;AAKD,CARD;;AAUA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SACnB,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADmB;AAAA,CAArB;;AAUA,IAAMS,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBP,EAAAA,iBAAiB;AACjB,SACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAED,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAPD;;AASA,IAAIZ,WAAJ,EAAiB;AACfhB,EAAAA,QAAQ,CAACqC,OAAT,CAAiB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,EAA8BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA9B;AACA1B,EAAAA,aAAa,CAAC2B,QAAd;AACD,CAHD,MAGO,CAEN","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { CookiesProvider } from 'react-cookie';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore, Reducer, Store } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, persistStore, PersistConfig, Persistor } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport thunk from 'redux-thunk';\n       \nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './store/reducers';\nimport ReactGA from 'react-ga';\n\nexport const windowExist = typeof window !== 'undefined';\n\nconst composeEnhancers = (windowExist && process.env.NODE_ENV !== 'production')\n  ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n  : compose;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nconst persistConfig: PersistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['v_animate', 'booking', 'searchNavMobile'],\n};\n\nconst persistedReducer: Reducer = windowExist ? persistReducer(persistConfig, rootReducer) : rootReducer;\n// const persistedReducer: Reducer = rootReducer;\n\nexport const store: Store = createStore(persistedReducer, composeEnhancers(\n  applyMiddleware(thunk),\n));\n\nexport const persistor: Persistor = persistStore(store);\n\nconst initializeReactGA = () => {\n  // console.log(window.location.pathname);\n  ReactGA.initialize('UA-134989606-1');\n  ReactGA.pageview(\n    `/${window.location.pathname} + ${\n    window.location.search\n    }`\n  );\n}\n\nconst ReduxWrapper = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n    </BrowserRouter>\n  </Provider>\n);\n\nconst AppRoot = () => {\n  initializeReactGA();\n  return (\n    <PersistGate persistor={persistor}>\n      <ReduxWrapper />\n    </PersistGate>\n  );\n};\n\nif (windowExist) {\n  ReactDOM.hydrate(<AppRoot />, document.getElementById('root'));\n  serviceWorker.register();\n} else {\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}