{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Forms/LoginForm.tsx\";\nimport * as loginType from \"@/store/actions/actionTypes\";\nimport * as animation from \"@/store/actions/animationTypes\";\nimport { axios } from \"@/utils/axiosInstance\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText/FormHelperText\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport Info from \"@material-ui/icons/Info\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport InvisibilityIcon from \"@material-ui/icons/VisibilityOff\";\nimport { withFormik } from \"formik\";\nimport React, { useState, Fragment } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport * as Yup from \"yup\";\nimport { withRouter } from \"react-router\";\nimport AlignS from \"@/styles/Position/align.module.scss\";\nimport Blue from \"@material-ui/core/colors/blue\";\nimport BG from \"@/assets/loginform.jpeg\";\nimport { Divider } from \"@material-ui/core\";\nimport Loadable from \"react-loadable\";\nvar ForgetPasswordForm = Loadable({\n  loader: function loader() {\n    return import(\"@/components/Forms/ForgetPasswordForm\");\n  },\n  loading: function loading() {\n    return null;\n  }\n});\n\nvar styles = function styles(theme) {\n  var _modal;\n\n  return createStyles({\n    paper: {\n      width: theme.spacing.unit * 50,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 2\n    },\n    modal: (_modal = {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: \"22vh\",\n      width: \"40%\",\n      overflow: \"hidden\",\n      borderRadius: 16,\n      \"&:focus\": {\n        outline: \"none\"\n      }\n    }, _defineProperty(_modal, theme.breakpoints.only(\"xs\"), {\n      width: \"90%\",\n      marginTop: \"10vh\"\n    }), _defineProperty(_modal, theme.breakpoints.only(\"sm\"), {\n      width: \"80%\",\n      marginTop: \"15vh\"\n    }), _defineProperty(_modal, theme.breakpoints.only(\"md\"), {\n      width: \"60%\",\n      marginTop: \"22vh\"\n    }), _modal),\n    spaceTop: {\n      marginTop: 10\n    },\n    spinner: {\n      width: \"25px !important\",\n      height: \"25px !important\"\n    },\n    errorBag: {\n      padding: 10,\n      marginTop: 12,\n      marginBottom: 12\n    },\n    color: {\n      color: Blue[600],\n      cursor: \"pointer\"\n    },\n    backgroundLogin: {\n      backgroundImage: \"url(\".concat(BG, \")\"),\n      width: \"100%\",\n      height: \"auto\",\n      minHeight: \"100%\",\n      backgroundSize: \"cover\",\n      position: \"relative\"\n    },\n    title: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%,-50%)\",\n      width: \"100%\",\n      textAlign: \"center\",\n      color: \"#fff\"\n    },\n    contentRight: {\n      padding: 16\n    },\n    colorBtn: {\n      backgroundColor: \"#248489\",\n      color: \"#ffffff\",\n      \"&:hover\": {\n        backgroundColor: \"#ffffff\",\n        color: \"#248489\"\n      }\n    }\n  });\n};\n\nexport var EmailInputAdornment = function EmailInputAdornment(props) {\n  return React.createElement(InputAdornment, {\n    position: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(EmailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })));\n};\nexport var PasswordInputAdornment = function PasswordInputAdornment(props) {\n  return React.createElement(InputAdornment, {\n    position: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.handle(!props.isShown);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, props.isShown ? React.createElement(VisibilityIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }) : React.createElement(InvisibilityIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })));\n};\n\nvar LoginForm = function LoginForm(props) {\n  var classes = props.classes,\n      values = props.values,\n      touched = props.touched,\n      errors = props.errors,\n      handleChange = props.handleChange,\n      handleBlur = props.handleBlur,\n      handleSubmit = props.handleSubmit,\n      isSubmitting = props.isSubmitting,\n      handleSignUpAnimation = props.handleSignUpAnimation,\n      handleForgetPassword = props.handleForgetPassword;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPassWord = _useState2[0],\n      setShowPassWord = _useState2[1];\n\n  var handleModalClose = function handleModalClose() {\n    props.handleLoginButton(false); // Save data if modal close for some reason\n\n    var object = {\n      email: values.account_email,\n      isRemember: values.isRemember\n    };\n    props.saveDraftLoginInfo(object);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    open: props.animation.isLoginFormOpen,\n    onClose: handleModalClose,\n    disableAutoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Zoom, {\n    in: props.animation.isLoginFormOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.modal,\n    elevation: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: classes.backgroundLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"\\u0110\\u0103ng nh\\u1EADp\"), errors.loginIncorrect && React.createElement(Paper, {\n    className: classes.errorBag,\n    elevation: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 16,\n    alignContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Info, {\n    color: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, errors.loginIncorrect)))), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    className: classes.contentRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.spaceTop,\n    error: !!(errors.account_email && touched.account_email),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    id: \"email\",\n    name: \"account_email\",\n    value: values.account_email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    endAdornment: React.createElement(EmailInputAdornment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, touched.account_email ? errors.account_email : \"\")), React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.spaceTop,\n    error: !!(errors.account_password && touched.account_password),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"M\\u1EADt kh\\u1EA9u\"), React.createElement(Input, {\n    type: showPassWord ? \"text\" : \"password\",\n    name: \"account_password\",\n    id: \"password\",\n    value: values.account_password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    endAdornment: React.createElement(PasswordInputAdornment, {\n      isShown: showPassWord,\n      handle: setShowPassWord,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, touched.account_password ? errors.account_password : \"\")), React.createElement(FormControl, {\n    className: classes.spaceTop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      id: \"rememberMe\",\n      name: \"isRemember\",\n      color: \"primary\",\n      checked: values.isRemember,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }),\n    label: \"Nh\\u1EDB m\\u1EADt kh\\u1EA9u\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.colorBtn,\n    type: \"submit\",\n    disabled: isSubmitting,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, isSubmitting ? React.createElement(CircularProgress, {\n    className: classes.spinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }) : \"Đăng nhập\"))), React.createElement(Typography, {\n    className: AlignS.textCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    className: classes.color,\n    onClick: function onClick() {\n      return handleForgetPassword(true);\n    },\n    onMouseOver: function onMouseOver() {\n      return ForgetPasswordForm.preload();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, \" \", \"Qu\\xEAn m\\u1EADt kh\\u1EA9u?\")), React.createElement(Divider, {\n    style: {\n      margin: \"16px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, \"Ch\\u01B0a c\\xF3 t\\xE0i kho\\u1EA3n?\", React.createElement(\"b\", {\n    className: classes.color,\n    onClick: function onClick() {\n      return handleSignUpAnimation(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, \" \", \"\\u0110\\u0103ng k\\xFD ngay\"))))))));\n};\n\nvar FormValidationSchema = Yup.object().shape({\n  account_email: Yup.string().required(\"Vui lòng nhập địa chỉ email\").email(\"Email không hợp lệ\"),\n  account_password: Yup.string().required(\"Vui lòng nhập mật khẩu\").min(5, \"Mật khẩu phải tối thiểu 5 ký tự\")\n});\nvar FormMilk = withFormik({\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      account_email: props.loginInfo.email,\n      account_password: \"\",\n      isRemember: props.loginInfo.isRemember\n    };\n  },\n  handleSubmit: function handleSubmit(values, bags) {\n    var _bags$props = bags.props,\n        cookies = _bags$props.cookies,\n        history = _bags$props.history;\n    var data = {\n      username: values.account_email,\n      password: values.account_password\n    };\n    axios.post(\"login\", data).then(function (res) {\n      var data = res.data;\n      var cookieTime = 1800;\n\n      if (values.isRemember) {\n        cookieTime = data.expires_in;\n        cookies.set(\"token_expires\", true, {\n          path: \"/\",\n          maxAge: cookieTime\n        });\n      }\n\n      cookies.set(\"_token\", data.access_token, {\n        path: \"/\",\n        maxAge: cookieTime\n      });\n      window.location.reload();\n      bags.setSubmitting(false);\n      bags.props.handleLoginButton(false);\n    }).catch(function (e) {\n      var res = e.response.data;\n      if (!res.data) history.push(\"/404\");\n      var errors = res.data.errors;\n      bags.setFieldError(\"loginIncorrect\", errors[0]);\n      bags.setSubmitting(false);\n    });\n  },\n  validationSchema: function validationSchema() {\n    return FormValidationSchema;\n  },\n  validateOnChange: false\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    animation: state.v_animate,\n    loginInfo: state.loginInfo\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleLoginButton: function handleLoginButton(status) {\n      return dispatch({\n        type: animation.LOGIN_BUTTON_CLICK,\n        status: status\n      });\n    },\n    handleSignUpAnimation: function handleSignUpAnimation(status) {\n      return dispatch({\n        type: animation.SIGN_UP_BUTTON_CLICK,\n        status: status\n      });\n    },\n    handleForgetPassword: function handleForgetPassword(status) {\n      return dispatch({\n        type: animation.FORGET_PASSWORD_BUTTON_CLICK,\n        status: status\n      });\n    },\n    saveDraftLoginInfo: function saveDraftLoginInfo(obj) {\n      return dispatch({\n        type: loginType.SAVE_DRAFTED_INFO,\n        value: obj\n      });\n    }\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withRouter, withCookies, FormMilk, withStyles(styles))(LoginForm);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Forms/LoginForm.tsx"],"names":["loginType","animation","axios","Button","Checkbox","CircularProgress","FormControl","FormControlLabel","FormHelperText","Grid","IconButton","Input","InputAdornment","InputLabel","Modal","Paper","withStyles","createStyles","Typography","Zoom","EmailIcon","Info","VisibilityIcon","InvisibilityIcon","withFormik","React","useState","Fragment","withCookies","connect","compose","Yup","withRouter","AlignS","Blue","BG","Divider","Loadable","ForgetPasswordForm","loader","loading","styles","theme","paper","width","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","modal","marginLeft","marginRight","marginTop","overflow","borderRadius","outline","breakpoints","only","spaceTop","spinner","height","errorBag","marginBottom","color","cursor","backgroundLogin","backgroundImage","minHeight","backgroundSize","position","title","top","left","transform","textAlign","contentRight","colorBtn","EmailInputAdornment","props","PasswordInputAdornment","handle","isShown","LoginForm","classes","values","touched","errors","handleChange","handleBlur","handleSubmit","isSubmitting","handleSignUpAnimation","handleForgetPassword","showPassWord","setShowPassWord","handleModalClose","handleLoginButton","object","email","account_email","isRemember","saveDraftLoginInfo","isLoginFormOpen","loginIncorrect","account_password","textCenter","preload","margin","FormValidationSchema","shape","string","required","min","FormMilk","mapPropsToValues","loginInfo","bags","cookies","history","data","username","password","post","then","res","cookieTime","expires_in","set","path","maxAge","access_token","window","location","reload","setSubmitting","catch","e","response","push","setFieldError","validationSchema","validateOnChange","mapStateToProps","state","v_animate","mapDispatchToProps","dispatch","status","type","LOGIN_BUTTON_CLICK","SIGN_UP_BUTTON_CLICK","FORGET_PASSWORD_BUTTON_CLICK","obj","SAVE_DRAFTED_INFO","value"],"mappings":"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","sourcesContent":["import { ThemeCustom } from \"@/components/Theme/Theme\";\nimport * as loginType from \"@/store/actions/actionTypes\";\nimport * as animation from \"@/store/actions/animationTypes\";\nimport { ReducersList } from \"@/store/reducers\";\nimport { LoginInfoAction, LoginInfoState } from \"@/store/reducers/loginInfo\";\nimport {\n  AnimationAction,\n  AnimationState\n} from \"@/store/reducers/Visual/global-animation\";\nimport { FormikProps } from \"@/types/Interface/Formik\";\nimport { LoginRequest } from \"@/types/Requests/Account/AccountRequests\";\nimport { LoginRes } from \"@/types/Requests/Account/AccountResponses\";\nimport { axios } from \"@/utils/axiosInstance\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText/FormHelperText\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport Info from \"@material-ui/icons/Info\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport InvisibilityIcon from \"@material-ui/icons/VisibilityOff\";\nimport { withFormik, FormikBag } from \"formik\";\nimport React, { useState, FunctionComponent, Fragment } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport { Dispatch } from \"redux\";\nimport Cookies from \"universal-cookie\";\nimport * as Yup from \"yup\";\nimport borderC from \"@/styles/Styling/border.module.scss\";\nimport { withRouter, RouteChildrenProps } from \"react-router\";\nimport AlignS from \"@/styles/Position/align.module.scss\";\nimport Blue from \"@material-ui/core/colors/blue\";\nimport BG from \"@/assets/loginform.jpeg\";\nimport { Divider } from \"@material-ui/core\";\nimport Loadable from \"react-loadable\";\n\ninterface IPasswordInput {\n  isShown: boolean;\n\n  handle(status: boolean): void;\n}\n\ninterface IFormikValues {\n  account_email: string;\n  account_password: string;\n  isRemember: boolean;\n  loginIncorrect?: boolean;\n}\n\ninterface DispatchLocal {\n  handleLoginButton(status: boolean): any;\n  saveDraftLoginInfo(value: any): any;\n  handleSignUpAnimation(status: boolean): void;\n  handleForgetPassword(status: boolean): void;\n}\n\ninterface IProps\n  extends FormikProps<IFormikValues>,\n    DispatchLocal,\n    RouteChildrenProps {\n  classes: any;\n  cookies: Cookies;\n  animation: AnimationState;\n  loginInfo: LoginInfoState;\n}\n\nconst ForgetPasswordForm = Loadable({\n  loader: (): Promise<any> => import(\"@/components/Forms/ForgetPasswordForm\"),\n  loading: () => null\n});\n\nconst styles: any = (theme: ThemeCustom) => {\n  return createStyles({\n    paper: {\n      width: theme!.spacing!.unit! * 50,\n      backgroundColor: theme!.palette!.background!.paper,\n      boxShadow: theme!.shadows![5],\n      padding: theme!.spacing!.unit! * 2\n    },\n    modal: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: \"22vh\",\n      width: \"40%\",\n      overflow: \"hidden\",\n      borderRadius: 16,\n      \"&:focus\": {\n        outline: \"none\"\n      },\n      [theme!.breakpoints!.only!(\"xs\")]: {\n        width: \"90%\",\n        marginTop: \"10vh\"\n      },\n      [theme!.breakpoints!.only!(\"sm\")]: {\n        width: \"80%\",\n        marginTop: \"15vh\"\n      },\n      [theme!.breakpoints!.only!(\"md\")]: {\n        width: \"60%\",\n        marginTop: \"22vh\"\n      }\n    },\n    spaceTop: {\n      marginTop: 10\n    },\n    spinner: {\n      width: \"25px !important\",\n      height: \"25px !important\"\n    },\n    errorBag: {\n      padding: 10,\n      marginTop: 12,\n      marginBottom: 12\n    },\n    color: {\n      color: Blue[600],\n      cursor: \"pointer\"\n    },\n    backgroundLogin: {\n      backgroundImage: `url(${BG})`,\n      width: \"100%\",\n      height: \"auto\",\n      minHeight: \"100%\",\n      backgroundSize: \"cover\",\n      position: \"relative\"\n    },\n    title: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%,-50%)\",\n      width: \"100%\",\n      textAlign: \"center\",\n      color: \"#fff\"\n    },\n    contentRight: {\n      padding: 16\n    },\n    colorBtn: {\n      backgroundColor: \"#248489\",\n      color: \"#ffffff\",\n      \"&:hover\": {\n        backgroundColor: \"#ffffff\",\n        color: \"#248489\"\n      },\n    }\n  });\n};\n\nexport const EmailInputAdornment: FunctionComponent<{}> = props => {\n  return (\n    <InputAdornment position=\"end\">\n      <IconButton disabled>\n        <EmailIcon />\n      </IconButton>\n    </InputAdornment>\n  );\n};\n\nexport const PasswordInputAdornment: FunctionComponent<\n  IPasswordInput\n> = props => {\n  return (\n    <InputAdornment position=\"end\">\n      <IconButton onClick={() => props.handle(!props.isShown)}>\n        {props.isShown ? <VisibilityIcon /> : <InvisibilityIcon />}\n      </IconButton>\n    </InputAdornment>\n  );\n};\n\nconst LoginForm: FunctionComponent<IProps> = props => {\n  const {\n    classes,\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    handleSignUpAnimation,\n    handleForgetPassword\n  } = props;\n\n  const [showPassWord, setShowPassWord] = useState<boolean>(false);\n\n  const handleModalClose = () => {\n    props.handleLoginButton(false);\n    // Save data if modal close for some reason\n    let object: LoginInfoState = {\n      email: values.account_email,\n      isRemember: values.isRemember\n    };\n    props.saveDraftLoginInfo(object);\n  };\n\n  return (\n    <Fragment>\n      <Modal\n        open={props.animation.isLoginFormOpen}\n        onClose={handleModalClose}\n        disableAutoFocus\n      >\n        <Zoom in={props.animation.isLoginFormOpen}>\n          <Paper className={classes.modal} elevation={10}>\n            <Grid container>\n              <Grid item xs={4} className={classes.backgroundLogin}>\n                <Typography variant=\"h5\" className={classes.title}>\n                  Đăng nhập\n                </Typography>\n                {errors.loginIncorrect && (\n                  <Paper className={classes.errorBag} elevation={1}>\n                    <Grid\n                      container\n                      spacing={16}\n                      alignContent=\"center\"\n                      alignItems=\"center\"\n                    >\n                      <Grid item xs={2}>\n                        <Info color=\"error\" />\n                      </Grid>\n                      <Grid item xs={10}>\n                        {errors.loginIncorrect}\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                )}\n              </Grid>\n              <Grid item xs={8} className={classes.contentRight}>\n                <form onSubmit={handleSubmit}>\n                  <FormControl\n                    fullWidth\n                    className={classes.spaceTop}\n                    error={!!(errors.account_email && touched.account_email)}\n                  >\n                    <InputLabel htmlFor=\"email\">Email</InputLabel>\n                    <Input\n                      id=\"email\"\n                      name=\"account_email\"\n                      value={values.account_email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      endAdornment={<EmailInputAdornment />}\n                    />\n                    <FormHelperText>\n                      {touched.account_email ? errors.account_email : \"\"}\n                    </FormHelperText>\n                  </FormControl>\n                  <FormControl\n                    fullWidth\n                    className={classes.spaceTop}\n                    error={\n                      !!(errors.account_password && touched.account_password)\n                    }\n                  >\n                    <InputLabel htmlFor=\"password\">Mật khẩu</InputLabel>\n                    <Input\n                      type={showPassWord ? \"text\" : \"password\"}\n                      name=\"account_password\"\n                      id=\"password\"\n                      value={values.account_password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      endAdornment={\n                        <PasswordInputAdornment\n                          isShown={showPassWord}\n                          handle={setShowPassWord}\n                        />\n                      }\n                    />\n                    <FormHelperText>\n                      {touched.account_password ? errors.account_password : \"\"}\n                    </FormHelperText>\n                  </FormControl>\n                  <FormControl className={classes.spaceTop}>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          id=\"rememberMe\"\n                          name=\"isRemember\"\n                          color=\"primary\"\n                          checked={values.isRemember}\n                          onChange={handleChange}\n                        />\n                      }\n                      label=\"Nhớ mật khẩu\"\n                    />\n                  </FormControl>\n                  <div>\n                    <Button\n                      variant=\"contained\"\n                      className={classes.colorBtn}\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                      fullWidth\n                    >\n                      {isSubmitting ? (\n                        <CircularProgress className={classes.spinner} />\n                      ) : (\n                        \"Đăng nhập\"\n                      )}\n                    </Button>\n                  </div>\n                </form>\n\n                <Typography className={AlignS.textCenter}>\n                  <b\n                    className={classes.color}\n                    onClick={() => handleForgetPassword(true)}\n                    onMouseOver={() => ForgetPasswordForm.preload()}\n                  >\n                    {\" \"}\n                    Quên mật khẩu?\n                  </b>\n                </Typography>\n\n                <Divider style={{ margin: \"16px 0\" }} />\n                <Typography>\n                  Chưa có tài khoản?\n                  <b\n                    className={classes.color}\n                    onClick={() => handleSignUpAnimation(true)}\n                  >\n                    {\" \"}\n                    Đăng ký ngay\n                  </b>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Zoom>\n      </Modal>\n      \n    </Fragment>\n  );\n};\n\nconst FormValidationSchema = Yup.object().shape({\n  account_email: Yup.string()\n    .required(\"Vui lòng nhập địa chỉ email\")\n    .email(\"Email không hợp lệ\"),\n  account_password: Yup.string()\n    .required(\"Vui lòng nhập mật khẩu\")\n    .min(5, \"Mật khẩu phải tối thiểu 5 ký tự\")\n});\n\nconst FormMilk = withFormik({\n  mapPropsToValues: (props): IFormikValues => {\n    return {\n      account_email: props.loginInfo.email,\n      account_password: \"\",\n      isRemember: props.loginInfo.isRemember\n    };\n  },\n\n  handleSubmit: (\n    values: IFormikValues,\n    bags: FormikBag<IProps, IFormikValues>\n  ) => {\n    const { cookies, history } = bags.props;\n\n    const data: LoginRequest = {\n      username: values.account_email,\n      password: values.account_password\n    };\n\n    axios\n      .post(\"login\", data)\n      .then(res => {\n        const data: LoginRes = res.data;\n        let cookieTime = 1800;\n        if (values.isRemember) {\n          cookieTime = data.expires_in;\n          cookies.set(\"token_expires\", true, {\n            path: \"/\",\n            maxAge: cookieTime\n          });\n        }\n        cookies.set(\"_token\", data.access_token, {\n          path: \"/\",\n          maxAge: cookieTime\n        });\n\n        window.location.reload();\n        bags.setSubmitting(false);\n        bags.props.handleLoginButton(false);\n      })\n      .catch(e => {\n        let res = e.response.data;\n\n        if (!res.data) history.push(\"/404\");\n\n        let errors = res.data.errors;\n        bags.setFieldError(\"loginIncorrect\", errors[0]);\n        bags.setSubmitting(false);\n      });\n  },\n\n  validationSchema: () => FormValidationSchema,\n  validateOnChange: false\n});\n\nconst mapStateToProps = (state: ReducersList) => {\n  return {\n    animation: state.v_animate,\n    loginInfo: state.loginInfo\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch<LoginInfoAction | AnimationAction>\n) => {\n  return {\n    handleLoginButton: (status: boolean) =>\n      dispatch({\n        type: animation.LOGIN_BUTTON_CLICK,\n        status: status\n      }),\n    handleSignUpAnimation: (status: boolean) =>\n      dispatch({\n        type: animation.SIGN_UP_BUTTON_CLICK,\n        status: status\n      }),\n    handleForgetPassword: (status: boolean) =>\n      dispatch({\n        type: animation.FORGET_PASSWORD_BUTTON_CLICK,\n        status: status\n      }),\n    saveDraftLoginInfo: (obj: any) =>\n      dispatch({\n        type: loginType.SAVE_DRAFTED_INFO,\n        value: obj\n      })\n  } as DispatchLocal;\n};\n\nexport default compose<IProps, any>(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withCookies,\n  FormMilk,\n  withStyles(styles)\n)(LoginForm);\n"]},"metadata":{},"sourceType":"module"}