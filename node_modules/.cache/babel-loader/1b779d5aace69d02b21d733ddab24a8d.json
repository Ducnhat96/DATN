{"ast":null,"code":"import * as actions from \"@/store/actions/types\";\nimport { updateObject } from \"../utility\";\nvar init = {\n  openSearch: false,\n  openDrawer: false\n};\n\nvar ChangeStatusBooking = function ChangeStatusBooking(state, action) {\n  var obj = {\n    openSearch: action.openSearch\n  };\n  return updateObject(state, obj);\n};\n\nvar changeStatusDrawer = function changeStatusDrawer(state, action) {\n  var obj = {\n    openDrawer: action.openDrawer\n  };\n  return updateObject(state, obj);\n};\n\nvar reducerSearchNav = function reducerSearchNav() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : init;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.TOGGLE_SEARCH_NAV_MOBILE:\n      return ChangeStatusBooking(state, action);\n\n    case actions.TOGGLE_DRAWER:\n      return changeStatusDrawer(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducerSearchNav;","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/store/reducers/searchNav.ts"],"names":["actions","updateObject","init","openSearch","openDrawer","ChangeStatusBooking","state","action","obj","changeStatusDrawer","reducerSearchNav","type","TOGGLE_SEARCH_NAV_MOBILE","TOGGLE_DRAWER"],"mappings":"AACA,OAAO,KAAKA,OAAZ,MAAyB,uBAAzB;AACA,SAASC,YAAT,QAA6B,YAA7B;AAaA,IAAMC,IAAoB,GAAG;AAC3BC,EAAAA,UAAU,EAAE,KADe;AAE3BC,EAAAA,UAAU,EAAE;AAFe,CAA7B;;AAKA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAC1BC,KAD0B,EAE1BC,MAF0B,EAGvB;AACH,MAAIC,GAAQ,GAAG;AAAEL,IAAAA,UAAU,EAAEI,MAAM,CAACJ;AAArB,GAAf;AACA,SAAOF,YAAY,CAAiBK,KAAjB,EAAwBE,GAAxB,CAAnB;AACD,CAND;;AAQA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACH,KAAD,EAAwBC,MAAxB,EAAoD;AAC7E,MAAMC,GAAQ,GAAG;AAAEJ,IAAAA,UAAU,EAAEG,MAAM,CAACH;AAArB,GAAjB;AACA,SAAOH,YAAY,CAAiBK,KAAjB,EAAwBE,GAAxB,CAAnB;AACD,CAHD;;AAKA,IAAME,gBAAyB,GAAG,SAA5BA,gBAA4B,GAGb;AAAA,MAFnBJ,KAEmB,uEAFKJ,IAEL;AAAA,MADnBK,MACmB;;AACnB,UAAQA,MAAM,CAACI,IAAf;AACE,SAAKX,OAAO,CAACY,wBAAb;AACE,aAAOP,mBAAmB,CAACC,KAAD,EAAQC,MAAR,CAA1B;;AACF,SAAKP,OAAO,CAACa,aAAb;AACE,aAAOJ,kBAAkB,CAACH,KAAD,EAAQC,MAAR,CAAzB;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD,CAZD;;AAcA,eAAeI,gBAAf","sourcesContent":["import { Reducer } from \"redux\";\nimport * as actions from \"@/store/actions/types\";\nimport { updateObject } from \"../utility\";\n\nexport type SearchNavState = {\n  readonly openSearch: boolean;\n  readonly openDrawer: boolean;\n};\n\nexport interface SearchNavAction {\n  type: string;\n  openSearch?: boolean;\n  openDrawer?: boolean;\n}\n\nconst init: SearchNavState = {\n  openSearch: false,\n  openDrawer: false\n};\n\nconst ChangeStatusBooking = (\n  state: SearchNavState,\n  action: SearchNavAction\n) => {\n  let obj: any = { openSearch: action.openSearch };\n  return updateObject<SearchNavState>(state, obj);\n};\n\nconst changeStatusDrawer = (state: SearchNavState, action: SearchNavAction) => {\n  const obj: any = { openDrawer: action.openDrawer };\n  return updateObject<SearchNavState>(state, obj);\n};\n\nconst reducerSearchNav: Reducer = (\n  state: SearchNavState = init,\n  action: SearchNavAction\n): SearchNavState => {\n  switch (action.type) {\n    case actions.TOGGLE_SEARCH_NAV_MOBILE:\n      return ChangeStatusBooking(state, action);\n    case actions.TOGGLE_DRAWER:\n      return changeStatusDrawer(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducerSearchNav;\n"]},"metadata":{},"sourceType":"module"}