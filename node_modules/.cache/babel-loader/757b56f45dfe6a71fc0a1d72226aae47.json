{"ast":null,"code":"import _defineProperty from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Utils/DatePickerRoomDetail.tsx\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport moment from 'moment';\nimport React, { useState, useEffect, Fragment, useContext, memo, useMemo } from 'react';\nimport { DayPickerRangeController } from 'react-dates';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport 'react-dates/initialize';\nimport '@/styles/date-picker.scss';\nimport '@/styles/Airbnb/date-picker-homepage.scss';\nimport _ from 'lodash';\nimport { RoomDetailsContext } from '@/store/context/Room/RoomDetailsContext';\nimport Button from '@material-ui/core/Button';\nimport { DEFAULT_DATE_FORMAT } from '@/utils/store/global';\nimport { GlobalContext } from '@/store/context/GlobalContext';\nexport var useDatePickerHook = function useDatePickerHook(props, state, focus) {\n  var filter = props.filter,\n      updateDate = props.updateDate,\n      minNights = props.minNights;\n\n  var _useState = useState(focus),\n      _useState2 = _slicedToArray(_useState, 2),\n      focusedInput = _useState2[0],\n      setFocusedInput = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      maxDate = _useState4[0],\n      setMaxDate = _useState4[1];\n\n  var _useState5 = useState(moment()),\n      _useState6 = _slicedToArray(_useState5, 1),\n      now = _useState6[0];\n\n  var startDate = filter.startDate,\n      endDate = filter.endDate;\n  var schedule = state.schedule;\n  var sd = startDate ? moment(startDate) : null;\n  var ed = endDate ? moment(endDate) : null;\n\n  var onDateChange = function onDateChange(startDate, endDate) {\n    if (focusedInput === 'startDate') {\n      endDate = null;\n    }\n\n    updateDate({\n      startDate: startDate,\n      endDate: endDate\n    });\n  };\n\n  var blockingDate = function blockingDate(day) {\n    var isBlocked = _.indexOf(schedule, day.format(DEFAULT_DATE_FORMAT)) !== -1;\n    var isBookingHour = minNights === 0;\n\n    if (focusedInput === 'endDate' && !!sd) {\n      var checkOnlyOneDay = day.format(DEFAULT_DATE_FORMAT) !== sd.format(DEFAULT_DATE_FORMAT);\n      var onlyOneDay = isBookingHour && checkOnlyOneDay;\n      var pastDayBlocked = day.diff(sd, 'days') < 0;\n      var chainBlocked = maxDate ? day.diff(moment(maxDate), 'days') > 0 : false;\n      return pastDayBlocked || isBlocked || chainBlocked || onlyOneDay;\n    }\n\n    return isBlocked;\n  };\n\n  var isOutSideRange = function isOutSideRange(day) {\n    return day.diff(now, 'days') < 0;\n  }; // useEffect(() => {\n  //   let checkFilter = !filter.startDate && !filter.endDate;\n  //   let oldDate     = moment(filter.startDate) < moment();\n  //\n  //   if (checkFilter || oldDate) {\n  //     updateDate({\n  //       startDate: moment(),\n  //       endDate: moment().add(7, 'days'),\n  //     });\n  //   }\n  // }, []);\n\n\n  useEffect(function () {\n    var date = _.find(schedule, function (block) {\n      return moment(block).diff(sd) > 0;\n    });\n\n    setMaxDate(date);\n  }, [filter]);\n  return {\n    onDateChange: onDateChange,\n    blockingDate: blockingDate,\n    sd: sd,\n    ed: ed,\n    focusedInput: focusedInput,\n    setFocusedInput: setFocusedInput,\n    maxDate: maxDate,\n    now: now,\n    isOutSideRange: isOutSideRange\n  };\n};\n\nvar styles = function styles(theme) {\n  var _rowMargin;\n\n  return createStyles({\n    rowMargin: (_rowMargin = {\n      margin: '10px 0',\n      padding: '12px 10px'\n    }, _defineProperty(_rowMargin, theme.breakpoints.down('xs'), {\n      padding: '10px 0px'\n    }), _defineProperty(_rowMargin, \"borderTop\", '1px solid #e0e0e0'), _rowMargin),\n    titleHighlight: {\n      fontSize: 20,\n      fontWeight: 600,\n      lineHeight: '1.375em',\n      color: '#484848',\n      display: 'inline-block'\n    },\n    btClear: {\n      float: 'right'\n    },\n    boxCalendar: {\n      textAlign: 'center',\n      justifyContent: 'center',\n      paddingTop: 20\n    },\n    paddingXS: _defineProperty({}, theme.breakpoints.down('xs'), {\n      width: '95%',\n      margin: '0 auto',\n      overflow: 'hidden'\n    })\n  });\n}; // @ts-ignore\n\n\nvar DatePickerRoomDetail = function DatePickerRoomDetail(props) {\n  var classes = props.classes,\n      minNights = props.minNights;\n\n  var _useContext = useContext(RoomDetailsContext),\n      state = _useContext.state;\n\n  var _useContext2 = useContext(GlobalContext),\n      width = _useContext2.width;\n\n  var isWide = useMemo(function () {\n    return width === 'xl' || width === 'lg' || width === 'md' || width === 'sm';\n  }, [width]);\n\n  var _useDatePickerHook = useDatePickerHook(props, state, 'startDate'),\n      setFocusedInput = _useDatePickerHook.setFocusedInput,\n      onDateChange = _useDatePickerHook.onDateChange,\n      sd = _useDatePickerHook.sd,\n      ed = _useDatePickerHook.ed,\n      focusedInput = _useDatePickerHook.focusedInput,\n      blockingDate = _useDatePickerHook.blockingDate,\n      isOutSideRange = _useDatePickerHook.isOutSideRange;\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.rowMargin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.paddingXS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.titleHighlight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"L\\u1ECBch tr\\u1ED1ng ph\\xF2ng\"), React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.btClear,\n    onClick: function onClick() {\n      return setFocusedInput('startDate');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Ch\\u1ECDn l\\u1EA1i\"), React.createElement(\"div\", {\n    className: classes.boxCalendar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(DayPickerRangeController, {\n    minimumNights: !!minNights ? minNights : 1,\n    startDate: sd,\n    endDate: ed,\n    onDatesChange: function onDatesChange(_ref) {// onDateChange(startDate, endDate);\n\n      var startDate = _ref.startDate,\n          endDate = _ref.endDate;\n    },\n    focusedInput: focusedInput,\n    onFocusChange: function onFocusChange(focusedInput) {\n      setFocusedInput(!!focusedInput ? focusedInput : 'startDate');\n    },\n    numberOfMonths: isWide ? 2 : 1 // verticalHeight = {400}\n    ,\n    noBorder: true,\n    enableOutsideDays: false,\n    isDayBlocked: blockingDate,\n    isOutsideRange: isOutSideRange,\n    hideKeyboardShortcutsPanel: true,\n    initialVisibleMonth: function initialVisibleMonth() {\n      return moment();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    filter: state.searchFilter\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateDate: function updateDate(date) {\n      return dispatch({\n        type: 'CHANGE_DATE',\n        date: date\n      });\n    }\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles), memo)(DatePickerRoomDetail);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Utils/DatePickerRoomDetail.tsx"],"names":["withStyles","Typography","createStyles","moment","React","useState","useEffect","Fragment","useContext","memo","useMemo","DayPickerRangeController","connect","compose","_","RoomDetailsContext","Button","DEFAULT_DATE_FORMAT","GlobalContext","useDatePickerHook","props","state","focus","filter","updateDate","minNights","focusedInput","setFocusedInput","undefined","maxDate","setMaxDate","now","startDate","endDate","schedule","sd","ed","onDateChange","blockingDate","day","isBlocked","indexOf","format","isBookingHour","checkOnlyOneDay","onlyOneDay","pastDayBlocked","diff","chainBlocked","isOutSideRange","date","find","block","styles","theme","rowMargin","margin","padding","breakpoints","down","titleHighlight","fontSize","fontWeight","lineHeight","color","display","btClear","float","boxCalendar","textAlign","justifyContent","paddingTop","paddingXS","width","overflow","DatePickerRoomDetail","classes","isWide","mapStateToProps","searchFilter","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import {ReducersType} from '@/store/reducers';\nimport {ThemeCustom} from '@/components/Theme/Theme';\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport {SearchFilterState, DateRange, SearchFilterAction} from '@/store/reducers/searchFilter';\nimport moment, {Moment} from 'moment';\nimport React, {useState, useEffect, ComponentType, Fragment, useContext, memo, useMemo, Dispatch} from 'react';\nimport {FocusedInputShape, DayPickerRangeController} from 'react-dates';\nimport {connect} from 'react-redux';\nimport {compose} from 'recompose';\nimport 'react-dates/initialize';\nimport '@/styles/date-picker.scss';\nimport '@/styles/Airbnb/date-picker-homepage.scss';\nimport _ from 'lodash';\nimport {RoomDetailsContext, IRoomDetailsContext, RoomDetailsState} from '@/store/context/Room/RoomDetailsContext';\nimport Button from '@material-ui/core/Button';\nimport {DEFAULT_DATE_FORMAT} from '@/utils/store/global';\nimport {IGlobalContext, GlobalContext} from '@/store/context/GlobalContext';\nimport {Grid} from \"@material-ui/core\";\n\ninterface IProps {\n  classes?: any\n  minNights?: number\n  month?: number\n}\n\ninterface LocalProps extends IProps {\n  filter: SearchFilterState\n\n  updateDate(date: DateRange): any\n}\n\nexport const useDatePickerHook = (props: LocalProps, state: RoomDetailsState, focus: FocusedInputShape | null) => {\n  const {filter, updateDate, minNights} = props;\n  const [focusedInput, setFocusedInput] = useState<FocusedInputShape | any>(focus);\n  const [maxDate, setMaxDate]           = useState<string | undefined>(undefined);\n  const [now]                           = useState<Moment>(moment());\n\n  const {startDate, endDate} = filter;\n\n  const {schedule} = state;\n\n  const sd = startDate ? moment(startDate) : null;\n  const ed = endDate ? moment(endDate) : null;\n\n  const onDateChange = (startDate: Moment | null, endDate: Moment | null) => {\n    if (focusedInput === 'startDate') {\n      endDate = null;\n    }\n    updateDate({startDate, endDate});\n  };\n\n  const blockingDate   = (day: Moment) => {\n    let isBlocked     = _.indexOf(schedule, day.format(DEFAULT_DATE_FORMAT)) !== -1;\n    let isBookingHour = (minNights === 0);\n\n    if (focusedInput === 'endDate' && !!sd) {\n      let checkOnlyOneDay = day.format(DEFAULT_DATE_FORMAT) !== sd.format(DEFAULT_DATE_FORMAT);\n\n      let onlyOneDay     = (isBookingHour && checkOnlyOneDay);\n      let pastDayBlocked = day.diff(sd, 'days') < 0;\n      let chainBlocked   = maxDate ? day.diff(moment(maxDate), 'days') > 0 : false;\n      return pastDayBlocked || isBlocked || chainBlocked || onlyOneDay;\n    }\n    return isBlocked;\n  };\n  const isOutSideRange = (day: Moment) => day.diff(now, 'days') < 0;\n\n  // useEffect(() => {\n  //   let checkFilter = !filter.startDate && !filter.endDate;\n  //   let oldDate     = moment(filter.startDate) < moment();\n  //\n  //   if (checkFilter || oldDate) {\n  //     updateDate({\n  //       startDate: moment(),\n  //       endDate: moment().add(7, 'days'),\n  //     });\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    let date = _.find(schedule, block => moment(block).diff(sd!) > 0);\n\n    setMaxDate(date);\n  }, [filter]);\n\n  return {\n    onDateChange, blockingDate, sd, ed,\n    focusedInput, setFocusedInput,\n    maxDate,\n    now, isOutSideRange,\n  };\n};\n\nconst styles: any = (theme: ThemeCustom) => createStyles({\n  rowMargin: {\n    margin: '10px 0',\n    padding: '12px 10px',\n    [theme!.breakpoints!.down!('xs')]: {\n      padding: '10px 0px',\n    },\n    borderTop: '1px solid #e0e0e0',\n  },\n  titleHighlight: {\n    fontSize: 20,\n    fontWeight: 600,\n    lineHeight: '1.375em',\n    color: '#484848',\n    display: 'inline-block',\n  },\n  btClear: {\n    float: 'right',\n  },\n  boxCalendar: {\n    textAlign: 'center',\n    justifyContent: 'center',\n    paddingTop: 20,\n  },\n  paddingXS: {\n    [theme!.breakpoints!.down!('xs')]: {\n      width: '95%',\n      margin: '0 auto',\n      overflow: 'hidden'\n    },\n  },\n});\n\n// @ts-ignore\nconst DatePickerRoomDetail: ComponentType<IProps> = (props: LocalProps) => {\n  const {classes, minNights} = props;\n  const {state}              = useContext<IRoomDetailsContext>(RoomDetailsContext);\n  const {width}              = useContext<IGlobalContext>(GlobalContext);\n\n  const isWide: boolean = useMemo(() => {\n    return width === 'xl' || width === 'lg' || width === 'md' || width === 'sm';\n  }, [width]);\n\n  const {\n          setFocusedInput, onDateChange, sd, ed, focusedInput, blockingDate, isOutSideRange,\n        } = useDatePickerHook(props, state, 'startDate');\n\n  return (\n    <Fragment>\n      <div className = {classes.rowMargin}>\n        <div className = {classes.paddingXS}>\n          <Typography className = {classes.titleHighlight}>\n            Lịch trống phòng\n          </Typography>\n          <Button variant = 'outlined' className = {classes.btClear}\n                  onClick = {() => setFocusedInput('startDate')}>Chọn lại</Button>\n          <div className = {classes.boxCalendar}>\n            <DayPickerRangeController\n              minimumNights = {!!minNights ? minNights : 1}\n              startDate = {sd}\n              endDate = {ed}\n              onDatesChange = {({startDate, endDate}) => {\n                // onDateChange(startDate, endDate);\n              }}\n              focusedInput = {focusedInput}\n              onFocusChange = {focusedInput => {\n                setFocusedInput(!!focusedInput ? focusedInput : 'startDate');\n              }}\n              numberOfMonths = {isWide ? 2 : 1}\n              // verticalHeight = {400}\n              noBorder\n              enableOutsideDays = {false}\n              isDayBlocked = {blockingDate}\n              isOutsideRange = {isOutSideRange}\n              hideKeyboardShortcutsPanel\n              initialVisibleMonth = {() => moment()}\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state: ReducersType) => {\n  return {\n    filter: state.searchFilter,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<SearchFilterAction>) => {\n  return {\n    updateDate: (date: DateRange) => dispatch({\n      type: 'CHANGE_DATE',\n      date: date,\n    }),\n  };\n};\n\nexport default compose<IProps, any>(\n  connect(mapStateToProps, mapDispatchToProps),\n  withStyles(styles),\n  memo,\n)(DatePickerRoomDetail);\n"]},"metadata":{},"sourceType":"module"}