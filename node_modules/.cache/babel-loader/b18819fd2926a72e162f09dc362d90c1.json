{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Forms/RegisterForm.tsx\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, { Fragment, useMemo, useState, useContext } from \"react\";\nimport { compose } from \"recompose\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport * as animation from \"@/store/actions/animationTypes\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Input from \"@material-ui/core/Input/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText/FormHelperText\";\nimport { EmailInputAdornment, PasswordInputAdornment } from \"@/components/Forms/LoginForm\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport UserIcon from \"@material-ui/icons/Person\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport { axios } from \"@/utils/axiosInstance\";\nimport Cookies from \"universal-cookie\";\nimport Blue from \"@material-ui/core/colors/blue\";\nimport AlignS from \"@/styles/Position/align.module.scss\";\nimport { GlobalContext } from \"@/store/context/GlobalContext\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent/SnackbarContent\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport Green from \"@material-ui/core/colors/green\";\nimport { Link } from \"react-router-dom\";\nimport { Modal, Divider } from \"@material-ui/core\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport BG from \"@/assets/loginform.jpeg\";\nimport Grid from \"@material-ui/core/Grid\";\nvar FormValidationSchema = Yup.object().shape({\n  // name: Yup.string()\n  //   .required('Vui lòng nhập tên')\n  //   .min(6, 'Tối thiểu 6 ký tự')\n  //   .max(50, 'Tối da 50 ký tự'),\n  // phone: Yup.string()\n  //   .required('Vui lòng nhập số điện thoại')\n  //   .min(10, 'Số điện thoại không hợp lệ'),\n  email: Yup.string().required(\"Vui lòng nhập email\").email(\"Địa chỉ email không hợp lệ\"),\n  password: Yup.string().required(\"Vui lòng nhập mật khẩu\").min(6, \"Mật khẩu tối thiểu 6 ký tự\").max(30, \"Mật khẩu không được quá 30 ký tự\"),\n  passwordConfirm: Yup.string().required(\"Vui lòng xác nhận lại mật khẩu\").oneOf([Yup.ref(\"password\")], \"Mật khẩu không trùng khớp\"),\n  agreeTerms: Yup.boolean().test(\"term-agree\", \"Vui lòng xác nhận điều khoản\", function (value) {\n    return value === true;\n  })\n});\nexport var PhoneInputAdornment = function PhoneInputAdornment(props) {\n  return React.createElement(InputAdornment, {\n    position: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(PhoneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })));\n};\nexport var UserInputAdornment = function UserInputAdornment(props) {\n  return React.createElement(InputAdornment, {\n    position: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(UserIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })));\n};\n\nvar styles = function styles(theme) {\n  var _modal;\n\n  return createStyles({\n    paper: {\n      width: theme.spacing.unit * 50,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 2\n    },\n    spaceTop: {\n      marginTop: 10\n    },\n    spinner: {\n      width: \"25px !important\",\n      height: \"25px !important\"\n    },\n    errorBag: {\n      padding: 10,\n      marginTop: 12,\n      marginBottom: 12\n    },\n    color: {\n      color: Blue[600],\n      cursor: \"pointer\"\n    },\n    closeButton: {\n      position: \"absolute\",\n      top: 0,\n      right: 0\n    },\n    message: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    successSnack: {\n      backgroundColor: Green[600]\n    },\n    modal: (_modal = {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: \"20vh\",\n      width: \"50%\",\n      overflow: \"hidden\",\n      borderRadius: 16,\n      \"&:focus\": {\n        outline: \"none\"\n      }\n    }, _defineProperty(_modal, theme.breakpoints.only(\"xs\"), {\n      width: \"90%\",\n      marginTop: \"10vh\"\n    }), _defineProperty(_modal, theme.breakpoints.only(\"sm\"), {\n      width: \"80%\",\n      marginTop: \"15vh\"\n    }), _defineProperty(_modal, theme.breakpoints.only(\"md\"), {\n      width: \"70%\",\n      marginTop: \"20vh\"\n    }), _modal),\n    backgroundLogin: {\n      backgroundImage: \"url(\".concat(BG, \")\"),\n      width: \"100%\",\n      height: \"auto\",\n      minHeight: \"100%\",\n      backgroundSize: \"cover\",\n      position: \"relative\"\n    },\n    title: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%,-50%)\",\n      width: \"65%\",\n      textAlign: \"center\",\n      color: \"#fff\"\n    },\n    contentRight: {\n      padding: 16\n    }\n  });\n}; // @ts-ignore\n\n\nvar RegisterForm = function RegisterForm(props) {\n  var classes = props.classes,\n      animation = props.animation,\n      handleSignUpAnimation = props.handleSignUpAnimation,\n      handleLoginButton = props.handleLoginButton;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPassWord = _useState2[0],\n      setShowPassWord = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openSnack = _useState4[0],\n      setOpenSnack = _useState4[1];\n\n  var _useContext = useContext(GlobalContext),\n      width = _useContext.width;\n\n  var formikInit = useMemo(function () {\n    return {\n      name: \"\",\n      phone: \"\",\n      birthday: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      agreeTerms: false\n    };\n  }, []);\n\n  var handleModalClose = function handleModalClose() {\n    handleSignUpAnimation(false);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    open: animation.isSignUpFormOpen,\n    onClose: handleModalClose,\n    disableAutoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(Zoom, {\n    in: animation.isSignUpFormOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.modal,\n    elevation: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: classes.backgroundLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"\\u0110\\u0103ng k\\xFD t\\xE0i kho\\u1EA3n\")), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    className: classes.contentRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: formikInit,\n    validationSchema: FormValidationSchema,\n    validateOnChange: false,\n    onSubmit: function onSubmit(values, action) {\n      var request = {\n        email: values.email,\n        name: values.name,\n        phone: values.phone,\n        password: values.password,\n        password_confirmation: values.passwordConfirm,\n        type: 0\n      };\n      axios.post(\"register\", request).then(function (res) {\n        var data = res.data;\n        var cookies = new Cookies();\n        setOpenSnack(true);\n        cookies.set(\"_token\", data.access_token, {\n          path: \"/\",\n          maxAge: data.expires_in\n        });\n        location.reload();\n        action.setSubmitting(false);\n      }).catch(function (err) {\n        var errors = err.response.data.data.errors;\n        if (errors.email) action.setFieldError(\"email\", errors.email[0]);\n        action.setSubmitting(false);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, function (_ref) {\n    var values = _ref.values,\n        errors = _ref.errors,\n        touched = _ref.touched,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        isSubmitting = _ref.isSubmitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      fullWidth: true,\n      className: classes.spaceTop,\n      error: !!(errors.email && touched.email),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      id: \"email\",\n      name: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      endAdornment: React.createElement(EmailInputAdornment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, touched.email ? errors.email : \"\")), React.createElement(FormControl, {\n      fullWidth: true,\n      className: classes.spaceTop,\n      error: !!(errors.password && touched.password),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"M\\u1EADt kh\\u1EA9u\"), React.createElement(Input, {\n      type: showPassWord ? \"text\" : \"password\",\n      name: \"password\",\n      id: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      endAdornment: React.createElement(PasswordInputAdornment, {\n        isShown: showPassWord,\n        handle: setShowPassWord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, touched.password ? errors.password : \"\")), React.createElement(FormControl, {\n      fullWidth: true,\n      className: classes.spaceTop,\n      error: !!(errors.passwordConfirm && touched.passwordConfirm),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"passwordConfirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"passwordConfirm\",\n      id: \"passwordConfirm\",\n      value: values.passwordConfirm,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, touched.passwordConfirm ? errors.passwordConfirm : \"\")), React.createElement(FormControl, {\n      className: classes.spaceTop,\n      error: !!(errors.agreeTerms && touched.agreeTerms),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        id: \"agree-term\",\n        name: \"agreeTerms\",\n        color: \"primary\",\n        checked: values.agreeTerms,\n        onChange: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }),\n      label: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, \"T\\xF4i \\u0111\\u1ED3ng \\xFD v\\u1EDBi \\xA0\"), React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"#1e88e5\"\n        },\n        to: \"/terms-and-conditions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"\\u0111i\\u1EC1u kho\\u1EA3n s\\u1EED d\\u1EE5ng\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"\\xA0 c\\u1EE7a Westay\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, touched.agreeTerms ? errors.agreeTerms : \"\")), React.createElement(Button, {\n      className: classes.spaceTop,\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      style: {\n        color: \"#fff\"\n      },\n      disabled: isSubmitting,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, isSubmitting ? React.createElement(CircularProgress, {\n      className: classes.spinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }) : \"Đăng ký\"));\n  }), React.createElement(Divider, {\n    style: {\n      margin: \"16px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: AlignS.textCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463\n    },\n    __self: this\n  }, \"\\u0110\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n?\", React.createElement(\"b\", {\n    className: classes.color,\n    onClick: function onClick() {\n      return handleLoginButton(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, \" \", \"\\u0110\\u0103ng nh\\u1EADp\"))))))), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    open: openSnack,\n    onClose: function onClose() {\n      return setOpenSnack(false);\n    },\n    autoHideDuration: 6000,\n    ContentProps: {\n      \"aria-describedby\": \"message-register\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    className: classes.successSnack,\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(CheckCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }), \"\\xA0 \\u0110\\u0103ng k\\xFD th\\xE0nh c\\xF4ng\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490\n    },\n    __self: this\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    animation: state.v_animate\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleSignUpAnimation: function handleSignUpAnimation(status) {\n      return dispatch({\n        type: animation.SIGN_UP_BUTTON_CLICK,\n        status: status\n      });\n    },\n    handleLoginButton: function handleLoginButton(status) {\n      return dispatch({\n        type: animation.LOGIN_BUTTON_CLICK,\n        status: status\n      });\n    }\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles))(RegisterForm);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Forms/RegisterForm.tsx"],"names":["createStyles","withStyles","React","Fragment","useMemo","useState","useContext","compose","Formik","Yup","animation","connect","Typography","FormControl","InputLabel","Input","FormHelperText","EmailInputAdornment","PasswordInputAdornment","CircularProgress","Button","IconButton","InputAdornment","PhoneIcon","UserIcon","FormControlLabel","Checkbox","axios","Cookies","Blue","AlignS","GlobalContext","Snackbar","SnackbarContent","CheckCircleIcon","Green","Link","Modal","Divider","Zoom","Paper","BG","Grid","FormValidationSchema","object","shape","email","string","required","password","min","max","passwordConfirm","oneOf","ref","agreeTerms","boolean","test","value","PhoneInputAdornment","props","UserInputAdornment","styles","theme","paper","width","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","spaceTop","marginTop","spinner","height","errorBag","marginBottom","color","cursor","closeButton","position","top","right","message","display","alignItems","successSnack","modal","marginLeft","marginRight","overflow","borderRadius","outline","breakpoints","only","backgroundLogin","backgroundImage","minHeight","backgroundSize","title","left","transform","textAlign","contentRight","RegisterForm","classes","handleSignUpAnimation","handleLoginButton","showPassWord","setShowPassWord","openSnack","setOpenSnack","formikInit","name","phone","birthday","handleModalClose","isSignUpFormOpen","values","action","request","password_confirmation","type","post","then","res","data","cookies","set","access_token","path","maxAge","expires_in","location","reload","setSubmitting","catch","err","errors","response","setFieldError","touched","handleChange","handleBlur","handleSubmit","isSubmitting","textDecoration","margin","textCenter","vertical","horizontal","mapStateToProps","state","v_animate","mapDispatchToProps","dispatch","status","SIGN_UP_BUTTON_CLICK","LOGIN_BUTTON_CLICK"],"mappings":"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","sourcesContent":["import { ThemeCustom } from \"@/components/Theme/Theme\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, {\n  ComponentType,\n  Fragment,\n  useMemo,\n  useState,\n  FunctionComponent,\n  useContext\n} from \"react\";\nimport { compose } from \"recompose\";\nimport { Formik, FormikActions } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormikProps } from \"@/types/Interface/Formik\";\nimport { Dispatch } from \"redux\";\nimport {\n  AnimationAction,\n  AnimationState\n} from \"@/store/reducers/Visual/global-animation\";\nimport * as animation from \"@/store/actions/animationTypes\";\nimport { ReducersList } from \"@/store/reducers\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Input from \"@material-ui/core/Input/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText/FormHelperText\";\nimport borderC from \"@/styles/Styling/border.module.scss\";\nimport {\n  EmailInputAdornment,\n  PasswordInputAdornment\n} from \"@/components/Forms/LoginForm\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport { TransitionZoom } from \"@/views/Rooms/BottomNav\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport UserIcon from \"@material-ui/icons/Person\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport { RegisterReq } from \"@/types/Requests/Account/AccountRequests\";\nimport { axios } from \"@/utils/axiosInstance\";\nimport {\n  ErrorValidate,\n  AxiosErrorCustom\n} from \"@/types/Requests/ResponseTemplate\";\nimport { LoginRes } from \"@/types/Requests/Account/AccountResponses\";\nimport { AxiosResponse } from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport Blue from \"@material-ui/core/colors/blue\";\nimport AlignS from \"@/styles/Position/align.module.scss\";\nimport { IGlobalContext, GlobalContext } from \"@/store/context/GlobalContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent/SnackbarContent\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport Green from \"@material-ui/core/colors/green\";\nimport { Link } from \"react-router-dom\";\nimport { Modal, Divider } from \"@material-ui/core\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport BG from \"@/assets/loginform.jpeg\";\nimport Grid from \"@material-ui/core/Grid\";\n\ninterface IProps {\n  classes?: any;\n}\n\ninterface RegisterLocalProps extends IProps {\n  handleSignUpAnimation(status: boolean): void;\n  handleLoginButton(status: boolean): void;\n  animation: AnimationState;\n}\n\ninterface FormikRegisterValues {\n  name: string;\n  phone: string;\n  birthday: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n  agreeTerms: boolean;\n}\n\nconst FormValidationSchema = Yup.object().shape({\n  // name: Yup.string()\n  //   .required('Vui lòng nhập tên')\n  //   .min(6, 'Tối thiểu 6 ký tự')\n  //   .max(50, 'Tối da 50 ký tự'),\n  // phone: Yup.string()\n  //   .required('Vui lòng nhập số điện thoại')\n  //   .min(10, 'Số điện thoại không hợp lệ'),\n  email: Yup.string()\n    .required(\"Vui lòng nhập email\")\n    .email(\"Địa chỉ email không hợp lệ\"),\n  password: Yup.string()\n    .required(\"Vui lòng nhập mật khẩu\")\n    .min(6, \"Mật khẩu tối thiểu 6 ký tự\")\n    .max(30, \"Mật khẩu không được quá 30 ký tự\"),\n  passwordConfirm: Yup.string()\n    .required(\"Vui lòng xác nhận lại mật khẩu\")\n    .oneOf([Yup.ref(\"password\")], \"Mật khẩu không trùng khớp\"),\n  agreeTerms: Yup.boolean().test(\n    \"term-agree\",\n    \"Vui lòng xác nhận điều khoản\",\n    value => value === true\n  )\n});\n\nexport const PhoneInputAdornment: FunctionComponent<{}> = props => {\n  return (\n    <InputAdornment position=\"end\">\n      <IconButton disabled>\n        <PhoneIcon />\n      </IconButton>\n    </InputAdornment>\n  );\n};\n\nexport const UserInputAdornment: FunctionComponent<{}> = props => {\n  return (\n    <InputAdornment position=\"end\">\n      <IconButton disabled>\n        <UserIcon />\n      </IconButton>\n    </InputAdornment>\n  );\n};\n\nconst styles: any = (theme: ThemeCustom) =>\n  createStyles({\n    paper: {\n      width: theme!.spacing!.unit! * 50,\n      backgroundColor: theme!.palette!.background!.paper,\n      boxShadow: theme!.shadows![5],\n      padding: theme!.spacing!.unit! * 2\n    },\n    spaceTop: {\n      marginTop: 10\n    },\n    spinner: {\n      width: \"25px !important\",\n      height: \"25px !important\"\n    },\n    errorBag: {\n      padding: 10,\n      marginTop: 12,\n      marginBottom: 12\n    },\n    color: {\n      color: Blue[600],\n      cursor: \"pointer\"\n    },\n    closeButton: {\n      position: \"absolute\",\n      top: 0,\n      right: 0\n    },\n    message: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    successSnack: {\n      backgroundColor: Green[600]\n    },\n    modal: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: \"20vh\",\n      width: \"50%\",\n      overflow: \"hidden\",\n      borderRadius: 16,\n      \"&:focus\": {\n        outline: \"none\"\n      },\n      [theme!.breakpoints!.only!(\"xs\")]: {\n        width: \"90%\",\n        marginTop: \"10vh\"\n      },\n      [theme!.breakpoints!.only!(\"sm\")]: {\n        width: \"80%\",\n        marginTop: \"15vh\"\n      },\n      [theme!.breakpoints!.only!(\"md\")]: {\n        width: \"70%\",\n        marginTop: \"20vh\"\n      }\n    },\n    backgroundLogin: {\n      backgroundImage: `url(${BG})`,\n      width: \"100%\",\n      height: \"auto\",\n      minHeight: \"100%\",\n      backgroundSize: \"cover\",\n      position: \"relative\"\n    },\n    title: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%,-50%)\",\n      width: \"65%\",\n      textAlign: \"center\",\n      color: \"#fff\"\n    },\n    contentRight: {\n      padding: 16\n    }\n  });\n\n// @ts-ignore\nconst RegisterForm: ComponentType<IProps> = (props: RegisterLocalProps) => {\n  const {\n    classes,\n    animation,\n    handleSignUpAnimation,\n    handleLoginButton\n  } = props;\n\n  const [showPassWord, setShowPassWord] = useState<boolean>(false);\n  const [openSnack, setOpenSnack] = useState<boolean>(false);\n\n  const { width } = useContext<IGlobalContext>(GlobalContext);\n\n  const formikInit: FormikRegisterValues = useMemo(() => {\n    return {\n      name: \"\",\n      phone: \"\",\n      birthday: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      agreeTerms: false\n    };\n  }, []);\n\n  const handleModalClose = () => {\n    handleSignUpAnimation(false);\n  };\n\n  return (\n    <Fragment>\n      <Modal\n        open={animation.isSignUpFormOpen}\n        onClose={handleModalClose}\n        disableAutoFocus\n      >\n        <Zoom in={animation.isSignUpFormOpen}>\n          <Paper className={classes.modal} elevation={10}>\n            <Grid container>\n              <Grid item xs={4} className={classes.backgroundLogin}>\n                <Typography variant=\"h5\" className={classes.title}>\n                  Đăng ký tài khoản\n                </Typography>\n              </Grid>\n              <Grid item xs={8} className={classes.contentRight}>\n                <Formik\n                  initialValues={formikInit}\n                  validationSchema={FormValidationSchema}\n                  validateOnChange={false}\n                  onSubmit={(\n                    values: FormikRegisterValues,\n                    action: FormikActions<FormikRegisterValues>\n                  ) => {\n                    const request: RegisterReq = {\n                      email: values.email,\n                      name: values.name,\n                      phone: values.phone,\n                      password: values.password,\n                      password_confirmation: values.passwordConfirm,\n                      type: 0\n                    };\n\n                    axios\n                      .post(\"register\", request)\n                      .then((res: AxiosResponse<LoginRes>) => {\n                        const data = res.data;\n                        const cookies = new Cookies();\n\n                        setOpenSnack(true);\n                        cookies.set(\"_token\", data.access_token, {\n                          path: \"/\",\n                          maxAge: data.expires_in\n                        });\n                        location.reload();\n\n                        action.setSubmitting(false);\n                      })\n                      .catch((err: AxiosErrorCustom<ErrorValidate>) => {\n                        const errors = err.response!.data.data.errors;\n\n                        if (errors.email)\n                          action.setFieldError(\"email\", errors.email[0]);\n                        action.setSubmitting(false);\n                      });\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting\n                  }: FormikProps<FormikRegisterValues>) => {\n                    return (\n                      <form onSubmit={handleSubmit}>\n                        {/*<FormControl fullWidth className = {classes.spaceTop}*/}\n                        {/*error = {!!(errors.name && touched.name)}>*/}\n                        {/*<InputLabel htmlFor = 'name'>Tên</InputLabel>*/}\n                        {/*<Input*/}\n                        {/*id = 'name'*/}\n                        {/*name = 'name'*/}\n                        {/*value = {values.name}*/}\n                        {/*onChange = {handleChange}*/}\n                        {/*onBlur = {handleBlur}*/}\n                        {/*endAdornment = {<UserInputAdornment />}*/}\n                        {/*/>*/}\n                        {/*<FormHelperText>{touched.name ? errors.name : ''}</FormHelperText>*/}\n                        {/*</FormControl>*/}\n                        {/*<FormControl fullWidth className = {classes.spaceTop}*/}\n                        {/*error = {!!(errors.phone && touched.phone)}>*/}\n                        {/*<InputLabel htmlFor = 'phone'>Số điện thoại</InputLabel>*/}\n                        {/*<Input*/}\n                        {/*id = 'phone'*/}\n                        {/*name = 'phone'*/}\n                        {/*value = {values.phone}*/}\n                        {/*onChange = {handleChange}*/}\n                        {/*onBlur = {handleBlur}*/}\n                        {/*endAdornment = {<PhoneInputAdornment />}*/}\n                        {/*/>*/}\n                        {/*<FormHelperText>{touched.phone ? errors.phone : ''}</FormHelperText>*/}\n                        {/*</FormControl>*/}\n                        <FormControl\n                          fullWidth\n                          className={classes.spaceTop}\n                          error={!!(errors.email && touched.email)}\n                        >\n                          <InputLabel htmlFor=\"email\">Email</InputLabel>\n                          <Input\n                            id=\"email\"\n                            name=\"email\"\n                            value={values.email}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            endAdornment={<EmailInputAdornment />}\n                          />\n                          <FormHelperText>\n                            {touched.email ? errors.email : \"\"}\n                          </FormHelperText>\n                        </FormControl>\n                        <FormControl\n                          fullWidth\n                          className={classes.spaceTop}\n                          error={!!(errors.password && touched.password)}\n                        >\n                          <InputLabel htmlFor=\"password\">Mật khẩu</InputLabel>\n                          <Input\n                            type={showPassWord ? \"text\" : \"password\"}\n                            name=\"password\"\n                            id=\"password\"\n                            value={values.password}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            endAdornment={\n                              <PasswordInputAdornment\n                                isShown={showPassWord}\n                                handle={setShowPassWord}\n                              />\n                            }\n                          />\n                          <FormHelperText>\n                            {touched.password ? errors.password : \"\"}\n                          </FormHelperText>\n                        </FormControl>\n                        <FormControl\n                          fullWidth\n                          className={classes.spaceTop}\n                          error={\n                            !!(\n                              errors.passwordConfirm && touched.passwordConfirm\n                            )\n                          }\n                        >\n                          <InputLabel htmlFor=\"passwordConfirm\">\n                            Xác nhận mật khẩu\n                          </InputLabel>\n                          <Input\n                            type=\"password\"\n                            name=\"passwordConfirm\"\n                            id=\"passwordConfirm\"\n                            value={values.passwordConfirm}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                          />\n                          <FormHelperText>\n                            {touched.passwordConfirm\n                              ? errors.passwordConfirm\n                              : \"\"}\n                          </FormHelperText>\n                        </FormControl>\n                        <FormControl\n                          className={classes.spaceTop}\n                          error={!!(errors.agreeTerms && touched.agreeTerms)}\n                        >\n                          <FormControlLabel\n                            control={\n                              <Checkbox\n                                id=\"agree-term\"\n                                name=\"agreeTerms\"\n                                color=\"primary\"\n                                checked={values.agreeTerms}\n                                onChange={handleChange}\n                              />\n                            }\n                            label={\n                              <div>\n                                <span>Tôi đồng ý với &nbsp;</span>\n                                <Link\n                                  style={{\n                                    textDecoration: \"none\",\n                                    color: \"#1e88e5\"\n                                  }}\n                                  to=\"/terms-and-conditions\"\n                                >\n                                  điều khoản sử dụng\n                                </Link>\n                                <span>&nbsp; của Westay</span>\n                              </div>\n                            }\n                          />\n                          <FormHelperText>\n                            {touched.agreeTerms ? errors.agreeTerms : \"\"}\n                          </FormHelperText>\n                        </FormControl>\n                        <Button\n                          className={classes.spaceTop}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          type=\"submit\"\n                          style={{ color: \"#fff\" }}\n                          disabled={isSubmitting}\n                          fullWidth\n                        >\n                          {isSubmitting ? (\n                            <CircularProgress className={classes.spinner} />\n                          ) : (\n                            \"Đăng ký\"\n                          )}\n                        </Button>\n                      </form>\n                    );\n                  }}\n                </Formik>\n                {/*<h5 className = {borderC['text-line-center']}>đăng nhập với</h5>*/}\n                <Divider style={{ margin: \"16px 0\" }} />\n                <Typography className={AlignS.textCenter}>\n                  Đã có tài khoản?\n                  <b\n                    className={classes.color}\n                    onClick={() => handleLoginButton(true)}\n                  >\n                    {\" \"}\n                    Đăng nhập\n                  </b>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Zoom>\n      </Modal>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        open={openSnack}\n        onClose={() => setOpenSnack(false)}\n        autoHideDuration={6000}\n        ContentProps={{\n          \"aria-describedby\": \"message-register\"\n        }}\n      >\n        <SnackbarContent\n          className={classes.successSnack}\n          aria-describedby=\"client-snackbar\"\n          message={\n            <span id=\"client-snackbar\" className={classes.message}>\n              <CheckCircleIcon />\n              &nbsp; Đăng ký thành công\n            </span>\n          }\n        />\n      </Snackbar>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state: ReducersList) => {\n  return {\n    animation: state.v_animate\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnimationAction>) => {\n  return {\n    handleSignUpAnimation: (status: boolean) =>\n      dispatch({\n        type: animation.SIGN_UP_BUTTON_CLICK,\n        status: status\n      }),\n    handleLoginButton: (status: boolean) =>\n      dispatch({\n        type: animation.LOGIN_BUTTON_CLICK,\n        status: status\n      })\n  };\n};\n\nexport default compose<IProps, any>(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withStyles(styles)\n)(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}