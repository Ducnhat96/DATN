{"ast":null,"code":"import { updateObject } from \"@/store/utility\";\nimport { DEFAULT_DATE_TIME_FORMAT } from \"@/utils/store/global\";\nvar init = {\n  city_id: undefined,\n  district_id: undefined,\n  searchText: \"\",\n  guestsCount: 1,\n  roomsCount: 1,\n  bookingType: 2,\n  startDate: undefined,\n  endDate: undefined,\n  roomRecently: []\n};\n\nvar changeCount = function changeCount(state, action) {\n  if (action.type === \"ADD_VALUE\") {\n    var name = action.field;\n    var obj = {};\n    var totalValue = state[name] + action.value;\n    obj[name] = totalValue > 0 ? totalValue : 1;\n    return updateObject(state, obj);\n  }\n\n  return state;\n};\n\nvar changeDate = function changeDate(state, action) {\n  if (action.type === \"CHANGE_DATE\") {\n    var _date = action.date;\n\n    var _startDate = _date.startDate.format(DEFAULT_DATE_TIME_FORMAT);\n\n    var _endDate = _date.endDate ? _date.endDate.format(DEFAULT_DATE_TIME_FORMAT) : _date.startDate.format(DEFAULT_DATE_TIME_FORMAT);\n\n    return updateObject(state, {\n      startDate: _startDate,\n      endDate: _endDate\n    });\n  }\n\n  return state;\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : init;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_VALUE\":\n      return changeCount(state, action);\n\n    case \"CHANGE_DATE\":\n      return changeDate(state, action);\n\n    case \"SET_BOOKING_TYPE\":\n      return updateObject(state, {\n        bookingType: action.bookingType\n      });\n\n    case \"SET_NAV_BOOKING_TYPE\":\n      return updateObject(state, {\n        bookingType: action.bookingType\n      });\n\n    case \"SET_NAV_GUESTS\":\n      return updateObject(state, {\n        guestsCount: action.guestsCount\n      });\n\n    case \"SET_ROOM_RECENTLY\":\n      return updateObject(state, {\n        roomRecently: action.roomRecently\n      });\n\n    case \"SET_SEARCH_TEXT\":\n      return updateObject(state, {\n        searchText: action.searchText\n      });\n\n    case \"SET_SEARCH_CITY\":\n      return updateObject(state, {\n        city_id: action.city_id\n      });\n\n    case \"SET_SEARCH_DISTRICT\":\n      return updateObject(state, {\n        district_id: action.district_id\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/store/reducers/searchFilter.ts"],"names":["updateObject","DEFAULT_DATE_TIME_FORMAT","init","city_id","undefined","district_id","searchText","guestsCount","roomsCount","bookingType","startDate","endDate","roomRecently","changeCount","state","action","type","name","field","obj","totalValue","value","changeDate","date","format","reducer"],"mappings":"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","sourcesContent":["import * as act from \"@/store/actions/actionTypes\";\nimport { updateObject } from \"@/store/utility\";\nimport { DEFAULT_DATE_TIME_FORMAT } from \"@/utils/store/global\";\nimport { Moment } from \"moment\";\nimport { Reducer } from \"redux\";\n\nexport type DateRange = {\n  startDate: Moment | null;\n  endDate: Moment | null;\n};\n\nexport type SearchFilterState = {\n  readonly city_id: number | undefined;\n  readonly district_id: number | undefined;\n  readonly guestsCount: number;\n  readonly searchText: string;\n  readonly roomsCount: number;\n  readonly bookingType: number;\n  readonly startDate: string | undefined;\n  readonly endDate: string | undefined;\n  readonly roomRecently: number[];\n};\n\nexport type SearchFilterAction =\n  | { type: \"ADD_VALUE\"; value: number; field: string }\n  | { type: \"CHANGE_DATE\"; date: DateRange }\n  | { type: \"SET_BOOKING_TYPE\"; bookingType: number }\n  | { type: \"SET_NAV_BOOKING_TYPE\"; bookingType: number }\n  | { type: \"SET_NAV_GUESTS\"; guestsCount: number }\n  | { type: \"SET_ROOM_RECENTLY\"; roomRecently: number[] }\n  | { type: \"SET_SEARCH_TEXT\"; searchText: string }\n  | { type: \"SET_SEARCH_CITY\"; city_id: number | undefined }\n  | { type: \"SET_SEARCH_DISTRICT\"; district_id: number | undefined };\n\nconst init: SearchFilterState = {\n  city_id: undefined,\n  district_id: undefined,\n  searchText: \"\",\n  guestsCount: 1,\n  roomsCount: 1,\n  bookingType: 2,\n  startDate: undefined,\n  endDate: undefined,\n  roomRecently: []\n};\n\nconst changeCount = (\n  state: SearchFilterState | any,\n  action: SearchFilterAction\n) => {\n  if (action.type === \"ADD_VALUE\") {\n    let name: any = action.field;\n    let obj: any = {};\n    let totalValue: number = state[name] + action.value;\n    obj[name] = totalValue > 0 ? totalValue : 1;\n    return updateObject(state, obj);\n  }\n  return state;\n};\n\nconst changeDate = (state: SearchFilterState, action: SearchFilterAction) => {\n  if (action.type === \"CHANGE_DATE\") {\n    const { date } = action;\n\n    let startDate = date!.startDate!.format(DEFAULT_DATE_TIME_FORMAT);\n    let endDate = date!.endDate\n      ? date!.endDate!.format(DEFAULT_DATE_TIME_FORMAT)\n      : date!.startDate!.format(DEFAULT_DATE_TIME_FORMAT);\n\n    return updateObject(state, {\n      startDate,\n      endDate\n    });\n  }\n  return state;\n};\n\nconst reducer: Reducer<SearchFilterState, any> = (\n  state: SearchFilterState = init,\n  action: SearchFilterAction\n): SearchFilterState => {\n  switch (action.type) {\n    case \"ADD_VALUE\":\n      return changeCount(state, action);\n    case \"CHANGE_DATE\":\n      return changeDate(state, action);\n    case \"SET_BOOKING_TYPE\":\n      return updateObject(state, {\n        bookingType: action.bookingType\n      });\n    case \"SET_NAV_BOOKING_TYPE\":\n      return updateObject(state, {\n        bookingType: action.bookingType\n      });\n    case \"SET_NAV_GUESTS\":\n      return updateObject(state, {\n        guestsCount: action.guestsCount\n      });\n    case \"SET_ROOM_RECENTLY\":\n      return updateObject(state, {\n        roomRecently: action.roomRecently\n      });\n    case \"SET_SEARCH_TEXT\":\n      return updateObject(state, {\n        searchText: action.searchText\n      });\n    case \"SET_SEARCH_CITY\":\n      return updateObject(state, {\n        city_id: action.city_id\n      });\n    case \"SET_SEARCH_DISTRICT\":\n      return updateObject(state, {\n        district_id: action.district_id\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}