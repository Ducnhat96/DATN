{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Rooms/SearchProperty.tsx\";\nimport Grid from '@material-ui/core/Grid/Grid';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport React, { memo, useState, useContext } from 'react';\nimport { compose } from 'recompose';\nimport AsyncSelect from 'react-select/lib/Async';\nimport { getRoomSearch } from '@/store/context/searchSuggestion';\nimport axiosBase from 'axios';\nimport { GlobalContext } from '@/store/context/GlobalContext';\nimport { RoomIndexContext, newRoomLocation } from '@/store/context/Room/RoomIndexContext';\nimport qs from 'query-string';\nimport { updateObject } from '@/store/utility';\n\nvar styles = function styles(theme) {\n  return createStyles({});\n};\n\nvar searchStylesHome = {\n  menuList: function menuList(base) {\n    return _objectSpread({}, base, {\n      maxHeight: '70vh'\n    });\n  }\n};\n\nvar SearchProperty = function SearchProperty(props) {\n  var classes = props.classes;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nameBefore = _useState4[0],\n      setNameBefore = _useState4[1];\n\n  var _useContext = useContext(RoomIndexContext),\n      dispatch = _useContext.dispatch;\n\n  var _useContext2 = useContext(GlobalContext),\n      location = _useContext2.location,\n      history = _useContext2.history;\n\n  var onSearchProperty = function onSearchProperty(value, meta) {\n    var action = meta.action;\n    if (action === 'menu-close' || action === 'input-blur') return;\n    setSearchText(value);\n    return value;\n  }; // Change the name in the filter\n\n\n  var onPropertyItemChange = function onPropertyItemChange(room, meta) {\n    var action = meta.action;\n    var params = qs.parse(location.search);\n    console.log('params', params);\n    var name = params.name;\n\n    if (action === 'select-option') {\n      if (!!nameBefore) setNameBefore(name);\n      name = room.details.data[0].name;\n    } else if (action === 'clear') {\n      name = nameBefore;\n      setNameBefore('');\n    }\n\n    var newParams = updateObject(params, {\n      name: name\n    });\n    var locationTo = newRoomLocation(newParams);\n    dispatch({\n      type: 'setRooms',\n      rooms: []\n    });\n    history.push(locationTo);\n  };\n\n  var suggestEvent = function suggestEvent(value, cb) {\n    getRoomSearch(location, value).then(function (res) {\n      cb(res.data);\n    }).catch(function (err) {\n      if (!axiosBase.isCancel(err)) {\n        cb([{\n          error: 'Có lỗi xảy ra. Vui lòng thử lại'\n        }]);\n      }\n    });\n  };\n\n  var optionSearchLabel = function optionSearchLabel(option) {\n    return option.details.data[0].name;\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    style: {\n      fontWeight: 700\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"T\\xECm ki\\u1EBFm ph\\xF2ng\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(AsyncSelect, {\n    name: \"search-property\",\n    isClearable: true,\n    cacheOptions: true,\n    defaultOptions: true,\n    getOptionLabel: optionSearchLabel,\n    getOptionValue: optionSearchLabel,\n    inputValue: searchText,\n    loadOptions: suggestEvent,\n    onInputChange: onSearchProperty,\n    onChange: onPropertyItemChange,\n    placeholder: \"T\\xECm ki\\u1EBFm\",\n    styles: searchStylesHome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })));\n};\n\nexport default compose(withStyles(styles), memo)(SearchProperty);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Rooms/SearchProperty.tsx"],"names":["Grid","createStyles","withStyles","Typography","React","memo","useState","useContext","compose","AsyncSelect","getRoomSearch","axiosBase","GlobalContext","RoomIndexContext","newRoomLocation","qs","updateObject","styles","theme","searchStylesHome","menuList","base","maxHeight","SearchProperty","props","classes","searchText","setSearchText","nameBefore","setNameBefore","dispatch","location","history","onSearchProperty","value","meta","action","onPropertyItemChange","room","params","parse","search","console","log","name","details","data","newParams","locationTo","type","rooms","push","suggestEvent","cb","then","res","catch","err","isCancel","error","optionSearchLabel","option","fontWeight"],"mappings":"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","sourcesContent":["import { ThemeCustom } from '@/components/Theme/Theme';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport React, { ComponentType, memo, useState, useContext } from 'react';\nimport { compose } from 'recompose';\nimport AsyncSelect from 'react-select/lib/Async';\nimport { InputActionMeta, ActionMeta } from 'react-select/lib/types';\nimport { getRoomSearch } from '@/store/context/searchSuggestion';\nimport axiosBase from 'axios';\nimport { StylesConfig } from 'react-select/lib/styles';\nimport { IGlobalContext, GlobalContext } from '@/store/context/GlobalContext';\nimport { RoomIndexRes } from '@/types/Requests/Rooms/RoomResponses';\nimport { IRoomIndexContext, RoomIndexContext, newRoomLocation } from '@/store/context/Room/RoomIndexContext';\nimport { RoomUrlParams } from '@/types/Requests/Rooms/RoomRequests';\nimport qs from 'query-string';\nimport { updateObject } from '@/store/utility';\n\ninterface IProps {\n  classes?: any\n}\n\nconst styles: any = (theme: ThemeCustom) => createStyles({});\n\nconst searchStylesHome: StylesConfig = {\n  menuList: base => ({\n    ...base,\n    maxHeight: '70vh',\n  }),\n};\n\nconst SearchProperty: ComponentType<IProps> = (props: IProps) => {\n  const { classes } = props;\n  const [searchText, setSearchText] = useState('');\n  const [nameBefore, setNameBefore] = useState<string | undefined>('');\n\n  const { dispatch } = useContext<IRoomIndexContext>(RoomIndexContext);\n  const { location, history } = useContext<IGlobalContext>(GlobalContext);\n\n  const onSearchProperty = (value: string, meta: InputActionMeta) => {\n    let { action } = meta;\n    if (action === 'menu-close' || action === 'input-blur') return;\n\n    setSearchText(value);\n    return value;\n  };\n\n  // Change the name in the filter\n  const onPropertyItemChange = (room: RoomIndexRes | any, meta: ActionMeta) => {\n    const { action } = meta;\n\n    const params: RoomUrlParams = qs.parse(location.search!);\n    console.log('params',params)\n    let name = params.name;\n    if (action === 'select-option') {\n      if (!!nameBefore) setNameBefore(name);\n      name = room.details.data[0].name;\n    } else if (action === 'clear') {\n      name = nameBefore;\n      setNameBefore('');\n    }\n\n    const newParams = updateObject(params, {\n      name: name,\n    });\n\n    const locationTo = newRoomLocation(newParams);\n\n    dispatch({\n      type: 'setRooms',\n      rooms: [],\n    });\n\n    history.push(locationTo);\n  };\n\n  const suggestEvent = (value: string, cb: (result: any[]) => void) => {\n    getRoomSearch(location, value).then(res => {\n      cb(res.data);\n    }).catch(err => {\n      if (!axiosBase.isCancel(err)) {\n        cb([{\n          error: 'Có lỗi xảy ra. Vui lòng thử lại',\n        }]);\n      }\n    });\n  };\n\n  const optionSearchLabel = (option: RoomIndexRes) => option.details.data[0].name;\n\n  return (\n    <Grid container spacing={8}>\n      <Grid item xs={12}>\n        <Typography variant='subtitle2' style={{ fontWeight: 700 }}>Tìm kiếm phòng</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <AsyncSelect\n          name='search-property'\n          isClearable\n          cacheOptions\n          defaultOptions\n          getOptionLabel={optionSearchLabel}\n          getOptionValue={optionSearchLabel}\n          inputValue={searchText}\n          loadOptions={suggestEvent}\n          onInputChange={onSearchProperty}\n          onChange={onPropertyItemChange}\n          placeholder='Tìm kiếm'\n          styles={searchStylesHome}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default compose<IProps, any>(\n  withStyles(styles),\n  memo,\n)(SearchProperty);\n"]},"metadata":{},"sourceType":"module"}