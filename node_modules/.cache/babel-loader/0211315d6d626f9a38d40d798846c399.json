{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createContext } from 'react';\nimport { updateObject } from '@/store/utility';\nimport { axios } from '@/utils/axiosInstance';\nimport _ from 'lodash';\nexport var RoomDetailsContext = createContext(null);\nexport var RoomDetailsStateInit = {\n  room: null,\n  roomRecommend: [],\n  schedule: [],\n  bookingType: 2\n};\nexport var RoomDetailsReducer = function RoomDetailsReducer(state, action) {\n  switch (action.type) {\n    case 'setDetails':\n      return updateObject(state, {\n        room: action.room,\n        schedule: action.schedule,\n        roomRecommend: action.recommend\n      });\n\n    case 'setBookingType':\n      return updateObject(state, {\n        bookingType: action.bookingType\n      });\n\n    case 'setPrice':\n      return updateObject(state, {\n        price: action.price\n      });\n\n    default:\n      return state;\n  }\n};\nexport var getRoom =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(idRoom) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"rooms/\".concat(idRoom, \"?include=details,merchant,comforts.details,media,district,city,places.guidebook,reviews.user\"));\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getRoom(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getRoomRecommend =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(idRoom) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"rooms/room_recommend/\".concat(idRoom, \"?include=media,details,city,district\"));\n\n          case 2:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res.data.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function getRoomRecommend(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getRoomSchedule =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(id) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.get(\"rooms/schedule/\".concat(id));\n\n          case 2:\n            res = _context3.sent;\n            return _context3.abrupt(\"return\", res.data);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  return function getRoomSchedule(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport var getData = function getData(id, dispatch, history) {\n  if (isNaN(id)) history.push('/');\n  var pathName = window.location.pathname;\n  var isMerchant = false; //console.log(window.location.pathname);\n\n  if (pathName.indexOf(\"preview-room\") !== -1) {\n    isMerchant = true;\n  }\n\n  ;\n  Promise.all([getRoom(id), getRoomSchedule(id), getRoomRecommend(id)]).then(function (res) {\n    var _res = _slicedToArray(res, 3),\n        room = _res[0],\n        schedule = _res[1],\n        roomRecommend = _res[2]; // console.log(!isMerchant, room.status !== 1);\n\n\n    if (!isMerchant && room.status !== 1) {\n      history.push('/404');\n    }\n\n    dispatch({\n      type: 'setDetails',\n      room: room,\n      recommend: roomRecommend,\n      schedule: _.sortBy(schedule.data.blocks)\n    });\n  }).catch(function (err) {\n    console.log(err);\n    history.push('/404');\n  });\n};","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/store/context/Room/RoomDetailsContext.tsx"],"names":["createContext","updateObject","axios","_","RoomDetailsContext","RoomDetailsStateInit","room","roomRecommend","schedule","bookingType","RoomDetailsReducer","state","action","type","recommend","price","getRoom","idRoom","get","res","data","getRoomRecommend","getRoomSchedule","id","getData","dispatch","history","isNaN","push","pathName","window","location","pathname","isMerchant","indexOf","Promise","all","then","status","sortBy","blocks","catch","err","console","log"],"mappings":"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","sourcesContent":["import { createContext, Dispatch, useContext } from 'react';\nimport { RoomIndexRes, RoomScheduleRes } from '@/types/Requests/Rooms/RoomResponses';\nimport { updateObject } from '@/store/utility';\nimport { AxiosRes } from '@/types/Requests/ResponseTemplate';\nimport { axios } from '@/utils/axiosInstance';\nimport { History } from 'history';\nimport _ from 'lodash';\nimport { BookingPriceCalculatorRes } from '@/types/Requests/Booking/BookingResponses';\n\nexport const RoomDetailsContext = createContext<IRoomDetailsContext | any>(null);\n\nexport interface IRoomDetailsContext {\n  state: RoomDetailsState,\n  dispatch: Dispatch<RoomDetailsAction>,\n}\n\nexport type RoomDetailsState = {\n  readonly room: RoomIndexRes | null,\n  readonly roomRecommend: RoomIndexRes[] | [],\n  readonly schedule: string[]\n  readonly bookingType: number\n  readonly price?: BookingPriceCalculatorRes\n}\n\nexport type RoomDetailsAction =\n  { type: 'setDetails', room: RoomIndexRes, recommend: RoomIndexRes[], schedule: string[] }\n  | { type: 'setBookingType', bookingType: number }\n  | { type: 'setPrice', price: BookingPriceCalculatorRes }\n\nexport const RoomDetailsStateInit: RoomDetailsState = {\n  room: null,\n  roomRecommend: [],\n  schedule: [],\n  bookingType: 2,\n};\n\nexport const RoomDetailsReducer = (state: RoomDetailsState, action: RoomDetailsAction): RoomDetailsState => {\n  switch (action.type) {\n    case 'setDetails':\n      return updateObject<RoomDetailsState>(state, {\n        room: action.room,\n        schedule: action.schedule,\n        roomRecommend: action.recommend,\n      });\n    case 'setBookingType':\n      return updateObject<RoomDetailsState>(state, {\n        bookingType: action.bookingType,\n      });\n    case 'setPrice':\n      return updateObject(state, {\n        price: action.price,\n      });\n    default:\n      return state;\n  }\n};\n\nexport const getRoom = async (idRoom: number) => {\n  const res: AxiosRes<RoomIndexRes> = await axios.get(`rooms/${idRoom}?include=details,merchant,comforts.details,media,district,city,places.guidebook,reviews.user`);\n  return res.data.data;\n};\n\nconst getRoomRecommend = async (idRoom: number) => {\n  const res: AxiosRes<RoomIndexRes[]> = await axios.get(`rooms/room_recommend/${idRoom}?include=media,details,city,district`);\n  return res.data.data;\n};\n\nconst getRoomSchedule = async (id: number) => {\n  const res: AxiosRes<RoomScheduleRes> = await axios.get(`rooms/schedule/${id}`);\n  return res.data;\n};\n\nexport const getData = (id: number, dispatch: Dispatch<RoomDetailsAction>, history: History) => {\n  if (isNaN(id)) history.push('/');\n  const pathName = window.location.pathname;\n  let isMerchant = false;\n  //console.log(window.location.pathname);\n  if (pathName.indexOf(\"preview-room\") !== -1) {\n    isMerchant = true;\n  };\n  Promise.all([\n    getRoom(id),\n    getRoomSchedule(id),\n    getRoomRecommend(id),\n  ]).then(res => {\n    const [room, schedule, roomRecommend] = res;\n    // console.log(!isMerchant, room.status !== 1);\n    if (!isMerchant && room.status !== 1) {\n      history.push('/404')\n    }\n    dispatch({\n      type: 'setDetails',\n      room: room,\n      recommend: roomRecommend,\n      schedule: _.sortBy(schedule.data.blocks),\n    });\n  }).catch(err => {\n    console.log(err);\n    history.push('/404');\n  });\n};\n"]},"metadata":{},"sourceType":"module"}