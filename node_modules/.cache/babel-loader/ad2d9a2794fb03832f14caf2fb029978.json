{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createContext } from \"react\";\nimport { updateObject } from \"@/store/utility\";\nimport { axios } from \"@/utils/axiosInstance\";\nimport { fetchRoom } from '@/store/context/Room/RoomIndexContext';\nexport var ProfileViewContext = createContext(null);\nexport var ProfileViewStateInit = {\n  profile: null,\n  userRooms: []\n};\nexport var ProfileViewReducer = function ProfileViewReducer(state, action) {\n  switch (action.type) {\n    case \"setData\":\n      return updateObject(state, {\n        profile: action.profile,\n        userRooms: action.userRooms\n      });\n\n    case 'setUserRooms':\n      return updateObject(state, {\n        userRooms: action.rooms\n      });\n\n    default:\n      return state;\n  }\n};\nexport var getProfileById =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(idUser) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"/profile/\".concat(idUser));\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getProfileById(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getRoomMerchantById =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(idUser) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", fetchRoom(\"rooms?merchant=\".concat(idUser, \"&include=reviews.user,details,media,city,district\")));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function getRoomMerchantById(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getDataProfile = function getDataProfile(id, dispatch, history) {\n  if (isNaN(id)) history.push(\"/\");\n  Promise.all([getProfileById(id), getRoomMerchantById(id)]).then(function (res) {\n    var _res = _slicedToArray(res, 2),\n        user = _res[0],\n        userRooms = _res[1];\n\n    dispatch({\n      type: \"setData\",\n      profile: user.data,\n      userRooms: userRooms.data\n    });\n  }).catch(function (err) {\n    console.log(err); //window.location.replace(\"/\");\n  });\n};","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/store/context/Profile/ProfileViewContext.tsx"],"names":["createContext","updateObject","axios","fetchRoom","ProfileViewContext","ProfileViewStateInit","profile","userRooms","ProfileViewReducer","state","action","type","rooms","getProfileById","idUser","get","res","data","getRoomMerchantById","getDataProfile","id","dispatch","history","isNaN","push","Promise","all","then","user","catch","err","console","log"],"mappings":";;;AAAA,SAASA,aAAT,QAAwC,OAAxC;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,SAASC,KAAT,QAAsB,uBAAtB;AAGA,SAASC,SAAT,QAA0B,uCAA1B;AAIA,OAAO,IAAMC,kBAAkB,GAAGJ,aAAa,CAA4B,IAA5B,CAAxC;AAkBP,OAAO,IAAMK,oBAAsC,GAAG;AACpDC,EAAAA,OAAO,EAAE,IAD2C;AAEpDC,EAAAA,SAAS,EAAE;AAFyC,CAA/C;AAKP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAChCC,KADgC,EAEhCC,MAFgC,EAG7B;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAOV,YAAY,CAAmBQ,KAAnB,EAA0B;AAC3CH,QAAAA,OAAO,EAAEI,MAAM,CAACJ,OAD2B;AAE3CC,QAAAA,SAAS,EAAEG,MAAM,CAACH;AAFyB,OAA1B,CAAnB;;AAIF,SAAK,cAAL;AACE,aAAON,YAAY,CAAmBQ,KAAnB,EAA0B;AAC3CF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AADyB,OAA1B,CAAnB;;AAGF;AACE,aAAOH,KAAP;AAXJ;AAaD,CAjBM;AAmBP,OAAO,IAAMI,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACoBZ,KAAK,CAACa,GAAN,oBAClCD,MADkC,EADpB;;AAAA;AACtBE,YAAAA,GADsB;AAAA,6CAIrBA,GAAG,CAACC,IAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdJ,cAAc;AAAA;AAAA;AAAA,GAApB;AAOP,OAAO,IAAMK,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOJ,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA,8CAC1BX,SAAS,0BAAmBW,MAAnB,uDADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBI,mBAAmB;AAAA;AAAA;AAAA,GAAzB;AAIP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAC5BC,EAD4B,EAE5BC,QAF4B,EAG5BC,OAH4B,EAIzB;AACH,MAAIC,KAAK,CAACH,EAAD,CAAT,EAAeE,OAAO,CAACE,IAAR,CAAa,GAAb;AAEfC,EAAAA,OAAO,CAACC,GAAR,CAAY,CACVb,cAAc,CAACO,EAAD,CADJ,EAEVF,mBAAmB,CAACE,EAAD,CAFT,CAAZ,EAIGO,IAJH,CAIQ,UAAAX,GAAG,EAAI;AAAA,8BACeA,GADf;AAAA,QACJY,IADI;AAAA,QACErB,SADF;;AAEXc,IAAAA,QAAQ,CAAC;AACPV,MAAAA,IAAI,EAAE,SADC;AAEPL,MAAAA,OAAO,EAAEsB,IAAI,CAACX,IAFP;AAGPV,MAAAA,SAAS,EAAEA,SAAS,CAACU;AAHd,KAAD,CAAR;AAKD,GAXH,EAYGY,KAZH,CAYS,UAACC,GAAD,EAAqB;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAD0B,CAE1B;AACD,GAfH;AAgBD,CAvBM","sourcesContent":["import { createContext, Dispatch } from \"react\";\nimport { ProfileViewInfoRes } from \"@/types/Requests/Profile/ProfileResponse\";\nimport { updateObject } from \"@/store/utility\";\nimport { AxiosRes, BaseResponse } from \"@/types/Requests/ResponseTemplate\";\nimport { axios } from \"@/utils/axiosInstance\";\nimport { History } from \"history\";\nimport { AxiosError } from \"axios\";\nimport { fetchRoom } from '@/store/context/Room/RoomIndexContext';\nimport _ from \"lodash\";\nimport { RoomIndexRes } from \"@/types/Requests/Rooms/RoomResponses\";\n\nexport const ProfileViewContext = createContext<IProfileViewContext | any>(null);\n\nexport interface IProfileViewContext {\n  state: ProfileViewState;\n  dispatch: Dispatch<ProfileViewAction>;\n}\n\nexport type ProfileViewAction = {\n  type: \"setData\";\n  profile?: ProfileViewInfoRes;\n  userRooms: RoomIndexRes[];\n} | { type: 'setUserRooms', rooms: RoomIndexRes[] }\n\nexport type ProfileViewState = {\n  readonly profile?: ProfileViewInfoRes | null;\n  readonly userRooms?: RoomIndexRes[]\n};\n\nexport const ProfileViewStateInit: ProfileViewState = {\n  profile: null,\n  userRooms: []\n};\n\nexport const ProfileViewReducer = (\n  state: ProfileViewState,\n  action: ProfileViewAction\n) => {\n  switch (action.type) {\n    case \"setData\":\n      return updateObject<ProfileViewState>(state, {\n        profile: action.profile,\n        userRooms: action.userRooms\n      });\n    case 'setUserRooms':\n      return updateObject<ProfileViewState>(state, {\n        userRooms: action.rooms\n      })\n    default:\n      return state;\n  }\n};\n\nexport const getProfileById = async (idUser: number) => {\n  const res: AxiosRes<ProfileViewInfoRes> = await axios.get(\n    `/profile/${idUser}`\n  );\n  return res.data;\n};\n\nexport const getRoomMerchantById = async (idUser: Number): Promise<BaseResponse<RoomIndexRes[]>> => {\n  return fetchRoom(`rooms?merchant=${idUser}&include=reviews.user,details,media,city,district`);\n}\n\nexport const getDataProfile = (\n  id: number,\n  dispatch: Dispatch<ProfileViewAction>,\n  history: History\n) => {\n  if (isNaN(id)) history.push(\"/\");\n\n  Promise.all([\n    getProfileById(id),\n    getRoomMerchantById(id)\n  ])\n    .then(res => {\n      const [user, userRooms] = res;\n      dispatch({\n        type: \"setData\",\n        profile: user.data,\n        userRooms: userRooms.data\n      });\n    })\n    .catch((err: AxiosError) => {\n      console.log(err)\n      //window.location.replace(\"/\");\n    });\n};\n"]},"metadata":{},"sourceType":"module"}