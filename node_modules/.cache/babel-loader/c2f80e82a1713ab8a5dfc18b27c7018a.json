{"ast":null,"code":"import _objectWithoutProperties from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Utils/AutosuggestSearch.tsx\";\nimport Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React, { useState, memo } from \"react\";\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withRouter } from \"react-router-dom\";\nimport { searchSuggest } from \"@/store/context/searchSuggestion\";\nimport { IS_SEARCH_CITY, IS_SEARCH_DISTRICT } from \"@/types/Requests/Search/SearchResponse\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HomeIcon from \"@material-ui/icons/HomeRounded\";\nimport LocationIcon from \"@material-ui/icons/LocationOnRounded\";\nimport ErrorBoundary from \"react-error-boundary\";\n\nvar styles = function styles(theme) {\n  return createStyles({\n    container: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    suggestionsContainerOpen: {\n      position: \"absolute\",\n      zIndex: 10000,\n      left: 0,\n      right: 0,\n      maxHeight: 192,\n      overflowY: \"scroll\",\n      borderTop: \"1px solid #EBEBEB\",\n      paddingTop: 6\n    },\n    suggestionsContainerOpenNavSearch: {\n      position: \"absolute\",\n      zIndex: 1,\n      left: 0,\n      right: 0,\n      top: 46,\n      maxHeight: 322,\n      overflowY: \"scroll\",\n      borderTop: \"1px solid #EBEBEB\",\n      paddingTop: 5,\n      width: \"calc(100% + 12vw)\"\n    },\n    suggestion: {\n      display: \"block\"\n    },\n    suggestionsList: {\n      margin: 0,\n      padding: 0,\n      listStyleType: \"none\"\n    },\n    outlineInput: {\n      padding: \"12px 16px\"\n    },\n    input: {\n      color: \"#000\"\n    },\n    marginSearch: {\n      marginLeft: 23\n    },\n    gutters: {\n      paddingLeft: 22\n    },\n    suggestionText: {\n      marginLeft: 26,\n      fontSize: 14\n    },\n    searchIcon: {\n      width: 23,\n      height: 23,\n      verticalAlign: \"sub\"\n    },\n    paperShadow: {\n      boxShadow: \"#1a1a1d 0px 9px 26px -14px\"\n    }\n  });\n};\n\nvar AutosuggestSearch = function AutosuggestSearch(props) {\n  var classes = props.classes,\n      searchText = props.searchText,\n      setSearchText = props.setSearchText,\n      updateSearchText = props.updateSearchText,\n      updateSearchCity = props.updateSearchCity,\n      updateSearchDistrict = props.updateSearchDistrict,\n      setCityId = props.setCityId,\n      setDistrictId = props.setDistrictId,\n      isNav = props.isNav;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      suggestions = _useState2[0],\n      setSuggestions = _useState2[1]; //const [inputValue, setInputValue] = useState<any>(filter.searchText);\n\n\n  var renderSuggestion = function renderSuggestion(suggestion, _ref) {\n    var query = _ref.query,\n        isHighlighted = _ref.isHighlighted;\n    var matches = match(suggestion.name, query);\n    var parts = parse(suggestion.name, matches); // console.log(parts, matches);\n\n    return React.createElement(MenuItem, {\n      selected: isHighlighted,\n      component: \"div\",\n      classes: {\n        gutters: classes.gutters\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, suggestion.type === IS_SEARCH_CITY || suggestion.type === IS_SEARCH_DISTRICT ? React.createElement(HomeIcon, {\n      className: classes.searchIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }) : React.createElement(LocationIcon, {\n      className: classes.searchIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.suggestionText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, parts.map(function (part, index) {\n      return React.createElement(\"span\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, part.text);\n    })));\n  };\n\n  var getSuggestionValue = function getSuggestionValue(suggestion) {\n    setSearchText(suggestion.name);\n    return suggestion.name;\n  };\n\n  var getSuggestions = function getSuggestions(value) {\n    searchSuggest(value).then(function (data) {\n      setSuggestions(data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  var handleSuggestionsFetchRequested = function handleSuggestionsFetchRequested(_ref2) {\n    var value = _ref2.value;\n    getSuggestions(value);\n  };\n\n  var handleSuggestionsClearRequested = function handleSuggestionsClearRequested() {\n    setSuggestions([]);\n  };\n\n  var onChange = function onChange(e, _ref3) {\n    var newValue = _ref3.newValue;\n    setSearchText(newValue);\n    updateSearchText(newValue);\n  };\n\n  var handleSuggestionSelected = function handleSuggestionSelected(e, _ref4) {\n    var suggestion = _ref4.suggestion,\n        method = _ref4.method;\n\n    if (method === \"enter\") {\n      e.preventDefault();\n    }\n\n    if (suggestion.type === 1) {\n      setCityId(suggestion.id);\n      setDistrictId(\"\");\n      updateSearchCity(suggestion.id);\n      updateSearchDistrict(undefined);\n      updateSearchText(suggestion.name);\n      setSearchText(suggestion.name);\n    } else if (suggestion.type === 2) {\n      setDistrictId(suggestion.id);\n      setCityId(\"\");\n      updateSearchDistrict(suggestion.id);\n      updateSearchCity(undefined);\n      updateSearchText(suggestion.name);\n      setSearchText(suggestion.name);\n    } else if (suggestion.type === 3) {\n      setDistrictId(\"\");\n      setCityId(\"\");\n      updateSearchDistrict(undefined);\n      updateSearchCity(undefined);\n      setSearchText(suggestion.name);\n      updateSearchText(suggestion.name);\n    }\n  };\n\n  var renderInputComponent = function renderInputComponent(inputProps) {\n    var classes = inputProps.classes,\n        _inputProps$inputRef = inputProps.inputRef,\n        _inputRef = _inputProps$inputRef === void 0 ? function () {} : _inputProps$inputRef,\n        ref = inputProps.ref,\n        other = _objectWithoutProperties(inputProps, [\"classes\", \"inputRef\", \"ref\"]);\n\n    return React.createElement(TextField, Object.assign({\n      fullWidth: true,\n      classes: {\n        marginDense: classes.marginDense\n      },\n      inputProps: {\n        className: classes.outlineInput\n      },\n      InputProps: {\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, React.createElement(SearchIcon, {\n          className: classes.marginSearch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        })),\n        inputRef: function inputRef(node) {\n          ref(node);\n\n          _inputRef(node);\n        },\n        classes: {\n          input: classes.input\n        },\n        disableUnderline: true\n      }\n    }, other, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }));\n  };\n\n  var autosuggestProps = {\n    renderInputComponent: renderInputComponent,\n    suggestions: suggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    onSuggestionSelected: handleSuggestionSelected,\n    getSuggestionValue: getSuggestionValue,\n    renderSuggestion: renderSuggestion\n  };\n  return React.createElement(ErrorBoundary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(Autosuggest, Object.assign({}, autosuggestProps, {\n    // alwaysRenderSuggestions={true}\n    inputProps: {\n      classes: classes,\n      id: \"search-autosuggest-simple\",\n      placeholder: \"Bạn muốn tới đâu?\",\n      value: searchText,\n      onChange: onChange\n    },\n    theme: {\n      container: classes.container,\n      suggestionsContainerOpen: isNav ? classes.suggestionsContainerOpenNavSearch : classes.suggestionsContainerOpen,\n      suggestionsList: classes.suggestionsList,\n      suggestion: classes.suggestion\n    },\n    renderSuggestionsContainer: function renderSuggestionsContainer(options) {\n      return React.createElement(Paper, Object.assign({}, options.containerProps, {\n        square: true,\n        classes: {\n          root: classes.paperShadow\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), options.children);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    filter: state.searchFilter\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateSearchText: function updateSearchText(inputSearch) {\n      dispatch({\n        type: \"SET_SEARCH_TEXT\",\n        searchText: inputSearch\n      });\n    },\n    updateSearchCity: function updateSearchCity(city_id) {\n      dispatch({\n        type: \"SET_SEARCH_CITY\",\n        city_id: city_id\n      });\n    },\n    updateSearchDistrict: function updateSearchDistrict(district_id) {\n      dispatch({\n        type: \"SET_SEARCH_DISTRICT\",\n        district_id: district_id\n      });\n    }\n  };\n};\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps), withStyles(styles), memo)(AutosuggestSearch);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Utils/AutosuggestSearch.tsx"],"names":["Autosuggest","match","parse","InputAdornment","createStyles","withStyles","TextField","Paper","React","useState","memo","compose","connect","MenuItem","withRouter","searchSuggest","IS_SEARCH_CITY","IS_SEARCH_DISTRICT","SearchIcon","HomeIcon","LocationIcon","ErrorBoundary","styles","theme","container","position","width","suggestionsContainerOpen","zIndex","left","right","maxHeight","overflowY","borderTop","paddingTop","suggestionsContainerOpenNavSearch","top","suggestion","display","suggestionsList","margin","padding","listStyleType","outlineInput","input","color","marginSearch","marginLeft","gutters","paddingLeft","suggestionText","fontSize","searchIcon","height","verticalAlign","paperShadow","boxShadow","AutosuggestSearch","props","classes","searchText","setSearchText","updateSearchText","updateSearchCity","updateSearchDistrict","setCityId","setDistrictId","isNav","suggestions","setSuggestions","renderSuggestion","query","isHighlighted","matches","name","parts","type","map","part","index","text","getSuggestionValue","getSuggestions","value","then","data","catch","err","console","log","handleSuggestionsFetchRequested","handleSuggestionsClearRequested","onChange","e","newValue","handleSuggestionSelected","method","preventDefault","id","undefined","renderInputComponent","inputProps","inputRef","ref","other","marginDense","className","startAdornment","node","disableUnderline","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","placeholder","options","containerProps","root","children","mapStateToProps","state","filter","searchFilter","mapDispatchToProps","dispatch","inputSearch","city_id","district_id"],"mappings":"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","sourcesContent":["import Autosuggest from \"react-autosuggest\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport VN_vi from \"@/assets/vietnam84.png\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { SearchFilterState } from \"@/store/reducers/searchFilter\";\nimport React, {\n  ComponentType,\n  useContext,\n  useMemo,\n  useState,\n  useEffect,\n  memo\n} from \"react\";\nimport { compose } from \"recompose\";\nimport { ReducersType } from \"@/store/reducers\";\nimport { ThemeCustom } from \"@/components/Theme/Theme\";\nimport { connect } from \"react-redux\";\nimport { axios } from \"@/utils/axiosInstance\";\nimport { Dispatch } from \"redux\";\nimport { IGlobalContext, GlobalContext } from \"@/store/context/GlobalContext\";\nimport classNames from \"classnames\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { RouterProps } from \"react-router\";\nimport { withRouter, RouteProps } from \"react-router-dom\";\nimport { searchSuggest } from \"@/store/context/searchSuggestion\";\nimport {\n  SearchSuggestRes,\n  IS_SEARCH_CITY,\n  IS_SEARCH_DISTRICT,\n  IS_SEARCH_ROOM\n} from \"@/types/Requests/Search/SearchResponse\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HomeIcon from \"@material-ui/icons/HomeRounded\";\nimport LocationIcon from \"@material-ui/icons/LocationOnRounded\";\nimport Popular from \"@material-ui/icons/WhatshotRounded\";\nimport ErrorBoundary from \"react-error-boundary\";\n\ninterface Iprops extends RouteProps, RouterProps {\n  classes?: any;\n  searchText: string;\n  isNav?: boolean;\n  setSearchText(searchText: string): void;\n  setCityId(cityId: any): void;\n  setDistrictId(districtId: any): void;\n  updateSearchText(inputSearch: string): void;\n  updateSearchCity(city_id: number | undefined): void;\n  updateSearchDistrict(district_id: number | undefined): void;\n}\n\nconst styles: any = (theme: ThemeCustom) =>\n  createStyles({\n    container: {\n      position: \"relative\",\n      width: \"100%\"\n    },\n    suggestionsContainerOpen: {\n      position: \"absolute\",\n      zIndex: 10000,\n      left: 0,\n      right: 0,\n      maxHeight: 192,\n      overflowY: \"scroll\",\n      borderTop: \"1px solid #EBEBEB\",\n      paddingTop: 6\n    },\n\n    suggestionsContainerOpenNavSearch: {\n      position: \"absolute\",\n      zIndex: 1,\n      left: 0,\n      right: 0,\n      top: 46,\n      maxHeight: 322,\n      overflowY: \"scroll\",\n      borderTop: \"1px solid #EBEBEB\",\n      paddingTop: 5,\n      width: \"calc(100% + 12vw)\"\n    },\n    suggestion: {\n      display: \"block\"\n    },\n    suggestionsList: {\n      margin: 0,\n      padding: 0,\n      listStyleType: \"none\"\n    },\n    outlineInput: {\n      padding: \"12px 16px\"\n    },\n    input: {\n      color: \"#000\"\n    },\n    marginSearch: {\n      marginLeft: 23\n    },\n    gutters: {\n      paddingLeft: 22\n    },\n    suggestionText: {\n      marginLeft: 26,\n      fontSize: 14\n    },\n    searchIcon: {\n      width: 23,\n      height: 23,\n      verticalAlign: \"sub\"\n    },\n    paperShadow: {\n      boxShadow: \"#1a1a1d 0px 9px 26px -14px\"\n    }\n  });\n\nconst AutosuggestSearch: ComponentType<Iprops> = (props: Iprops) => {\n  const {\n    classes,\n    searchText,\n    setSearchText,\n    updateSearchText,\n    updateSearchCity,\n    updateSearchDistrict,\n    setCityId,\n    setDistrictId,\n    isNav\n  } = props;\n  const [suggestions, setSuggestions] = useState<any>([]);\n\n  //const [inputValue, setInputValue] = useState<any>(filter.searchText);\n\n  const renderSuggestion = (\n    suggestion: SearchSuggestRes,\n    { query, isHighlighted }: any\n  ) => {\n    const matches = match(suggestion.name, query);\n    const parts = parse(suggestion.name, matches);\n    // console.log(parts, matches);\n    return (\n      <MenuItem\n        selected={isHighlighted}\n        component=\"div\"\n        classes={{ gutters: classes.gutters }}\n      >\n        <div>\n          {suggestion.type === IS_SEARCH_CITY ||\n            suggestion.type === IS_SEARCH_DISTRICT ? (\n              <HomeIcon className={classes.searchIcon} />\n            ) : (\n              <LocationIcon className={classes.searchIcon} />\n            )}\n        </div>\n        <div className={classes.suggestionText}>\n          {parts.map((part: { text: React.ReactNode; highlight: any }, index) => (\n            <span key={index}>{part.text}</span>\n          ))}\n        </div>\n      </MenuItem>\n    );\n  };\n\n  const getSuggestionValue = (suggestion: SearchSuggestRes) => {\n    setSearchText(suggestion.name);\n    return suggestion.name;\n  };\n\n  const getSuggestions = (value: any) => {\n    searchSuggest(value)\n      .then(data => {\n        setSuggestions(data);\n      })\n      .catch(err => console.log(err));\n  };\n  const handleSuggestionsFetchRequested = ({ value }: { value: any }) => {\n    getSuggestions(value);\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n  const onChange = (e: any, { newValue }: { newValue: any }) => {\n    setSearchText(newValue);\n    updateSearchText(newValue);\n  };\n\n  const handleSuggestionSelected = (\n    e: any,\n    { suggestion, method }: { suggestion: SearchSuggestRes; method: string }\n  ) => {\n    if (method === \"enter\") {\n      e.preventDefault();\n    }\n\n    if (suggestion.type === 1) {\n      setCityId(suggestion.id);\n      setDistrictId(\"\");\n      updateSearchCity(suggestion.id);\n      updateSearchDistrict(undefined);\n      updateSearchText(suggestion.name);\n      setSearchText(suggestion.name);\n    } else if (suggestion.type === 2) {\n      setDistrictId(suggestion.id);\n      setCityId(\"\");\n      updateSearchDistrict(suggestion.id);\n      updateSearchCity(undefined);\n      updateSearchText(suggestion.name);\n      setSearchText(suggestion.name);\n\n    } else if (suggestion.type === 3) {\n      setDistrictId(\"\");\n      setCityId(\"\");\n      updateSearchDistrict(undefined);\n      updateSearchCity(undefined);\n      setSearchText(suggestion.name);\n      updateSearchText(suggestion.name);\n    }\n  };\n\n  const renderInputComponent = (inputProps: any) => {\n    const { classes, inputRef = () => { }, ref, ...other } = inputProps;\n    return (\n      <TextField\n        fullWidth\n        classes={{ marginDense: classes.marginDense }}\n        inputProps={{\n          className: classes.outlineInput\n        }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon\n                className={classes.marginSearch}\n              />\n            </InputAdornment>\n          ),\n          inputRef: node => {\n            ref(node);\n            inputRef(node);\n          },\n          classes: {\n            input: classes.input\n          },\n          disableUnderline: true\n        }}\n        {...other}\n      />\n    );\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    onSuggestionSelected: handleSuggestionSelected,\n    getSuggestionValue,\n    renderSuggestion\n  };\n\n\n\n  return (\n    <ErrorBoundary>\n      <Autosuggest\n        {...autosuggestProps}\n        // alwaysRenderSuggestions={true}\n        inputProps={{\n          classes,\n          id: \"search-autosuggest-simple\",\n          placeholder: \"Bạn muốn tới đâu?\",\n          value: searchText,\n          onChange\n        }}\n        theme={{\n          container: classes.container,\n          suggestionsContainerOpen: isNav ? classes.suggestionsContainerOpenNavSearch : classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        }}\n        renderSuggestionsContainer={options => (\n          <Paper\n            {...options.containerProps}\n            square\n            classes={{ root: classes.paperShadow }}\n          >\n            {options.children}\n          </Paper>\n        )}\n      />\n    </ErrorBoundary>\n  );\n};\n\nconst mapStateToProps = (state: ReducersType) => {\n  return {\n    filter: state.searchFilter\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    updateSearchText: (inputSearch: string) => {\n      dispatch({\n        type: \"SET_SEARCH_TEXT\",\n        searchText: inputSearch\n      });\n    },\n    updateSearchCity: (city_id: number | undefined) => {\n      dispatch({\n        type: \"SET_SEARCH_CITY\",\n        city_id: city_id\n      });\n    },\n    updateSearchDistrict: (district_id: number | undefined) => {\n      dispatch({\n        type: \"SET_SEARCH_DISTRICT\",\n        district_id: district_id\n      });\n    }\n  };\n};\n\nexport default compose<Iprops, any>(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withStyles(styles),\n  memo\n)(AutosuggestSearch);\n"]},"metadata":{},"sourceType":"module"}