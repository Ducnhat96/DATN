{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/views/Rooms/RoomListingDetails.tsx\";\nimport Grid from '@material-ui/core/Grid/Grid';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport React, { Fragment, useContext, useEffect, useState } from 'react';\nimport { compose } from 'recompose';\nimport RoomCardNew from '@/components/Rooms/RoomCardNew';\nimport { RoomIndexContext, getRooms, loadMoreRooms } from '@/store/context/Room/RoomIndexContext';\nimport _ from 'lodash';\nimport SimpleLoader from '@/components/Loading/SimpleLoader';\nimport NotFoundResource from '@/components/Loading/NotFoundResource';\nimport { GlobalContext } from '@/store/context/GlobalContext';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport classNames from 'classnames';\n\nvar styles = function styles(theme) {\n  return createStyles({\n    root: _defineProperty({}, theme.breakpoints.between('xs', 'sm'), {\n      marginBottom: '10vh'\n    })\n  });\n}; // @ts-ignore\n\n\nvar RoomListingDetails = function RoomListingDetails(props) {\n  var classes = props.classes;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEmpty = _useState2[0],\n      setIsEmpty = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useContext = useContext(GlobalContext),\n      location = _useContext.location;\n\n  var _useContext2 = useContext(RoomIndexContext),\n      state = _useContext2.state,\n      dispatch = _useContext2.dispatch;\n\n  var rooms = state.rooms,\n      meta = state.meta,\n      isLoadMore = state.isLoadMore;\n\n  var lazyLoadRooms = function lazyLoadRooms() {\n    if (isLoadMore && rooms.length > 0) loadMoreRooms(state, dispatch);\n  };\n\n  useEffect(function () {\n    setLoading(true);\n    dispatch({\n      type: 'setRooms',\n      rooms: []\n    });\n    getRooms(location).then(function (data) {\n      var roomData = data.data;\n      var pagination = data.meta;\n      setLoading(false);\n      dispatch({\n        type: 'setRooms',\n        rooms: roomData,\n        meta: pagination\n      });\n    }).catch(function (err) {\n      console.error(err);\n    });\n  }, [location]);\n  useEffect(function () {\n    setIsEmpty(meta !== null && rooms.length === 0 && !isLoading);\n  }, [rooms, isLoading]);\n  useEffect(function () {\n    var isLoadMore = !!(rooms && meta);\n    dispatch({\n      type: 'setLoadMore',\n      isLoadMore: isLoadMore\n    });\n  }, [!!meta]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(InfiniteScroll, {\n    loadMore: lazyLoadRooms,\n    hasMore: isLoadMore && !isLoading && !isEmpty,\n    threshold: 1400,\n    loader: React.createElement(SimpleLoader, {\n      key: 1,\n      height: 200,\n      width: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 16,\n    justify: \"center\",\n    className: classNames(_defineProperty({}, classes.root, !isLoadMore)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, rooms.length !== 0 ? _.map(rooms, function (room) {\n    return React.createElement(Grid, {\n      key: room.id,\n      item: true,\n      sm: 11,\n      md: 12,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(RoomCardNew, {\n      room: room,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }) : !isEmpty ? React.createElement(SimpleLoader, {\n    height: 200,\n    width: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }) : '', isEmpty ? React.createElement(NotFoundResource, {\n    height: 250,\n    width: 250,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }) : '')));\n};\n\nexport default compose(withStyles(styles))(RoomListingDetails);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/views/Rooms/RoomListingDetails.tsx"],"names":["Grid","createStyles","withStyles","React","Fragment","useContext","useEffect","useState","compose","RoomCardNew","RoomIndexContext","getRooms","loadMoreRooms","_","SimpleLoader","NotFoundResource","GlobalContext","InfiniteScroll","classNames","styles","theme","root","breakpoints","between","marginBottom","RoomListingDetails","props","classes","isEmpty","setIsEmpty","isLoading","setLoading","location","state","dispatch","rooms","meta","isLoadMore","lazyLoadRooms","length","type","then","data","roomData","pagination","catch","err","console","error","map","room","id"],"mappings":";;;AACA,OAAOA,IAAP,MAAiB,6BAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,KAAP,IAA8BC,QAA9B,EAAwCC,UAAxC,EAAoDC,SAApD,EAA+DC,QAA/D,QAA8E,OAA9E;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAAQC,gBAAR,EAA6CC,QAA7C,EAAuDC,aAAvD,QAA2E,uCAA3E;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,SAAwBC,aAAxB,QAA4C,+BAA5C;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAOA,IAAMC,MAAW,GAAG,SAAdA,MAAc,CAACC,KAAD;AAAA,SAAwBnB,YAAY,CAAC;AACvDoB,IAAAA,IAAI,sBACDD,KAAK,CAAEE,WAAP,CAAoBC,OAApB,CAA6B,IAA7B,EAAmC,IAAnC,CADC,EAC0C;AAC1CC,MAAAA,YAAY,EAAE;AAD4B,KAD1C;AADmD,GAAD,CAApC;AAAA,CAApB,C,CAQA;;;AACA,IAAMC,kBAAyC,GAAG,SAA5CA,kBAA4C,CAACC,KAAD,EAAmB;AAAA,MAC5DC,OAD4D,GACnCD,KADmC,CAC5DC,OAD4D;;AAAA,kBAEnCpB,QAAQ,CAAU,KAAV,CAF2B;AAAA;AAAA,MAE5DqB,OAF4D;AAAA,MAEnDC,UAFmD;;AAAA,mBAGnCtB,QAAQ,CAAU,KAAV,CAH2B;AAAA;AAAA,MAG5DuB,SAH4D;AAAA,MAGjDC,UAHiD;;AAAA,oBAInC1B,UAAU,CAAiBW,aAAjB,CAJyB;AAAA,MAI5DgB,QAJ4D,eAI5DA,QAJ4D;;AAAA,qBAKnC3B,UAAU,CAAoBK,gBAApB,CALyB;AAAA,MAK5DuB,KAL4D,gBAK5DA,KAL4D;AAAA,MAKrDC,QALqD,gBAKrDA,QALqD;;AAAA,MAO5DC,KAP4D,GAOjCF,KAPiC,CAO5DE,KAP4D;AAAA,MAOrDC,IAPqD,GAOjCH,KAPiC,CAOrDG,IAPqD;AAAA,MAO/CC,UAP+C,GAOjCJ,KAPiC,CAO/CI,UAP+C;;AASnE,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAID,UAAU,IAAIF,KAAK,CAACI,MAAN,GAAe,CAAjC,EAAoC3B,aAAa,CAACqB,KAAD,EAAQC,QAAR,CAAb;AACrC,GAFD;;AAIA5B,EAAAA,SAAS,CAAC,YAAM;AACdyB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,UADC;AAEPL,MAAAA,KAAK,EAAE;AAFA,KAAD,CAAR;AAIAxB,IAAAA,QAAQ,CAACqB,QAAD,CAAR,CAAmBS,IAAnB,CAAwB,UAACC,IAAD,EAAU;AAChC,UAAMC,QAAQ,GAAKD,IAAI,CAACA,IAAxB;AACA,UAAME,UAAU,GAAGF,IAAI,CAACN,IAAxB;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,UADC;AAEPL,QAAAA,KAAK,EAAEQ,QAFA;AAGPP,QAAAA,IAAI,EAAEQ;AAHC,OAAD,CAAR;AAKD,KATD,EASGC,KATH,CASS,UAAAC,GAAG,EAAI;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAXD;AAYD,GAlBQ,EAkBN,CAACd,QAAD,CAlBM,CAAT;AAoBA1B,EAAAA,SAAS,CAAC,YAAM;AACduB,IAAAA,UAAU,CAAEO,IAAI,KAAK,IAAV,IAAoBD,KAAK,CAACI,MAAN,KAAiB,CAArC,IAA2C,CAACT,SAA7C,CAAV;AACD,GAFQ,EAEN,CAACK,KAAD,EAAQL,SAAR,CAFM,CAAT;AAIAxB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI+B,UAAU,GAAG,CAAC,EAAEF,KAAK,IAAIC,IAAX,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,aADC;AAEPH,MAAAA,UAAU,EAAVA;AAFO,KAAD,CAAR;AAID,GAPQ,EAON,CAAC,CAAC,CAACD,IAAH,CAPM,CAAT;AAQA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AACE,IAAA,QAAQ,EAAIE,aADd;AAEE,IAAA,OAAO,EAAID,UAAU,IAAI,CAACP,SAAf,IAA4B,CAACF,OAF1C;AAGE,IAAA,SAAS,EAAI,IAHf;AAIE,IAAA,MAAM,EAAI,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAI,CAArB;AAAwB,MAAA,MAAM,EAAI,GAAlC;AAAuC,MAAA,KAAK,EAAI,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAI,EAA3B;AAA+B,IAAA,OAAO,EAAG,QAAzC;AAAkD,IAAA,SAAS,EAAIV,UAAU,qBACtES,OAAO,CAACN,IAD8D,EACvD,CAACgB,UADsD,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGF,KAAK,CAACI,MAAN,KAAiB,CAAjB,GAAqB1B,CAAC,CAACoC,GAAF,CAAMd,KAAN,EAAa,UAACe,IAAD;AAAA,WACjC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAIA,IAAI,CAACC,EAAlB;AAAsB,MAAA,IAAI,MAA1B;AAA2B,MAAA,EAAE,EAAG,EAAhC;AAAoC,MAAA,EAAE,EAAI,EAA1C;AAA8C,MAAA,EAAE,EAAI,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAID,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADiC;AAAA,GAAb,CAArB,GAIK,CAACtB,OAAD,GACJ,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAI,GAAxB;AAA6B,IAAA,KAAK,EAAI,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAEF,EATN,EAUGA,OAAO,GAAG,oBAAC,gBAAD;AAAkB,IAAA,MAAM,EAAI,GAA5B;AAAiC,IAAA,KAAK,EAAI,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAuD,EAVjE,CANF,CADF,CADF;AAuBD,CApED;;AAsEA,eAAepB,OAAO,CACpBN,UAAU,CAACiB,MAAD,CADU,CAAP,CAEbM,kBAFa,CAAf","sourcesContent":["import {ThemeCustom} from '@/components/Theme/Theme';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport React, {ComponentType, Fragment, useContext, useEffect, useState} from 'react';\nimport {compose} from 'recompose';\nimport RoomCardNew from '@/components/Rooms/RoomCardNew';\nimport {RoomIndexContext, IRoomIndexContext, getRooms, loadMoreRooms} from '@/store/context/Room/RoomIndexContext';\nimport _ from 'lodash';\nimport SimpleLoader from '@/components/Loading/SimpleLoader';\nimport NotFoundResource from '@/components/Loading/NotFoundResource';\nimport {IGlobalContext, GlobalContext} from '@/store/context/GlobalContext';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport classNames from 'classnames';\nimport RoomCard from '@/components/Rooms/RoomCard';\n\ninterface IProps {\n  classes?: any\n}\n\nconst styles: any = (theme: ThemeCustom) => createStyles({\n  root: {\n    [theme!.breakpoints!.between!('xs', 'sm')]: {\n      marginBottom: '10vh',\n    },\n  },\n});\n\n// @ts-ignore\nconst RoomListingDetails: ComponentType<IProps> = (props: IProps) => {\n  const {classes}               = props;\n  const [isEmpty, setIsEmpty]   = useState<boolean>(false);\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const {location}              = useContext<IGlobalContext>(GlobalContext);\n  const {state, dispatch}       = useContext<IRoomIndexContext>(RoomIndexContext);\n\n  const {rooms, meta, isLoadMore} = state;\n\n  const lazyLoadRooms = () => {\n    if (isLoadMore && rooms.length > 0) loadMoreRooms(state, dispatch);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    dispatch({\n      type: 'setRooms',\n      rooms: [],\n    });\n    getRooms(location).then((data) => {\n      const roomData   = data.data;\n      const pagination = data.meta;\n      setLoading(false);\n      dispatch({\n        type: 'setRooms',\n        rooms: roomData,\n        meta: pagination,\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [location]);\n\n  useEffect(() => {\n    setIsEmpty((meta !== null) && (rooms.length === 0) && !isLoading);\n  }, [rooms, isLoading]);\n\n  useEffect(() => {\n    let isLoadMore = !!(rooms && meta);\n\n    dispatch({\n      type: 'setLoadMore',\n      isLoadMore,\n    });\n  }, [!!meta]);\n  return (\n    <Fragment>\n      <InfiniteScroll\n        loadMore = {lazyLoadRooms}\n        hasMore = {isLoadMore && !isLoading && !isEmpty}\n        threshold = {1400}\n        loader = {<SimpleLoader key = {1} height = {200} width = {300} />}\n      >\n        <Grid container spacing = {16} justify = 'center' className = {classNames({\n          [classes.root]: !isLoadMore,\n        })}>\n          {rooms.length !== 0 ? _.map(rooms, (room) => (\n            <Grid key = {room.id} item sm ={11} md = {12} lg = {12}>\n              <RoomCardNew room = {room} />\n            </Grid>\n          )) : (!isEmpty ? (\n            <SimpleLoader height = {200} width = {300} />\n          ) : '')}\n          {isEmpty ? <NotFoundResource height = {250} width = {250} /> : ''}\n        </Grid>\n      </InfiniteScroll>\n    </Fragment>\n  );\n};\n\nexport default compose<IProps, any>(\n  withStyles(styles),\n)(RoomListingDetails);\n"]},"metadata":{},"sourceType":"module"}