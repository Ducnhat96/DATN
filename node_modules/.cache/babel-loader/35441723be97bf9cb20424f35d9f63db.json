{"ast":null,"code":"import _defineProperty from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Custom/MenuItemSelectWithIcon.tsx\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, { memo, useMemo } from \"react\";\nimport { compose } from \"recompose\";\nimport { components } from \"react-select\";\nimport HomeIcon from \"@material-ui/icons/HomeRounded\";\nimport LocationIcon from \"@material-ui/icons/LocationOnRounded\";\nimport Popular from \"@material-ui/icons/WhatshotRounded\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { IS_SEARCH_CITY, IS_SEARCH_DISTRICT, IS_SEARCH_ROOM } from \"@/types/Requests/Search/SearchResponse\";\nimport classNames from \"classnames\";\nvar Option = components.Option;\n\nvar styles = function styles(theme) {\n  return createStyles({\n    grow: {\n      flexGrow: 1\n    },\n    white: {\n      color: \"white\"\n    },\n    black: {\n      color: \"black\"\n    },\n    subTitle: {\n      color: \"#757575\"\n    },\n    title: {\n      marginLeft: 20\n    },\n    hotLocation: {\n      color: \"#e53935\",\n      padding: \"4px 8px\",\n      width: 20,\n      height: 20,\n      verticalAlign: 'middle'\n    },\n    descriptionChip: {\n      border: \"1px solid #dde9fd\",\n      color: \"#0664ff\",\n      borderWidth: \"1px\",\n      borderRadius: 5,\n      backgroundColor: \"#ffffff\",\n      padding: \"4px 8px\",\n      fontSize: 12,\n      fontWeight: 500\n    }\n  });\n};\n\nvar detailInfo = function detailInfo(data) {\n  switch (data.type) {\n    case IS_SEARCH_CITY:\n      return {\n        icon: React.createElement(LocationIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }),\n        description: data.description,\n        name: data.name,\n        hot_txt: data.hot_txt,\n        hot: data.hot,\n        city: data.city,\n        country: data.country,\n        type: data.type\n      };\n\n    case IS_SEARCH_DISTRICT:\n      return {\n        icon: React.createElement(LocationIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }),\n        description: data.description,\n        name: data.name,\n        hot_txt: data.hot_txt,\n        hot: data.hot,\n        city: data.city,\n        country: data.country,\n        type: data.type\n      };\n\n    case IS_SEARCH_ROOM:\n      return {\n        icon: React.createElement(HomeIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }),\n        description: data.room_type_text,\n        name: data.name,\n        hot_txt: data.hot_txt,\n        hot: data.hot,\n        city: data.city,\n        country: data.country,\n        type: data.type\n      };\n\n    default:\n      return {\n        icon: \"\",\n        description: data.description,\n        name: data.name,\n        hot_txt: data.hot_txt,\n        hot: data.hot,\n        city: data.city,\n        country: data.country,\n        type: data.type\n      };\n  }\n}; // @ts-ignore\n\n\nvar MenuItemSelectWithIcon = function MenuItemSelectWithIcon(props) {\n  var _classNames, _classNames3;\n\n  var classes = props.classes,\n      data = props.data,\n      isSelected = props.isSelected;\n  var name = data.name,\n      error = data.error,\n      hot_txt = data.hot_txt,\n      hot = data.hot,\n      city = data.city,\n      country = data.country,\n      type = data.type;\n  var info = useMemo(function () {\n    return detailInfo(data);\n  }, []);\n  return React.createElement(Option, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    className: classes.grow,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.white, isSelected), _defineProperty(_classNames, classes.black, !isSelected), _classNames)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, info.icon), React.createElement(Grid, {\n    item: true,\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classNames(_defineProperty({}, classes.white, isSelected)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, !error ? name : error, \" \", hot == 1 ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, !error ? React.createElement(Popular, {\n    className: classes.hotLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }) : error) : \"\"), React.createElement(Typography, {\n    className: classNames((_classNames3 = {}, _defineProperty(_classNames3, classes.white, isSelected), _defineProperty(_classNames3, classes.subTitle, !isSelected), _classNames3)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, type == 1 ? country : city !== null ? city : \"\")))));\n};\n\nexport default compose(withStyles(styles), memo)(MenuItemSelectWithIcon);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Custom/MenuItemSelectWithIcon.tsx"],"names":["createStyles","withStyles","React","memo","useMemo","compose","components","HomeIcon","LocationIcon","Popular","Grid","Typography","IS_SEARCH_CITY","IS_SEARCH_DISTRICT","IS_SEARCH_ROOM","classNames","Option","styles","theme","grow","flexGrow","white","color","black","subTitle","title","marginLeft","hotLocation","padding","width","height","verticalAlign","descriptionChip","border","borderWidth","borderRadius","backgroundColor","fontSize","fontWeight","detailInfo","data","type","icon","description","name","hot_txt","hot","city","country","room_type_text","MenuItemSelectWithIcon","props","classes","isSelected","error","info"],"mappings":"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","sourcesContent":["import { ThemeCustom } from \"@/components/Theme/Theme\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport React, { FunctionComponent, memo, useMemo } from \"react\";\nimport { compose } from \"recompose\";\nimport { components } from \"react-select\";\nimport HomeIcon from \"@material-ui/icons/HomeRounded\";\nimport LocationIcon from \"@material-ui/icons/LocationOnRounded\";\nimport Popular from \"@material-ui/icons/WhatshotRounded\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { OptionProps } from \"react-select/lib/components/Option\";\nimport {\n  SearchSuggestRes,\n  IS_SEARCH_CITY,\n  IS_SEARCH_DISTRICT,\n  IS_SEARCH_ROOM\n} from \"@/types/Requests/Search/SearchResponse\";\nimport classNames from \"classnames\";\nimport Hidden from \"@material-ui/core/Hidden/Hidden\";\n\nconst { Option } = components;\n\ninterface IProps extends OptionProps<any> {\n  classes?: any;\n  data: SearchSuggestRes;\n}\n\ninterface ItemDetail {\n  icon: any;\n  description: string;\n  name: string;\n  hot_txt: string;\n  hot: number;\n  city: string;\n  country: string;\n  type: number;\n}\n\nconst styles: any = (theme: ThemeCustom) =>\n  createStyles({\n    grow: {\n      flexGrow: 1\n    },\n    white: {\n      color: \"white\"\n    },\n    black: {\n      color: \"black\"\n    },\n    subTitle: {\n      color: \"#757575\"\n    },\n    title: {\n      marginLeft: 20\n    },\n    hotLocation: {\n      color: \"#e53935\",\n      padding: \"4px 8px\",\n      width: 20,\n      height: 20,\n      verticalAlign: 'middle'\n    },\n    descriptionChip: {\n      border: \"1px solid #dde9fd\",\n      color: \"#0664ff\",\n      borderWidth: \"1px\",\n      borderRadius: 5,\n      backgroundColor: \"#ffffff\",\n      padding: \"4px 8px\",\n      fontSize: 12,\n      fontWeight: 500\n    }\n  });\n\nconst detailInfo = (data: SearchSuggestRes): ItemDetail => {\n  switch (data.type) {\n    case IS_SEARCH_CITY:\n      return {\n        icon: <LocationIcon />,\n        description: data.description,\n        name: data.name,\n        hot_txt: data.hot_txt,\n        hot: data.hot,\n        city: data.city,\n        country: data.country,\n        type: data.type\n      };\n    case IS_SEARCH_DISTRICT:\n      return {\n        icon: <LocationIcon />,\n        description: data.description,\n        name: data.name,\n        hot_txt: data.hot_txt,\n        hot: data.hot,\n        city: data.city,\n        country: data.country,\n        type: data.type\n      };\n    case IS_SEARCH_ROOM:\n      return {\n        icon: <HomeIcon />,\n        description: data.room_type_text,\n        name: data.name,\n        hot_txt: data.hot_txt,\n        hot: data.hot,\n        city: data.city,\n        country: data.country,\n        type: data.type\n      };\n    default:\n      return {\n        icon: \"\",\n        description: data.description,\n        name: data.name,\n        hot_txt: data.hot_txt,\n        hot: data.hot,\n        city: data.city,\n        country: data.country,\n        type: data.type\n      };\n  }\n};\n\n// @ts-ignore\nconst MenuItemSelectWithIcon: FunctionComponent<IProps> = (props: IProps) => {\n  const { classes, data, isSelected } = props;\n\n  const { name, error, hot_txt, hot, city, country, type } = data;\n\n  const info = useMemo(() => detailInfo(data), []);\n\n  return (\n    <Option {...props}>\n      <Grid container alignItems=\"center\" justify=\"center\">\n        <Grid\n          container\n          item\n          xs={12}\n          sm={12}\n          md={12}\n          className={classes.grow}\n          alignItems=\"center\"\n        >\n          <Grid\n            item\n            className={classNames({\n              [classes.white]: isSelected,\n              [classes.black]: !isSelected\n            })}\n          >\n            {info.icon}\n          </Grid>\n          <Grid item className={classes.title}>\n            <Typography\n              className={classNames({\n                [classes.white]: isSelected\n              })}\n            >\n              {!error ? name : error}{\" \"}\n              {hot == 1 ? (\n                <span>\n                  {!error ? <Popular className={classes.hotLocation} /> : error}\n                </span>\n              ) : (\n                \"\"\n              )}\n            </Typography>\n            <Typography\n              className={classNames({\n                [classes.white]: isSelected,\n                [classes.subTitle]: !isSelected\n              })}\n            >\n              {type == 1 ? country : city !== null ? city : \"\"}\n            </Typography>\n          </Grid>\n        </Grid>\n        {/* <Hidden smDown>\n          <Grid container item xs = {2} sm = {4} md = {4} justify = 'flex-end'>\n            <Typography variant = 'subtitle2' className = {\n              classNames({\n                [classes.white]: isSelected,\n              })\n            }>\n              <span className={classes.descriptionChip}>{info.description}</span>\n            </Typography>\n          </Grid>\n        </Hidden> */}\n      </Grid>\n    </Option>\n  );\n};\n\nexport default compose<IProps, any>(\n  withStyles(styles),\n  memo\n)(MenuItemSelectWithIcon);\n"]},"metadata":{},"sourceType":"module"}