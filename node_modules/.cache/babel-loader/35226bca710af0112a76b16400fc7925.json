{"ast":null,"code":"import _slicedToArray from \"/home/ducnhat/Code/x-files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ducnhat/Code/x-files/src/components/Utils/CountBar.tsx\";\nimport * as act from \"@/store/actions/actionTypes\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport React, { useEffect, useState, Fragment, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\n// import NavigateNext from '@material-ui/icons/NavigateNext';\n// import NavigateBefore from '@material-ui/icons/NavigateBefore';\nimport NavigateNext from \"@material-ui/icons/AddCircleOutline\";\nimport NavigateBefore from \"@material-ui/icons/RemoveCircleOutline\";\nimport { newRoomLocation } from \"@/store/context/Room/RoomIndexContext\";\nimport { GlobalContext } from \"@/store/context/GlobalContext\";\n\n// @ts-ignore\nvar CountBar = function CountBar(props) {\n  var filter = props.filter,\n      hasApplyButton = props.hasApplyButton;\n  var classes = props[\"p-classes\"];\n  var dividerStatus = props.divider;\n  var pluralLowerCase = props.name.toLowerCase() + \"Count\";\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var _useContext = useContext(GlobalContext),\n      history = _useContext.history;\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      city_id = _useState4[0],\n      setCityId = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      district_id = _useState6[0],\n      setDistrictId = _useState6[1];\n\n  useEffect(function () {\n    var count = props.filter[pluralLowerCase];\n    setStatus(count <= 1);\n  }, [props.filter[pluralLowerCase]]);\n  /**\n   * Change value of property\n   * @param event\n   * @param number\n   */\n\n  var handleCount = function handleCount(event, number) {\n    event.preventDefault();\n    props.changeValue(number, pluralLowerCase);\n  };\n\n  var applyFilter = function applyFilter() {\n    var pushQuery = {\n      number_of_rooms: filter.roomsCount,\n      check_in: filter.startDate,\n      check_out: filter.endDate,\n      number_of_guests: filter.guestsCount,\n      most_popular: null,\n      rent_type: filter.bookingType !== 0 ? filter.bookingType : undefined,\n      city_id: city_id ? city_id : '',\n      district_id: district_id ? district_id : ''\n    };\n    var location = newRoomLocation(pushQuery);\n    history.push(location);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: 2,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick(event) {\n      return handleCount(event, -1);\n    },\n    disabled: status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(NavigateBefore, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    sm: 8,\n    xs: 6,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.countNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, props.filter[pluralLowerCase]), \"\\xA0\", React.createElement(\"span\", {\n    className: classes.textCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, props.filter[pluralLowerCase] > 1 ? props.plural : props.singular)), React.createElement(Grid, {\n    container: true,\n    item: true,\n    sm: 2,\n    xs: 3,\n    alignItems: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick(event) {\n      return handleCount(event, 1);\n    },\n    style: {\n      marginLeft: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(NavigateNext, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }))), dividerStatus ? React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })) : \"\"), hasApplyButton ? React.createElement(Button, {\n    className: classes.applyButton,\n    onClick: applyFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"\\xC1p d\\u1EE5ng\") : \"\");\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    filter: state.searchFilter\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeValue: function changeValue(value, field) {\n      return dispatch({\n        type: act.ADD_VALUE,\n        field: field,\n        value: value\n      });\n    }\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(CountBar);","map":{"version":3,"sources":["/home/ducnhat/Code/x-files/src/components/Utils/CountBar.tsx"],"names":["act","Button","Divider","Grid","React","useEffect","useState","Fragment","useContext","connect","compose","NavigateNext","NavigateBefore","newRoomLocation","GlobalContext","CountBar","props","filter","hasApplyButton","classes","dividerStatus","divider","pluralLowerCase","name","toLowerCase","status","setStatus","history","city_id","setCityId","district_id","setDistrictId","count","handleCount","event","number","preventDefault","changeValue","applyFilter","pushQuery","number_of_rooms","roomsCount","check_in","startDate","check_out","endDate","number_of_guests","guestsCount","most_popular","rent_type","bookingType","undefined","location","push","textAlign","countNumber","textCount","plural","singular","marginLeft","applyButton","mapStateToProps","state","searchFilter","mapDispatchToProps","dispatch","value","field","type","ADD_VALUE"],"mappings":"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","sourcesContent":["import * as act from \"@/store/actions/actionTypes\";\nimport { ReducersType } from \"@/store/reducers\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport React, {\n  ComponentType,\n  MouseEvent,\n  useEffect,\n  useState,\n  Fragment,\n  useContext\n} from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport { RouterProps } from 'react-router';\nimport { Dispatch } from \"redux\";\nimport { withRouter, RouteProps } from 'react-router-dom';\n// import NavigateNext from '@material-ui/icons/NavigateNext';\n// import NavigateBefore from '@material-ui/icons/NavigateBefore';\nimport NavigateNext from \"@material-ui/icons/AddCircleOutline\";\nimport NavigateBefore from \"@material-ui/icons/RemoveCircleOutline\";\nimport { RoomUrlParams } from \"@/types/Requests/Rooms/RoomRequests\";\nimport { newRoomLocation } from \"@/store/context/Room/RoomIndexContext\";\nimport { IGlobalContext, GlobalContext } from \"@/store/context/GlobalContext\";\n\n\ninterface IProps extends RouteProps, RouterProps {\n  \"p-classes\": any;\n  singular: string;\n  plural: string;\n  name: string;\n  divider?: boolean;\n  hasApplyButton?: boolean;\n}\n\ninterface IPropsLocal extends IProps {\n  filter?: any;\n  changeValue(value: number, field: string): Dispatch;\n}\n\n// @ts-ignore\nconst CountBar: ComponentType<IProps> = (props: IPropsLocal) => {\n  const { filter, hasApplyButton } = props;\n  const classes = props[\"p-classes\"];\n  const dividerStatus = props.divider;\n  let pluralLowerCase = props.name.toLowerCase() + \"Count\";\n  const [status, setStatus] = useState(true);\n  const { history } = useContext<IGlobalContext>(GlobalContext);\n  const [city_id, setCityId] = useState('');\n  const [district_id, setDistrictId] = useState('');\n\n\n  useEffect(() => {\n    let count = props.filter[pluralLowerCase];\n    setStatus(count <= 1);\n  }, [props.filter[pluralLowerCase]]);\n\n  /**\n   * Change value of property\n   * @param event\n   * @param number\n   */\n  const handleCount = (event: MouseEvent<HTMLElement>, number: number) => {\n    event.preventDefault();\n    props.changeValue!(number, pluralLowerCase);\n  };\n\n\n\n  const applyFilter = () => {\n    const pushQuery: RoomUrlParams = {\n      number_of_rooms: filter.roomsCount,\n      check_in: filter.startDate,\n      check_out: filter.endDate,\n      number_of_guests: filter.guestsCount,\n      most_popular: null,\n      rent_type: filter.bookingType !== 0 ? filter.bookingType : undefined,\n      city_id: city_id ? city_id : '',\n      district_id: district_id ? district_id : ''\n\n    };\n    const location = newRoomLocation(pushQuery);\n    history.push(location);\n  };\n\n  return (\n    <Fragment>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item sm={2} xs={3}>\n          <Button onClick={event => handleCount(event, -1)} disabled={status}>\n            <NavigateBefore />\n          </Button>\n        </Grid>\n        <Grid\n          item\n          sm={8}\n          xs={6}\n          style={{\n            textAlign: \"center\"\n          }}\n        >\n          <span className={classes.countNumber}>\n            {props.filter[pluralLowerCase]}\n          </span>\n          &nbsp;\n          <span className={classes.textCount}>\n            {props.filter[pluralLowerCase] > 1 ? props.plural : props.singular}\n          </span>\n        </Grid>\n        <Grid container item sm={2} xs={3} alignItems=\"flex-end\">\n          <Button\n            onClick={event => handleCount(event, 1)}\n            style={{ marginLeft: \"auto\" }}\n          >\n            <NavigateNext />\n          </Button>\n        </Grid>\n        {dividerStatus ? (\n          <Grid item xs={12}>\n            <Divider />\n          </Grid>\n        ) : (\n            \"\"\n          )}\n      </Grid>\n      {hasApplyButton ? (\n        <Button className={classes.applyButton} onClick={applyFilter}>\n          Áp dụng\n        </Button>\n      ) : (\n          \"\"\n        )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state: ReducersType) => {\n  return {\n    filter: state.searchFilter\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    changeValue: (value: number, field: string) =>\n      dispatch({\n        type: act.ADD_VALUE,\n        field: field,\n        value: value\n      })\n  };\n};\n\nexport default compose<IProps, any>(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(CountBar);\n"]},"metadata":{},"sourceType":"module"}